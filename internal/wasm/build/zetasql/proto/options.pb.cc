// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/proto/options.proto

#include "zetasql/proto/options.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_zetasql_2fproto_2foptions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2foptions_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LanguageOptionsProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2foptions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllowedHintsAndOptionsProto_HintProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2foptions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AllowedHintsAndOptionsProto_OptionProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2foptions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AnalyzerOptionsProto_QueryParameterProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2foptions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AnalyzerOptionsProto_SystemVariableProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2foptions_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_AllowedHintsAndOptionsProto;
}  // namespace protobuf_zetasql_2fproto_2foptions_2eproto
namespace protobuf_zetasql_2fpublic_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2ftype_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ArrayTypeProto;
}  // namespace protobuf_zetasql_2fpublic_2ftype_2eproto
namespace zetasql {
class ZetaSQLBuiltinFunctionOptionsProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ZetaSQLBuiltinFunctionOptionsProto>
      _instance;
} _ZetaSQLBuiltinFunctionOptionsProto_default_instance_;
class LanguageOptionsProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LanguageOptionsProto>
      _instance;
} _LanguageOptionsProto_default_instance_;
class AllowedHintsAndOptionsProto_HintProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllowedHintsAndOptionsProto_HintProto>
      _instance;
} _AllowedHintsAndOptionsProto_HintProto_default_instance_;
class AllowedHintsAndOptionsProto_OptionProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllowedHintsAndOptionsProto_OptionProto>
      _instance;
} _AllowedHintsAndOptionsProto_OptionProto_default_instance_;
class AllowedHintsAndOptionsProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllowedHintsAndOptionsProto>
      _instance;
} _AllowedHintsAndOptionsProto_default_instance_;
class AnalyzerOptionsProto_QueryParameterProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnalyzerOptionsProto_QueryParameterProto>
      _instance;
} _AnalyzerOptionsProto_QueryParameterProto_default_instance_;
class AnalyzerOptionsProto_SystemVariableProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnalyzerOptionsProto_SystemVariableProto>
      _instance;
} _AnalyzerOptionsProto_SystemVariableProto_default_instance_;
class AnalyzerOptionsProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AnalyzerOptionsProto>
      _instance;
} _AnalyzerOptionsProto_default_instance_;
}  // namespace zetasql
namespace protobuf_zetasql_2fproto_2foptions_2eproto {
static void InitDefaultsZetaSQLBuiltinFunctionOptionsProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ZetaSQLBuiltinFunctionOptionsProto_default_instance_;
    new (ptr) ::zetasql::ZetaSQLBuiltinFunctionOptionsProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ZetaSQLBuiltinFunctionOptionsProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ZetaSQLBuiltinFunctionOptionsProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsZetaSQLBuiltinFunctionOptionsProto}, {
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_LanguageOptionsProto.base,}};

static void InitDefaultsLanguageOptionsProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_LanguageOptionsProto_default_instance_;
    new (ptr) ::zetasql::LanguageOptionsProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::LanguageOptionsProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LanguageOptionsProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLanguageOptionsProto}, {}};

static void InitDefaultsAllowedHintsAndOptionsProto_HintProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_AllowedHintsAndOptionsProto_HintProto_default_instance_;
    new (ptr) ::zetasql::AllowedHintsAndOptionsProto_HintProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::AllowedHintsAndOptionsProto_HintProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllowedHintsAndOptionsProto_HintProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllowedHintsAndOptionsProto_HintProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,}};

static void InitDefaultsAllowedHintsAndOptionsProto_OptionProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_AllowedHintsAndOptionsProto_OptionProto_default_instance_;
    new (ptr) ::zetasql::AllowedHintsAndOptionsProto_OptionProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::AllowedHintsAndOptionsProto_OptionProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllowedHintsAndOptionsProto_OptionProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllowedHintsAndOptionsProto_OptionProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,}};

static void InitDefaultsAllowedHintsAndOptionsProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_AllowedHintsAndOptionsProto_default_instance_;
    new (ptr) ::zetasql::AllowedHintsAndOptionsProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::AllowedHintsAndOptionsProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AllowedHintsAndOptionsProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAllowedHintsAndOptionsProto}, {
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto_HintProto.base,
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto_OptionProto.base,}};

static void InitDefaultsAnalyzerOptionsProto_QueryParameterProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_AnalyzerOptionsProto_QueryParameterProto_default_instance_;
    new (ptr) ::zetasql::AnalyzerOptionsProto_QueryParameterProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::AnalyzerOptionsProto_QueryParameterProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AnalyzerOptionsProto_QueryParameterProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAnalyzerOptionsProto_QueryParameterProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,}};

static void InitDefaultsAnalyzerOptionsProto_SystemVariableProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_AnalyzerOptionsProto_SystemVariableProto_default_instance_;
    new (ptr) ::zetasql::AnalyzerOptionsProto_SystemVariableProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::AnalyzerOptionsProto_SystemVariableProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AnalyzerOptionsProto_SystemVariableProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAnalyzerOptionsProto_SystemVariableProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,}};

static void InitDefaultsAnalyzerOptionsProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_AnalyzerOptionsProto_default_instance_;
    new (ptr) ::zetasql::AnalyzerOptionsProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::AnalyzerOptionsProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_AnalyzerOptionsProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsAnalyzerOptionsProto}, {
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_LanguageOptionsProto.base,
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto_QueryParameterProto.base,
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto.base,
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto_SystemVariableProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ZetaSQLBuiltinFunctionOptionsProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LanguageOptionsProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllowedHintsAndOptionsProto_HintProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllowedHintsAndOptionsProto_OptionProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllowedHintsAndOptionsProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnalyzerOptionsProto_QueryParameterProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnalyzerOptionsProto_SystemVariableProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AnalyzerOptionsProto.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ZetaSQLBuiltinFunctionOptionsProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ZetaSQLBuiltinFunctionOptionsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ZetaSQLBuiltinFunctionOptionsProto, language_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ZetaSQLBuiltinFunctionOptionsProto, include_function_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ZetaSQLBuiltinFunctionOptionsProto, exclude_function_ids_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, name_resolution_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, product_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, error_on_deprecated_syntax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, enabled_language_features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, supported_statement_kinds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, supported_generic_entity_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::LanguageOptionsProto, reserved_keywords_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_HintProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_HintProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_HintProto, qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_HintProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_HintProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_HintProto, allow_unqualified_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_OptionProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_OptionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_OptionProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto_OptionProto, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto, disallow_unknown_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto, disallow_unknown_hints_with_qualifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto, hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AllowedHintsAndOptionsProto, option_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_QueryParameterProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_QueryParameterProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_QueryParameterProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_QueryParameterProto, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_SystemVariableProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_SystemVariableProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_SystemVariableProto, name_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto_SystemVariableProto, type_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, language_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, query_parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, positional_query_parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, expression_columns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, in_scope_expression_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, ddl_pseudo_columns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, error_message_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, default_timezone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, create_new_column_for_each_projected_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, prune_unused_columns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, allow_undeclared_parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, parameter_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, allowed_hints_and_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, statement_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, preserve_column_aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, system_variables_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, target_column_types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, enabled_rewrites_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::AnalyzerOptionsProto, parse_location_record_type_),
  1,
  ~0u,
  ~0u,
  ~0u,
  2,
  ~0u,
  4,
  0,
  7,
  8,
  9,
  5,
  3,
  6,
  10,
  ~0u,
  ~0u,
  ~0u,
  11,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::zetasql::ZetaSQLBuiltinFunctionOptionsProto)},
  { 11, 23, sizeof(::zetasql::LanguageOptionsProto)},
  { 30, 39, sizeof(::zetasql::AllowedHintsAndOptionsProto_HintProto)},
  { 43, 50, sizeof(::zetasql::AllowedHintsAndOptionsProto_OptionProto)},
  { 52, 61, sizeof(::zetasql::AllowedHintsAndOptionsProto)},
  { 65, 72, sizeof(::zetasql::AnalyzerOptionsProto_QueryParameterProto)},
  { 74, 81, sizeof(::zetasql::AnalyzerOptionsProto_SystemVariableProto)},
  { 83, 107, sizeof(::zetasql::AnalyzerOptionsProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ZetaSQLBuiltinFunctionOptionsProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_LanguageOptionsProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_AllowedHintsAndOptionsProto_HintProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_AllowedHintsAndOptionsProto_OptionProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_AllowedHintsAndOptionsProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_AnalyzerOptionsProto_QueryParameterProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_AnalyzerOptionsProto_SystemVariableProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_AnalyzerOptionsProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "zetasql/proto/options.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033zetasql/proto/options.proto\022\007zetasql\032%"
      "zetasql/public/builtin_function.proto\032\034z"
      "etasql/public/options.proto\032\031zetasql/pub"
      "lic/type.proto\032-zetasql/resolved_ast/res"
      "olved_node_kind.proto\"\325\001\n\"ZetaSQLBuiltin"
      "FunctionOptionsProto\0227\n\020language_options"
      "\030\001 \001(\0132\035.zetasql.LanguageOptionsProto\022:\n"
      "\024include_function_ids\030\002 \003(\0162\034.zetasql.Fu"
      "nctionSignatureId\022:\n\024exclude_function_id"
      "s\030\003 \003(\0162\034.zetasql.FunctionSignatureId\"\345\002"
      "\n\024LanguageOptionsProto\0229\n\024name_resolutio"
      "n_mode\030\002 \001(\0162\033.zetasql.NameResolutionMod"
      "e\022*\n\014product_mode\030\003 \001(\0162\024.zetasql.Produc"
      "tMode\022\"\n\032error_on_deprecated_syntax\030\004 \001("
      "\010\022;\n\031enabled_language_features\030\005 \003(\0162\030.z"
      "etasql.LanguageFeature\022<\n\031supported_stat"
      "ement_kinds\030\006 \003(\0162\031.zetasql.ResolvedNode"
      "Kind\022&\n\036supported_generic_entity_types\030\007"
      " \003(\t\022\031\n\021reserved_keywords\030\010 \003(\tJ\004\010\001\020\002\"\230\003"
      "\n\033AllowedHintsAndOptionsProto\022 \n\030disallo"
      "w_unknown_options\030\001 \001(\010\022-\n%disallow_unkn"
      "own_hints_with_qualifier\030\002 \003(\t\022<\n\004hint\030\003"
      " \003(\0132..zetasql.AllowedHintsAndOptionsPro"
      "to.HintProto\022@\n\006option\030\004 \003(\01320.zetasql.A"
      "llowedHintsAndOptionsProto.OptionProto\032i"
      "\n\tHintProto\022\021\n\tqualifier\030\001 \001(\t\022\014\n\004name\030\002"
      " \001(\t\022 \n\004type\030\003 \001(\0132\022.zetasql.TypeProto\022\031"
      "\n\021allow_unqualified\030\004 \001(\010\032=\n\013OptionProto"
      "\022\014\n\004name\030\001 \001(\t\022 \n\004type\030\002 \001(\0132\022.zetasql.T"
      "ypeProto\"\203\n\n\024AnalyzerOptionsProto\0227\n\020lan"
      "guage_options\030\001 \001(\0132\035.zetasql.LanguageOp"
      "tionsProto\022K\n\020query_parameters\030\002 \003(\01321.z"
      "etasql.AnalyzerOptionsProto.QueryParamet"
      "erProto\0227\n\033positional_query_parameters\030\014"
      " \003(\0132\022.zetasql.TypeProto\022M\n\022expression_c"
      "olumns\030\003 \003(\01321.zetasql.AnalyzerOptionsPr"
      "oto.QueryParameterProto\022U\n\032in_scope_expr"
      "ession_column\030\004 \001(\01321.zetasql.AnalyzerOp"
      "tionsProto.QueryParameterProto\022M\n\022ddl_ps"
      "eudo_columns\030\017 \003(\01321.zetasql.AnalyzerOpt"
      "ionsProto.QueryParameterProto\0225\n\022error_m"
      "essage_mode\030\006 \001(\0162\031.zetasql.ErrorMessage"
      "Mode\022\030\n\020default_timezone\030\007 \001(\t\0223\n+create"
      "_new_column_for_each_projected_output\030\024 "
      "\001(\010\022\034\n\024prune_unused_columns\030\t \001(\010\022#\n\033all"
      "ow_undeclared_parameters\030\n \001(\010\022.\n\016parame"
      "ter_mode\030\r \001(\0162\026.zetasql.ParameterMode\022G"
      "\n\031allowed_hints_and_options\030\013 \001(\0132$.zeta"
      "sql.AllowedHintsAndOptionsProto\0224\n\021state"
      "ment_context\030\016 \001(\0162\031.zetasql.StatementCo"
      "ntext\022\037\n\027preserve_column_aliases\030\021 \001(\010\022K"
      "\n\020system_variables\030\022 \003(\01321.zetasql.Analy"
      "zerOptionsProto.SystemVariableProto\022/\n\023t"
      "arget_column_types\030\023 \003(\0132\022.zetasql.TypeP"
      "roto\0225\n\020enabled_rewrites\030\025 \003(\0162\033.zetasql"
      ".ResolvedASTRewrite\022D\n\032parse_location_re"
      "cord_type\030\027 \001(\0162 .zetasql.ParseLocationR"
      "ecordType\032E\n\023QueryParameterProto\022\014\n\004name"
      "\030\001 \001(\t\022 \n\004type\030\002 \001(\0132\022.zetasql.TypeProto"
      "\032J\n\023SystemVariableProto\022\021\n\tname_path\030\001 \003"
      "(\t\022 \n\004type\030\002 \001(\0132\022.zetasql.TypeProtoJ\004\010\010"
      "\020\tJ\004\010\026\020\027J\004\010\020\020\021B)\n\022com.google.zetasqlB\023Ze"
      "taSQLOptionsProto"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2497);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zetasql/proto/options.proto", &protobuf_RegisterTypes);
  ::protobuf_zetasql_2fpublic_2fbuiltin_5ffunction_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2foptions_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2ftype_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_zetasql_2fproto_2foptions_2eproto
namespace zetasql {

// ===================================================================

void ZetaSQLBuiltinFunctionOptionsProto::InitAsDefaultInstance() {
  ::zetasql::_ZetaSQLBuiltinFunctionOptionsProto_default_instance_._instance.get_mutable()->language_options_ = const_cast< ::zetasql::LanguageOptionsProto*>(
      ::zetasql::LanguageOptionsProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZetaSQLBuiltinFunctionOptionsProto::kLanguageOptionsFieldNumber;
const int ZetaSQLBuiltinFunctionOptionsProto::kIncludeFunctionIdsFieldNumber;
const int ZetaSQLBuiltinFunctionOptionsProto::kExcludeFunctionIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZetaSQLBuiltinFunctionOptionsProto::ZetaSQLBuiltinFunctionOptionsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_ZetaSQLBuiltinFunctionOptionsProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
}
ZetaSQLBuiltinFunctionOptionsProto::ZetaSQLBuiltinFunctionOptionsProto(const ZetaSQLBuiltinFunctionOptionsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      include_function_ids_(from.include_function_ids_),
      exclude_function_ids_(from.exclude_function_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_language_options()) {
    language_options_ = new ::zetasql::LanguageOptionsProto(*from.language_options_);
  } else {
    language_options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
}

void ZetaSQLBuiltinFunctionOptionsProto::SharedCtor() {
  language_options_ = NULL;
}

ZetaSQLBuiltinFunctionOptionsProto::~ZetaSQLBuiltinFunctionOptionsProto() {
  // @@protoc_insertion_point(destructor:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  SharedDtor();
}

void ZetaSQLBuiltinFunctionOptionsProto::SharedDtor() {
  if (this != internal_default_instance()) delete language_options_;
}

void ZetaSQLBuiltinFunctionOptionsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ZetaSQLBuiltinFunctionOptionsProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZetaSQLBuiltinFunctionOptionsProto& ZetaSQLBuiltinFunctionOptionsProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_ZetaSQLBuiltinFunctionOptionsProto.base);
  return *internal_default_instance();
}


void ZetaSQLBuiltinFunctionOptionsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  include_function_ids_.Clear();
  exclude_function_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(language_options_ != NULL);
    language_options_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ZetaSQLBuiltinFunctionOptionsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zetasql.LanguageOptionsProto language_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.FunctionSignatureId include_function_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::FunctionSignatureId_IsValid(value)) {
            add_include_function_ids(static_cast< ::zetasql::FunctionSignatureId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 2,
                 ::zetasql::FunctionSignatureId_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_include_function_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.FunctionSignatureId exclude_function_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::FunctionSignatureId_IsValid(value)) {
            add_exclude_function_ids(static_cast< ::zetasql::FunctionSignatureId >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 3,
                 ::zetasql::FunctionSignatureId_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_exclude_function_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  return false;
#undef DO_
}

void ZetaSQLBuiltinFunctionOptionsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.LanguageOptionsProto language_options = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_language_options(), output);
  }

  // repeated .zetasql.FunctionSignatureId include_function_ids = 2;
  for (int i = 0, n = this->include_function_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->include_function_ids(i), output);
  }

  // repeated .zetasql.FunctionSignatureId exclude_function_ids = 3;
  for (int i = 0, n = this->exclude_function_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->exclude_function_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
}

::google::protobuf::uint8* ZetaSQLBuiltinFunctionOptionsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.LanguageOptionsProto language_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_language_options(), deterministic, target);
  }

  // repeated .zetasql.FunctionSignatureId include_function_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    2, this->include_function_ids_, target);

  // repeated .zetasql.FunctionSignatureId exclude_function_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    3, this->exclude_function_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  return target;
}

size_t ZetaSQLBuiltinFunctionOptionsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.FunctionSignatureId include_function_ids = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->include_function_ids_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->include_function_ids(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .zetasql.FunctionSignatureId exclude_function_ids = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->exclude_function_ids_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->exclude_function_ids(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // optional .zetasql.LanguageOptionsProto language_options = 1;
  if (has_language_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *language_options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZetaSQLBuiltinFunctionOptionsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ZetaSQLBuiltinFunctionOptionsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZetaSQLBuiltinFunctionOptionsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
    MergeFrom(*source);
  }
}

void ZetaSQLBuiltinFunctionOptionsProto::MergeFrom(const ZetaSQLBuiltinFunctionOptionsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  include_function_ids_.MergeFrom(from.include_function_ids_);
  exclude_function_ids_.MergeFrom(from.exclude_function_ids_);
  if (from.has_language_options()) {
    mutable_language_options()->::zetasql::LanguageOptionsProto::MergeFrom(from.language_options());
  }
}

void ZetaSQLBuiltinFunctionOptionsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZetaSQLBuiltinFunctionOptionsProto::CopyFrom(const ZetaSQLBuiltinFunctionOptionsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ZetaSQLBuiltinFunctionOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZetaSQLBuiltinFunctionOptionsProto::IsInitialized() const {
  return true;
}

void ZetaSQLBuiltinFunctionOptionsProto::Swap(ZetaSQLBuiltinFunctionOptionsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZetaSQLBuiltinFunctionOptionsProto::InternalSwap(ZetaSQLBuiltinFunctionOptionsProto* other) {
  using std::swap;
  include_function_ids_.InternalSwap(&other->include_function_ids_);
  exclude_function_ids_.InternalSwap(&other->exclude_function_ids_);
  swap(language_options_, other->language_options_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ZetaSQLBuiltinFunctionOptionsProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LanguageOptionsProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LanguageOptionsProto::kNameResolutionModeFieldNumber;
const int LanguageOptionsProto::kProductModeFieldNumber;
const int LanguageOptionsProto::kErrorOnDeprecatedSyntaxFieldNumber;
const int LanguageOptionsProto::kEnabledLanguageFeaturesFieldNumber;
const int LanguageOptionsProto::kSupportedStatementKindsFieldNumber;
const int LanguageOptionsProto::kSupportedGenericEntityTypesFieldNumber;
const int LanguageOptionsProto::kReservedKeywordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LanguageOptionsProto::LanguageOptionsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_LanguageOptionsProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.LanguageOptionsProto)
}
LanguageOptionsProto::LanguageOptionsProto(const LanguageOptionsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      enabled_language_features_(from.enabled_language_features_),
      supported_statement_kinds_(from.supported_statement_kinds_),
      supported_generic_entity_types_(from.supported_generic_entity_types_),
      reserved_keywords_(from.reserved_keywords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&name_resolution_mode_, &from.name_resolution_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_on_deprecated_syntax_) -
    reinterpret_cast<char*>(&name_resolution_mode_)) + sizeof(error_on_deprecated_syntax_));
  // @@protoc_insertion_point(copy_constructor:zetasql.LanguageOptionsProto)
}

void LanguageOptionsProto::SharedCtor() {
  ::memset(&name_resolution_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_on_deprecated_syntax_) -
      reinterpret_cast<char*>(&name_resolution_mode_)) + sizeof(error_on_deprecated_syntax_));
}

LanguageOptionsProto::~LanguageOptionsProto() {
  // @@protoc_insertion_point(destructor:zetasql.LanguageOptionsProto)
  SharedDtor();
}

void LanguageOptionsProto::SharedDtor() {
}

void LanguageOptionsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LanguageOptionsProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LanguageOptionsProto& LanguageOptionsProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_LanguageOptionsProto.base);
  return *internal_default_instance();
}


void LanguageOptionsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.LanguageOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_language_features_.Clear();
  supported_statement_kinds_.Clear();
  supported_generic_entity_types_.Clear();
  reserved_keywords_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&name_resolution_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&error_on_deprecated_syntax_) -
        reinterpret_cast<char*>(&name_resolution_mode_)) + sizeof(error_on_deprecated_syntax_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LanguageOptionsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.LanguageOptionsProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zetasql.NameResolutionMode name_resolution_mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::NameResolutionMode_IsValid(value)) {
            set_name_resolution_mode(static_cast< ::zetasql::NameResolutionMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ProductMode product_mode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::ProductMode_IsValid(value)) {
            set_product_mode(static_cast< ::zetasql::ProductMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool error_on_deprecated_syntax = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_error_on_deprecated_syntax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &error_on_deprecated_syntax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.LanguageFeature enabled_language_features = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::LanguageFeature_IsValid(value)) {
            add_enabled_language_features(static_cast< ::zetasql::LanguageFeature >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                5, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 5,
                 ::zetasql::LanguageFeature_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_enabled_language_features())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.ResolvedNodeKind supported_statement_kinds = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::ResolvedNodeKind_IsValid(value)) {
            add_supported_statement_kinds(static_cast< ::zetasql::ResolvedNodeKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 6,
                 ::zetasql::ResolvedNodeKind_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_supported_statement_kinds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string supported_generic_entity_types = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_supported_generic_entity_types()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->supported_generic_entity_types(this->supported_generic_entity_types_size() - 1).data(),
            static_cast<int>(this->supported_generic_entity_types(this->supported_generic_entity_types_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.LanguageOptionsProto.supported_generic_entity_types");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string reserved_keywords = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_reserved_keywords()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reserved_keywords(this->reserved_keywords_size() - 1).data(),
            static_cast<int>(this->reserved_keywords(this->reserved_keywords_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.LanguageOptionsProto.reserved_keywords");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.LanguageOptionsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.LanguageOptionsProto)
  return false;
#undef DO_
}

void LanguageOptionsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.LanguageOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.NameResolutionMode name_resolution_mode = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->name_resolution_mode(), output);
  }

  // optional .zetasql.ProductMode product_mode = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->product_mode(), output);
  }

  // optional bool error_on_deprecated_syntax = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->error_on_deprecated_syntax(), output);
  }

  // repeated .zetasql.LanguageFeature enabled_language_features = 5;
  for (int i = 0, n = this->enabled_language_features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->enabled_language_features(i), output);
  }

  // repeated .zetasql.ResolvedNodeKind supported_statement_kinds = 6;
  for (int i = 0, n = this->supported_statement_kinds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->supported_statement_kinds(i), output);
  }

  // repeated string supported_generic_entity_types = 7;
  for (int i = 0, n = this->supported_generic_entity_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->supported_generic_entity_types(i).data(), static_cast<int>(this->supported_generic_entity_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.LanguageOptionsProto.supported_generic_entity_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->supported_generic_entity_types(i), output);
  }

  // repeated string reserved_keywords = 8;
  for (int i = 0, n = this->reserved_keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reserved_keywords(i).data(), static_cast<int>(this->reserved_keywords(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.LanguageOptionsProto.reserved_keywords");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->reserved_keywords(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.LanguageOptionsProto)
}

::google::protobuf::uint8* LanguageOptionsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.LanguageOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.NameResolutionMode name_resolution_mode = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->name_resolution_mode(), target);
  }

  // optional .zetasql.ProductMode product_mode = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->product_mode(), target);
  }

  // optional bool error_on_deprecated_syntax = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->error_on_deprecated_syntax(), target);
  }

  // repeated .zetasql.LanguageFeature enabled_language_features = 5;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    5, this->enabled_language_features_, target);

  // repeated .zetasql.ResolvedNodeKind supported_statement_kinds = 6;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    6, this->supported_statement_kinds_, target);

  // repeated string supported_generic_entity_types = 7;
  for (int i = 0, n = this->supported_generic_entity_types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->supported_generic_entity_types(i).data(), static_cast<int>(this->supported_generic_entity_types(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.LanguageOptionsProto.supported_generic_entity_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->supported_generic_entity_types(i), target);
  }

  // repeated string reserved_keywords = 8;
  for (int i = 0, n = this->reserved_keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reserved_keywords(i).data(), static_cast<int>(this->reserved_keywords(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.LanguageOptionsProto.reserved_keywords");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->reserved_keywords(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.LanguageOptionsProto)
  return target;
}

size_t LanguageOptionsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.LanguageOptionsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.LanguageFeature enabled_language_features = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->enabled_language_features_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->enabled_language_features(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .zetasql.ResolvedNodeKind supported_statement_kinds = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->supported_statement_kinds_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->supported_statement_kinds(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated string supported_generic_entity_types = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->supported_generic_entity_types_size());
  for (int i = 0, n = this->supported_generic_entity_types_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->supported_generic_entity_types(i));
  }

  // repeated string reserved_keywords = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reserved_keywords_size());
  for (int i = 0, n = this->reserved_keywords_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->reserved_keywords(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional .zetasql.NameResolutionMode name_resolution_mode = 2;
    if (has_name_resolution_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->name_resolution_mode());
    }

    // optional .zetasql.ProductMode product_mode = 3;
    if (has_product_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->product_mode());
    }

    // optional bool error_on_deprecated_syntax = 4;
    if (has_error_on_deprecated_syntax()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LanguageOptionsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.LanguageOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const LanguageOptionsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LanguageOptionsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.LanguageOptionsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.LanguageOptionsProto)
    MergeFrom(*source);
  }
}

void LanguageOptionsProto::MergeFrom(const LanguageOptionsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.LanguageOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enabled_language_features_.MergeFrom(from.enabled_language_features_);
  supported_statement_kinds_.MergeFrom(from.supported_statement_kinds_);
  supported_generic_entity_types_.MergeFrom(from.supported_generic_entity_types_);
  reserved_keywords_.MergeFrom(from.reserved_keywords_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_resolution_mode_ = from.name_resolution_mode_;
    }
    if (cached_has_bits & 0x00000002u) {
      product_mode_ = from.product_mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      error_on_deprecated_syntax_ = from.error_on_deprecated_syntax_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LanguageOptionsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.LanguageOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LanguageOptionsProto::CopyFrom(const LanguageOptionsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.LanguageOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LanguageOptionsProto::IsInitialized() const {
  return true;
}

void LanguageOptionsProto::Swap(LanguageOptionsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LanguageOptionsProto::InternalSwap(LanguageOptionsProto* other) {
  using std::swap;
  enabled_language_features_.InternalSwap(&other->enabled_language_features_);
  supported_statement_kinds_.InternalSwap(&other->supported_statement_kinds_);
  supported_generic_entity_types_.InternalSwap(CastToBase(&other->supported_generic_entity_types_));
  reserved_keywords_.InternalSwap(CastToBase(&other->reserved_keywords_));
  swap(name_resolution_mode_, other->name_resolution_mode_);
  swap(product_mode_, other->product_mode_);
  swap(error_on_deprecated_syntax_, other->error_on_deprecated_syntax_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LanguageOptionsProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllowedHintsAndOptionsProto_HintProto::InitAsDefaultInstance() {
  ::zetasql::_AllowedHintsAndOptionsProto_HintProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::zetasql::TypeProto*>(
      ::zetasql::TypeProto::internal_default_instance());
}
void AllowedHintsAndOptionsProto_HintProto::clear_type() {
  if (type_ != NULL) type_->Clear();
  clear_has_type();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllowedHintsAndOptionsProto_HintProto::kQualifierFieldNumber;
const int AllowedHintsAndOptionsProto_HintProto::kNameFieldNumber;
const int AllowedHintsAndOptionsProto_HintProto::kTypeFieldNumber;
const int AllowedHintsAndOptionsProto_HintProto::kAllowUnqualifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllowedHintsAndOptionsProto_HintProto::AllowedHintsAndOptionsProto_HintProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto_HintProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.AllowedHintsAndOptionsProto.HintProto)
}
AllowedHintsAndOptionsProto_HintProto::AllowedHintsAndOptionsProto_HintProto(const AllowedHintsAndOptionsProto_HintProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_qualifier()) {
    qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qualifier_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::zetasql::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  allow_unqualified_ = from.allow_unqualified_;
  // @@protoc_insertion_point(copy_constructor:zetasql.AllowedHintsAndOptionsProto.HintProto)
}

void AllowedHintsAndOptionsProto_HintProto::SharedCtor() {
  qualifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_unqualified_) -
      reinterpret_cast<char*>(&type_)) + sizeof(allow_unqualified_));
}

AllowedHintsAndOptionsProto_HintProto::~AllowedHintsAndOptionsProto_HintProto() {
  // @@protoc_insertion_point(destructor:zetasql.AllowedHintsAndOptionsProto.HintProto)
  SharedDtor();
}

void AllowedHintsAndOptionsProto_HintProto::SharedDtor() {
  qualifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void AllowedHintsAndOptionsProto_HintProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllowedHintsAndOptionsProto_HintProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllowedHintsAndOptionsProto_HintProto& AllowedHintsAndOptionsProto_HintProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto_HintProto.base);
  return *internal_default_instance();
}


void AllowedHintsAndOptionsProto_HintProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      qualifier_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
  }
  allow_unqualified_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllowedHintsAndOptionsProto_HintProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string qualifier = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qualifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->qualifier().data(), static_cast<int>(this->qualifier().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.AllowedHintsAndOptionsProto.HintProto.qualifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.AllowedHintsAndOptionsProto.HintProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.TypeProto type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_unqualified = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_allow_unqualified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_unqualified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.AllowedHintsAndOptionsProto.HintProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.AllowedHintsAndOptionsProto.HintProto)
  return false;
#undef DO_
}

void AllowedHintsAndOptionsProto_HintProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string qualifier = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qualifier().data(), static_cast<int>(this->qualifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.HintProto.qualifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->qualifier(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.HintProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .zetasql.TypeProto type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // optional bool allow_unqualified = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->allow_unqualified(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.AllowedHintsAndOptionsProto.HintProto)
}

::google::protobuf::uint8* AllowedHintsAndOptionsProto_HintProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string qualifier = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qualifier().data(), static_cast<int>(this->qualifier().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.HintProto.qualifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->qualifier(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.HintProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .zetasql.TypeProto type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // optional bool allow_unqualified = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->allow_unqualified(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.AllowedHintsAndOptionsProto.HintProto)
  return target;
}

size_t AllowedHintsAndOptionsProto_HintProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string qualifier = 1;
    if (has_qualifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qualifier());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .zetasql.TypeProto type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_);
    }

    // optional bool allow_unqualified = 4;
    if (has_allow_unqualified()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllowedHintsAndOptionsProto_HintProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AllowedHintsAndOptionsProto_HintProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllowedHintsAndOptionsProto_HintProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.AllowedHintsAndOptionsProto.HintProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.AllowedHintsAndOptionsProto.HintProto)
    MergeFrom(*source);
  }
}

void AllowedHintsAndOptionsProto_HintProto::MergeFrom(const AllowedHintsAndOptionsProto_HintProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_qualifier();
      qualifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qualifier_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_type()->::zetasql::TypeProto::MergeFrom(from.type());
    }
    if (cached_has_bits & 0x00000008u) {
      allow_unqualified_ = from.allow_unqualified_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AllowedHintsAndOptionsProto_HintProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllowedHintsAndOptionsProto_HintProto::CopyFrom(const AllowedHintsAndOptionsProto_HintProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.AllowedHintsAndOptionsProto.HintProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllowedHintsAndOptionsProto_HintProto::IsInitialized() const {
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void AllowedHintsAndOptionsProto_HintProto::Swap(AllowedHintsAndOptionsProto_HintProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllowedHintsAndOptionsProto_HintProto::InternalSwap(AllowedHintsAndOptionsProto_HintProto* other) {
  using std::swap;
  qualifier_.Swap(&other->qualifier_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(allow_unqualified_, other->allow_unqualified_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllowedHintsAndOptionsProto_HintProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllowedHintsAndOptionsProto_OptionProto::InitAsDefaultInstance() {
  ::zetasql::_AllowedHintsAndOptionsProto_OptionProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::zetasql::TypeProto*>(
      ::zetasql::TypeProto::internal_default_instance());
}
void AllowedHintsAndOptionsProto_OptionProto::clear_type() {
  if (type_ != NULL) type_->Clear();
  clear_has_type();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllowedHintsAndOptionsProto_OptionProto::kNameFieldNumber;
const int AllowedHintsAndOptionsProto_OptionProto::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllowedHintsAndOptionsProto_OptionProto::AllowedHintsAndOptionsProto_OptionProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto_OptionProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.AllowedHintsAndOptionsProto.OptionProto)
}
AllowedHintsAndOptionsProto_OptionProto::AllowedHintsAndOptionsProto_OptionProto(const AllowedHintsAndOptionsProto_OptionProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::zetasql::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.AllowedHintsAndOptionsProto.OptionProto)
}

void AllowedHintsAndOptionsProto_OptionProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
}

AllowedHintsAndOptionsProto_OptionProto::~AllowedHintsAndOptionsProto_OptionProto() {
  // @@protoc_insertion_point(destructor:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  SharedDtor();
}

void AllowedHintsAndOptionsProto_OptionProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void AllowedHintsAndOptionsProto_OptionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllowedHintsAndOptionsProto_OptionProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllowedHintsAndOptionsProto_OptionProto& AllowedHintsAndOptionsProto_OptionProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto_OptionProto.base);
  return *internal_default_instance();
}


void AllowedHintsAndOptionsProto_OptionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllowedHintsAndOptionsProto_OptionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.AllowedHintsAndOptionsProto.OptionProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.TypeProto type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  return false;
#undef DO_
}

void AllowedHintsAndOptionsProto_OptionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.OptionProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.AllowedHintsAndOptionsProto.OptionProto)
}

::google::protobuf::uint8* AllowedHintsAndOptionsProto_OptionProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.OptionProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  return target;
}

size_t AllowedHintsAndOptionsProto_OptionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .zetasql.TypeProto type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllowedHintsAndOptionsProto_OptionProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AllowedHintsAndOptionsProto_OptionProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllowedHintsAndOptionsProto_OptionProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.AllowedHintsAndOptionsProto.OptionProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.AllowedHintsAndOptionsProto.OptionProto)
    MergeFrom(*source);
  }
}

void AllowedHintsAndOptionsProto_OptionProto::MergeFrom(const AllowedHintsAndOptionsProto_OptionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_type()->::zetasql::TypeProto::MergeFrom(from.type());
    }
  }
}

void AllowedHintsAndOptionsProto_OptionProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllowedHintsAndOptionsProto_OptionProto::CopyFrom(const AllowedHintsAndOptionsProto_OptionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.AllowedHintsAndOptionsProto.OptionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllowedHintsAndOptionsProto_OptionProto::IsInitialized() const {
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void AllowedHintsAndOptionsProto_OptionProto::Swap(AllowedHintsAndOptionsProto_OptionProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllowedHintsAndOptionsProto_OptionProto::InternalSwap(AllowedHintsAndOptionsProto_OptionProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllowedHintsAndOptionsProto_OptionProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllowedHintsAndOptionsProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllowedHintsAndOptionsProto::kDisallowUnknownOptionsFieldNumber;
const int AllowedHintsAndOptionsProto::kDisallowUnknownHintsWithQualifierFieldNumber;
const int AllowedHintsAndOptionsProto::kHintFieldNumber;
const int AllowedHintsAndOptionsProto::kOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllowedHintsAndOptionsProto::AllowedHintsAndOptionsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.AllowedHintsAndOptionsProto)
}
AllowedHintsAndOptionsProto::AllowedHintsAndOptionsProto(const AllowedHintsAndOptionsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      disallow_unknown_hints_with_qualifier_(from.disallow_unknown_hints_with_qualifier_),
      hint_(from.hint_),
      option_(from.option_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disallow_unknown_options_ = from.disallow_unknown_options_;
  // @@protoc_insertion_point(copy_constructor:zetasql.AllowedHintsAndOptionsProto)
}

void AllowedHintsAndOptionsProto::SharedCtor() {
  disallow_unknown_options_ = false;
}

AllowedHintsAndOptionsProto::~AllowedHintsAndOptionsProto() {
  // @@protoc_insertion_point(destructor:zetasql.AllowedHintsAndOptionsProto)
  SharedDtor();
}

void AllowedHintsAndOptionsProto::SharedDtor() {
}

void AllowedHintsAndOptionsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllowedHintsAndOptionsProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllowedHintsAndOptionsProto& AllowedHintsAndOptionsProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AllowedHintsAndOptionsProto.base);
  return *internal_default_instance();
}


void AllowedHintsAndOptionsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.AllowedHintsAndOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  disallow_unknown_hints_with_qualifier_.Clear();
  hint_.Clear();
  option_.Clear();
  disallow_unknown_options_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllowedHintsAndOptionsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.AllowedHintsAndOptionsProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool disallow_unknown_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_disallow_unknown_options();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disallow_unknown_options_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string disallow_unknown_hints_with_qualifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_disallow_unknown_hints_with_qualifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->disallow_unknown_hints_with_qualifier(this->disallow_unknown_hints_with_qualifier_size() - 1).data(),
            static_cast<int>(this->disallow_unknown_hints_with_qualifier(this->disallow_unknown_hints_with_qualifier_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.AllowedHintsAndOptionsProto.disallow_unknown_hints_with_qualifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.AllowedHintsAndOptionsProto.HintProto hint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.AllowedHintsAndOptionsProto.OptionProto option = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_option()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.AllowedHintsAndOptionsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.AllowedHintsAndOptionsProto)
  return false;
#undef DO_
}

void AllowedHintsAndOptionsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.AllowedHintsAndOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool disallow_unknown_options = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->disallow_unknown_options(), output);
  }

  // repeated string disallow_unknown_hints_with_qualifier = 2;
  for (int i = 0, n = this->disallow_unknown_hints_with_qualifier_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disallow_unknown_hints_with_qualifier(i).data(), static_cast<int>(this->disallow_unknown_hints_with_qualifier(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.disallow_unknown_hints_with_qualifier");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->disallow_unknown_hints_with_qualifier(i), output);
  }

  // repeated .zetasql.AllowedHintsAndOptionsProto.HintProto hint = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hint_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->hint(static_cast<int>(i)),
      output);
  }

  // repeated .zetasql.AllowedHintsAndOptionsProto.OptionProto option = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->option_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->option(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.AllowedHintsAndOptionsProto)
}

::google::protobuf::uint8* AllowedHintsAndOptionsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.AllowedHintsAndOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool disallow_unknown_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->disallow_unknown_options(), target);
  }

  // repeated string disallow_unknown_hints_with_qualifier = 2;
  for (int i = 0, n = this->disallow_unknown_hints_with_qualifier_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->disallow_unknown_hints_with_qualifier(i).data(), static_cast<int>(this->disallow_unknown_hints_with_qualifier(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AllowedHintsAndOptionsProto.disallow_unknown_hints_with_qualifier");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->disallow_unknown_hints_with_qualifier(i), target);
  }

  // repeated .zetasql.AllowedHintsAndOptionsProto.HintProto hint = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hint_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->hint(static_cast<int>(i)), deterministic, target);
  }

  // repeated .zetasql.AllowedHintsAndOptionsProto.OptionProto option = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->option_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->option(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.AllowedHintsAndOptionsProto)
  return target;
}

size_t AllowedHintsAndOptionsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.AllowedHintsAndOptionsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string disallow_unknown_hints_with_qualifier = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->disallow_unknown_hints_with_qualifier_size());
  for (int i = 0, n = this->disallow_unknown_hints_with_qualifier_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->disallow_unknown_hints_with_qualifier(i));
  }

  // repeated .zetasql.AllowedHintsAndOptionsProto.HintProto hint = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->hint_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hint(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.AllowedHintsAndOptionsProto.OptionProto option = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->option_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->option(static_cast<int>(i)));
    }
  }

  // optional bool disallow_unknown_options = 1;
  if (has_disallow_unknown_options()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllowedHintsAndOptionsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.AllowedHintsAndOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AllowedHintsAndOptionsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllowedHintsAndOptionsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.AllowedHintsAndOptionsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.AllowedHintsAndOptionsProto)
    MergeFrom(*source);
  }
}

void AllowedHintsAndOptionsProto::MergeFrom(const AllowedHintsAndOptionsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.AllowedHintsAndOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  disallow_unknown_hints_with_qualifier_.MergeFrom(from.disallow_unknown_hints_with_qualifier_);
  hint_.MergeFrom(from.hint_);
  option_.MergeFrom(from.option_);
  if (from.has_disallow_unknown_options()) {
    set_disallow_unknown_options(from.disallow_unknown_options());
  }
}

void AllowedHintsAndOptionsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.AllowedHintsAndOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllowedHintsAndOptionsProto::CopyFrom(const AllowedHintsAndOptionsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.AllowedHintsAndOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllowedHintsAndOptionsProto::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->hint())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->option())) return false;
  return true;
}

void AllowedHintsAndOptionsProto::Swap(AllowedHintsAndOptionsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllowedHintsAndOptionsProto::InternalSwap(AllowedHintsAndOptionsProto* other) {
  using std::swap;
  disallow_unknown_hints_with_qualifier_.InternalSwap(CastToBase(&other->disallow_unknown_hints_with_qualifier_));
  CastToBase(&hint_)->InternalSwap(CastToBase(&other->hint_));
  CastToBase(&option_)->InternalSwap(CastToBase(&other->option_));
  swap(disallow_unknown_options_, other->disallow_unknown_options_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllowedHintsAndOptionsProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnalyzerOptionsProto_QueryParameterProto::InitAsDefaultInstance() {
  ::zetasql::_AnalyzerOptionsProto_QueryParameterProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::zetasql::TypeProto*>(
      ::zetasql::TypeProto::internal_default_instance());
}
void AnalyzerOptionsProto_QueryParameterProto::clear_type() {
  if (type_ != NULL) type_->Clear();
  clear_has_type();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalyzerOptionsProto_QueryParameterProto::kNameFieldNumber;
const int AnalyzerOptionsProto_QueryParameterProto::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalyzerOptionsProto_QueryParameterProto::AnalyzerOptionsProto_QueryParameterProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto_QueryParameterProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.AnalyzerOptionsProto.QueryParameterProto)
}
AnalyzerOptionsProto_QueryParameterProto::AnalyzerOptionsProto_QueryParameterProto(const AnalyzerOptionsProto_QueryParameterProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::zetasql::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.AnalyzerOptionsProto.QueryParameterProto)
}

void AnalyzerOptionsProto_QueryParameterProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
}

AnalyzerOptionsProto_QueryParameterProto::~AnalyzerOptionsProto_QueryParameterProto() {
  // @@protoc_insertion_point(destructor:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  SharedDtor();
}

void AnalyzerOptionsProto_QueryParameterProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void AnalyzerOptionsProto_QueryParameterProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnalyzerOptionsProto_QueryParameterProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnalyzerOptionsProto_QueryParameterProto& AnalyzerOptionsProto_QueryParameterProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto_QueryParameterProto.base);
  return *internal_default_instance();
}


void AnalyzerOptionsProto_QueryParameterProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AnalyzerOptionsProto_QueryParameterProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.AnalyzerOptionsProto.QueryParameterProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.TypeProto type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  return false;
#undef DO_
}

void AnalyzerOptionsProto_QueryParameterProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AnalyzerOptionsProto.QueryParameterProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.AnalyzerOptionsProto.QueryParameterProto)
}

::google::protobuf::uint8* AnalyzerOptionsProto_QueryParameterProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AnalyzerOptionsProto.QueryParameterProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  return target;
}

size_t AnalyzerOptionsProto_QueryParameterProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .zetasql.TypeProto type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnalyzerOptionsProto_QueryParameterProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AnalyzerOptionsProto_QueryParameterProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnalyzerOptionsProto_QueryParameterProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.AnalyzerOptionsProto.QueryParameterProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.AnalyzerOptionsProto.QueryParameterProto)
    MergeFrom(*source);
  }
}

void AnalyzerOptionsProto_QueryParameterProto::MergeFrom(const AnalyzerOptionsProto_QueryParameterProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_type()->::zetasql::TypeProto::MergeFrom(from.type());
    }
  }
}

void AnalyzerOptionsProto_QueryParameterProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalyzerOptionsProto_QueryParameterProto::CopyFrom(const AnalyzerOptionsProto_QueryParameterProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.AnalyzerOptionsProto.QueryParameterProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalyzerOptionsProto_QueryParameterProto::IsInitialized() const {
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void AnalyzerOptionsProto_QueryParameterProto::Swap(AnalyzerOptionsProto_QueryParameterProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalyzerOptionsProto_QueryParameterProto::InternalSwap(AnalyzerOptionsProto_QueryParameterProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnalyzerOptionsProto_QueryParameterProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnalyzerOptionsProto_SystemVariableProto::InitAsDefaultInstance() {
  ::zetasql::_AnalyzerOptionsProto_SystemVariableProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::zetasql::TypeProto*>(
      ::zetasql::TypeProto::internal_default_instance());
}
void AnalyzerOptionsProto_SystemVariableProto::clear_type() {
  if (type_ != NULL) type_->Clear();
  clear_has_type();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalyzerOptionsProto_SystemVariableProto::kNamePathFieldNumber;
const int AnalyzerOptionsProto_SystemVariableProto::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalyzerOptionsProto_SystemVariableProto::AnalyzerOptionsProto_SystemVariableProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto_SystemVariableProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.AnalyzerOptionsProto.SystemVariableProto)
}
AnalyzerOptionsProto_SystemVariableProto::AnalyzerOptionsProto_SystemVariableProto(const AnalyzerOptionsProto_SystemVariableProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      name_path_(from.name_path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::zetasql::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.AnalyzerOptionsProto.SystemVariableProto)
}

void AnalyzerOptionsProto_SystemVariableProto::SharedCtor() {
  type_ = NULL;
}

AnalyzerOptionsProto_SystemVariableProto::~AnalyzerOptionsProto_SystemVariableProto() {
  // @@protoc_insertion_point(destructor:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  SharedDtor();
}

void AnalyzerOptionsProto_SystemVariableProto::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
}

void AnalyzerOptionsProto_SystemVariableProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnalyzerOptionsProto_SystemVariableProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnalyzerOptionsProto_SystemVariableProto& AnalyzerOptionsProto_SystemVariableProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto_SystemVariableProto.base);
  return *internal_default_instance();
}


void AnalyzerOptionsProto_SystemVariableProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_path_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(type_ != NULL);
    type_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AnalyzerOptionsProto_SystemVariableProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string name_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_name_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name_path(this->name_path_size() - 1).data(),
            static_cast<int>(this->name_path(this->name_path_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.AnalyzerOptionsProto.SystemVariableProto.name_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.TypeProto type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  return false;
#undef DO_
}

void AnalyzerOptionsProto_SystemVariableProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name_path = 1;
  for (int i = 0, n = this->name_path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_path(i).data(), static_cast<int>(this->name_path(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AnalyzerOptionsProto.SystemVariableProto.name_path");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name_path(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.AnalyzerOptionsProto.SystemVariableProto)
}

::google::protobuf::uint8* AnalyzerOptionsProto_SystemVariableProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string name_path = 1;
  for (int i = 0, n = this->name_path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name_path(i).data(), static_cast<int>(this->name_path(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AnalyzerOptionsProto.SystemVariableProto.name_path");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->name_path(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  return target;
}

size_t AnalyzerOptionsProto_SystemVariableProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string name_path = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_path_size());
  for (int i = 0, n = this->name_path_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->name_path(i));
  }

  // optional .zetasql.TypeProto type = 2;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnalyzerOptionsProto_SystemVariableProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AnalyzerOptionsProto_SystemVariableProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnalyzerOptionsProto_SystemVariableProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.AnalyzerOptionsProto.SystemVariableProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.AnalyzerOptionsProto.SystemVariableProto)
    MergeFrom(*source);
  }
}

void AnalyzerOptionsProto_SystemVariableProto::MergeFrom(const AnalyzerOptionsProto_SystemVariableProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_path_.MergeFrom(from.name_path_);
  if (from.has_type()) {
    mutable_type()->::zetasql::TypeProto::MergeFrom(from.type());
  }
}

void AnalyzerOptionsProto_SystemVariableProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalyzerOptionsProto_SystemVariableProto::CopyFrom(const AnalyzerOptionsProto_SystemVariableProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.AnalyzerOptionsProto.SystemVariableProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalyzerOptionsProto_SystemVariableProto::IsInitialized() const {
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void AnalyzerOptionsProto_SystemVariableProto::Swap(AnalyzerOptionsProto_SystemVariableProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalyzerOptionsProto_SystemVariableProto::InternalSwap(AnalyzerOptionsProto_SystemVariableProto* other) {
  using std::swap;
  name_path_.InternalSwap(CastToBase(&other->name_path_));
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnalyzerOptionsProto_SystemVariableProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AnalyzerOptionsProto::InitAsDefaultInstance() {
  ::zetasql::_AnalyzerOptionsProto_default_instance_._instance.get_mutable()->language_options_ = const_cast< ::zetasql::LanguageOptionsProto*>(
      ::zetasql::LanguageOptionsProto::internal_default_instance());
  ::zetasql::_AnalyzerOptionsProto_default_instance_._instance.get_mutable()->in_scope_expression_column_ = const_cast< ::zetasql::AnalyzerOptionsProto_QueryParameterProto*>(
      ::zetasql::AnalyzerOptionsProto_QueryParameterProto::internal_default_instance());
  ::zetasql::_AnalyzerOptionsProto_default_instance_._instance.get_mutable()->allowed_hints_and_options_ = const_cast< ::zetasql::AllowedHintsAndOptionsProto*>(
      ::zetasql::AllowedHintsAndOptionsProto::internal_default_instance());
}
void AnalyzerOptionsProto::clear_positional_query_parameters() {
  positional_query_parameters_.Clear();
}
void AnalyzerOptionsProto::clear_target_column_types() {
  target_column_types_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnalyzerOptionsProto::kLanguageOptionsFieldNumber;
const int AnalyzerOptionsProto::kQueryParametersFieldNumber;
const int AnalyzerOptionsProto::kPositionalQueryParametersFieldNumber;
const int AnalyzerOptionsProto::kExpressionColumnsFieldNumber;
const int AnalyzerOptionsProto::kInScopeExpressionColumnFieldNumber;
const int AnalyzerOptionsProto::kDdlPseudoColumnsFieldNumber;
const int AnalyzerOptionsProto::kErrorMessageModeFieldNumber;
const int AnalyzerOptionsProto::kDefaultTimezoneFieldNumber;
const int AnalyzerOptionsProto::kCreateNewColumnForEachProjectedOutputFieldNumber;
const int AnalyzerOptionsProto::kPruneUnusedColumnsFieldNumber;
const int AnalyzerOptionsProto::kAllowUndeclaredParametersFieldNumber;
const int AnalyzerOptionsProto::kParameterModeFieldNumber;
const int AnalyzerOptionsProto::kAllowedHintsAndOptionsFieldNumber;
const int AnalyzerOptionsProto::kStatementContextFieldNumber;
const int AnalyzerOptionsProto::kPreserveColumnAliasesFieldNumber;
const int AnalyzerOptionsProto::kSystemVariablesFieldNumber;
const int AnalyzerOptionsProto::kTargetColumnTypesFieldNumber;
const int AnalyzerOptionsProto::kEnabledRewritesFieldNumber;
const int AnalyzerOptionsProto::kParseLocationRecordTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnalyzerOptionsProto::AnalyzerOptionsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.AnalyzerOptionsProto)
}
AnalyzerOptionsProto::AnalyzerOptionsProto(const AnalyzerOptionsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      query_parameters_(from.query_parameters_),
      expression_columns_(from.expression_columns_),
      positional_query_parameters_(from.positional_query_parameters_),
      ddl_pseudo_columns_(from.ddl_pseudo_columns_),
      system_variables_(from.system_variables_),
      target_column_types_(from.target_column_types_),
      enabled_rewrites_(from.enabled_rewrites_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  default_timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_default_timezone()) {
    default_timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_timezone_);
  }
  if (from.has_language_options()) {
    language_options_ = new ::zetasql::LanguageOptionsProto(*from.language_options_);
  } else {
    language_options_ = NULL;
  }
  if (from.has_in_scope_expression_column()) {
    in_scope_expression_column_ = new ::zetasql::AnalyzerOptionsProto_QueryParameterProto(*from.in_scope_expression_column_);
  } else {
    in_scope_expression_column_ = NULL;
  }
  if (from.has_allowed_hints_and_options()) {
    allowed_hints_and_options_ = new ::zetasql::AllowedHintsAndOptionsProto(*from.allowed_hints_and_options_);
  } else {
    allowed_hints_and_options_ = NULL;
  }
  ::memcpy(&error_message_mode_, &from.error_message_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&parse_location_record_type_) -
    reinterpret_cast<char*>(&error_message_mode_)) + sizeof(parse_location_record_type_));
  // @@protoc_insertion_point(copy_constructor:zetasql.AnalyzerOptionsProto)
}

void AnalyzerOptionsProto::SharedCtor() {
  default_timezone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&language_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parse_location_record_type_) -
      reinterpret_cast<char*>(&language_options_)) + sizeof(parse_location_record_type_));
}

AnalyzerOptionsProto::~AnalyzerOptionsProto() {
  // @@protoc_insertion_point(destructor:zetasql.AnalyzerOptionsProto)
  SharedDtor();
}

void AnalyzerOptionsProto::SharedDtor() {
  default_timezone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete language_options_;
  if (this != internal_default_instance()) delete in_scope_expression_column_;
  if (this != internal_default_instance()) delete allowed_hints_and_options_;
}

void AnalyzerOptionsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AnalyzerOptionsProto::descriptor() {
  ::protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnalyzerOptionsProto& AnalyzerOptionsProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_AnalyzerOptionsProto.base);
  return *internal_default_instance();
}


void AnalyzerOptionsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.AnalyzerOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  query_parameters_.Clear();
  expression_columns_.Clear();
  positional_query_parameters_.Clear();
  ddl_pseudo_columns_.Clear();
  system_variables_.Clear();
  target_column_types_.Clear();
  enabled_rewrites_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      default_timezone_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(language_options_ != NULL);
      language_options_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(in_scope_expression_column_ != NULL);
      in_scope_expression_column_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(allowed_hints_and_options_ != NULL);
      allowed_hints_and_options_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&error_message_mode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&create_new_column_for_each_projected_output_) -
        reinterpret_cast<char*>(&error_message_mode_)) + sizeof(create_new_column_for_each_projected_output_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&prune_unused_columns_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&parse_location_record_type_) -
        reinterpret_cast<char*>(&prune_unused_columns_)) + sizeof(parse_location_record_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AnalyzerOptionsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.AnalyzerOptionsProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zetasql.LanguageOptionsProto language_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_language_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto query_parameters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_query_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto expression_columns = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_expression_columns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.AnalyzerOptionsProto.QueryParameterProto in_scope_expression_column = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_scope_expression_column()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ErrorMessageMode error_message_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::ErrorMessageMode_IsValid(value)) {
            set_error_message_mode(static_cast< ::zetasql::ErrorMessageMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                6, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string default_timezone = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_default_timezone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->default_timezone().data(), static_cast<int>(this->default_timezone().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.AnalyzerOptionsProto.default_timezone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool prune_unused_columns = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_prune_unused_columns();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prune_unused_columns_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_undeclared_parameters = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_allow_undeclared_parameters();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_undeclared_parameters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.AllowedHintsAndOptionsProto allowed_hints_and_options = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allowed_hints_and_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.TypeProto positional_query_parameters = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_positional_query_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ParameterMode parameter_mode = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::ParameterMode_IsValid(value)) {
            set_parameter_mode(static_cast< ::zetasql::ParameterMode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                13, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.StatementContext statement_context = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::StatementContext_IsValid(value)) {
            set_statement_context(static_cast< ::zetasql::StatementContext >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                14, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto ddl_pseudo_columns = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ddl_pseudo_columns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool preserve_column_aliases = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_preserve_column_aliases();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &preserve_column_aliases_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.AnalyzerOptionsProto.SystemVariableProto system_variables = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_system_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.TypeProto target_column_types = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_target_column_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool create_new_column_for_each_projected_output = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_create_new_column_for_each_projected_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &create_new_column_for_each_projected_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.ResolvedASTRewrite enabled_rewrites = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::ResolvedASTRewrite_IsValid(value)) {
            add_enabled_rewrites(static_cast< ::zetasql::ResolvedASTRewrite >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                21, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 21,
                 ::zetasql::ResolvedASTRewrite_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_enabled_rewrites())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ParseLocationRecordType parse_location_record_type = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::zetasql::ParseLocationRecordType_IsValid(value)) {
            set_parse_location_record_type(static_cast< ::zetasql::ParseLocationRecordType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                23, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.AnalyzerOptionsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.AnalyzerOptionsProto)
  return false;
#undef DO_
}

void AnalyzerOptionsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.AnalyzerOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.LanguageOptionsProto language_options = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_language_options(), output);
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto query_parameters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->query_parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->query_parameters(static_cast<int>(i)),
      output);
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto expression_columns = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expression_columns_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->expression_columns(static_cast<int>(i)),
      output);
  }

  // optional .zetasql.AnalyzerOptionsProto.QueryParameterProto in_scope_expression_column = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_in_scope_expression_column(), output);
  }

  // optional .zetasql.ErrorMessageMode error_message_mode = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->error_message_mode(), output);
  }

  // optional string default_timezone = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_timezone().data(), static_cast<int>(this->default_timezone().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AnalyzerOptionsProto.default_timezone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->default_timezone(), output);
  }

  // optional bool prune_unused_columns = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->prune_unused_columns(), output);
  }

  // optional bool allow_undeclared_parameters = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->allow_undeclared_parameters(), output);
  }

  // optional .zetasql.AllowedHintsAndOptionsProto allowed_hints_and_options = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_allowed_hints_and_options(), output);
  }

  // repeated .zetasql.TypeProto positional_query_parameters = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positional_query_parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->positional_query_parameters(static_cast<int>(i)),
      output);
  }

  // optional .zetasql.ParameterMode parameter_mode = 13;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->parameter_mode(), output);
  }

  // optional .zetasql.StatementContext statement_context = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->statement_context(), output);
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto ddl_pseudo_columns = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ddl_pseudo_columns_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->ddl_pseudo_columns(static_cast<int>(i)),
      output);
  }

  // optional bool preserve_column_aliases = 17;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->preserve_column_aliases(), output);
  }

  // repeated .zetasql.AnalyzerOptionsProto.SystemVariableProto system_variables = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->system_variables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->system_variables(static_cast<int>(i)),
      output);
  }

  // repeated .zetasql.TypeProto target_column_types = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_column_types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->target_column_types(static_cast<int>(i)),
      output);
  }

  // optional bool create_new_column_for_each_projected_output = 20;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->create_new_column_for_each_projected_output(), output);
  }

  // repeated .zetasql.ResolvedASTRewrite enabled_rewrites = 21;
  for (int i = 0, n = this->enabled_rewrites_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->enabled_rewrites(i), output);
  }

  // optional .zetasql.ParseLocationRecordType parse_location_record_type = 23;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      23, this->parse_location_record_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.AnalyzerOptionsProto)
}

::google::protobuf::uint8* AnalyzerOptionsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.AnalyzerOptionsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.LanguageOptionsProto language_options = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_language_options(), deterministic, target);
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto query_parameters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->query_parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->query_parameters(static_cast<int>(i)), deterministic, target);
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto expression_columns = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expression_columns_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->expression_columns(static_cast<int>(i)), deterministic, target);
  }

  // optional .zetasql.AnalyzerOptionsProto.QueryParameterProto in_scope_expression_column = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_in_scope_expression_column(), deterministic, target);
  }

  // optional .zetasql.ErrorMessageMode error_message_mode = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->error_message_mode(), target);
  }

  // optional string default_timezone = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->default_timezone().data(), static_cast<int>(this->default_timezone().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.AnalyzerOptionsProto.default_timezone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->default_timezone(), target);
  }

  // optional bool prune_unused_columns = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->prune_unused_columns(), target);
  }

  // optional bool allow_undeclared_parameters = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->allow_undeclared_parameters(), target);
  }

  // optional .zetasql.AllowedHintsAndOptionsProto allowed_hints_and_options = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_allowed_hints_and_options(), deterministic, target);
  }

  // repeated .zetasql.TypeProto positional_query_parameters = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positional_query_parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->positional_query_parameters(static_cast<int>(i)), deterministic, target);
  }

  // optional .zetasql.ParameterMode parameter_mode = 13;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->parameter_mode(), target);
  }

  // optional .zetasql.StatementContext statement_context = 14;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->statement_context(), target);
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto ddl_pseudo_columns = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ddl_pseudo_columns_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->ddl_pseudo_columns(static_cast<int>(i)), deterministic, target);
  }

  // optional bool preserve_column_aliases = 17;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->preserve_column_aliases(), target);
  }

  // repeated .zetasql.AnalyzerOptionsProto.SystemVariableProto system_variables = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->system_variables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->system_variables(static_cast<int>(i)), deterministic, target);
  }

  // repeated .zetasql.TypeProto target_column_types = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_column_types_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->target_column_types(static_cast<int>(i)), deterministic, target);
  }

  // optional bool create_new_column_for_each_projected_output = 20;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->create_new_column_for_each_projected_output(), target);
  }

  // repeated .zetasql.ResolvedASTRewrite enabled_rewrites = 21;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    21, this->enabled_rewrites_, target);

  // optional .zetasql.ParseLocationRecordType parse_location_record_type = 23;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      23, this->parse_location_record_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.AnalyzerOptionsProto)
  return target;
}

size_t AnalyzerOptionsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.AnalyzerOptionsProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto query_parameters = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->query_parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->query_parameters(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto expression_columns = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->expression_columns_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->expression_columns(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.TypeProto positional_query_parameters = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->positional_query_parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->positional_query_parameters(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.AnalyzerOptionsProto.QueryParameterProto ddl_pseudo_columns = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->ddl_pseudo_columns_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ddl_pseudo_columns(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.AnalyzerOptionsProto.SystemVariableProto system_variables = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->system_variables_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->system_variables(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.TypeProto target_column_types = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->target_column_types_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->target_column_types(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.ResolvedASTRewrite enabled_rewrites = 21;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->enabled_rewrites_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->enabled_rewrites(static_cast<int>(i)));
    }
    total_size += (2UL * count) + data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string default_timezone = 7;
    if (has_default_timezone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->default_timezone());
    }

    // optional .zetasql.LanguageOptionsProto language_options = 1;
    if (has_language_options()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *language_options_);
    }

    // optional .zetasql.AnalyzerOptionsProto.QueryParameterProto in_scope_expression_column = 4;
    if (has_in_scope_expression_column()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *in_scope_expression_column_);
    }

    // optional .zetasql.AllowedHintsAndOptionsProto allowed_hints_and_options = 11;
    if (has_allowed_hints_and_options()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *allowed_hints_and_options_);
    }

    // optional .zetasql.ErrorMessageMode error_message_mode = 6;
    if (has_error_message_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_message_mode());
    }

    // optional .zetasql.ParameterMode parameter_mode = 13;
    if (has_parameter_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->parameter_mode());
    }

    // optional .zetasql.StatementContext statement_context = 14;
    if (has_statement_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->statement_context());
    }

    // optional bool create_new_column_for_each_projected_output = 20;
    if (has_create_new_column_for_each_projected_output()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional bool prune_unused_columns = 9;
    if (has_prune_unused_columns()) {
      total_size += 1 + 1;
    }

    // optional bool allow_undeclared_parameters = 10;
    if (has_allow_undeclared_parameters()) {
      total_size += 1 + 1;
    }

    // optional bool preserve_column_aliases = 17;
    if (has_preserve_column_aliases()) {
      total_size += 2 + 1;
    }

    // optional .zetasql.ParseLocationRecordType parse_location_record_type = 23;
    if (has_parse_location_record_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->parse_location_record_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnalyzerOptionsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.AnalyzerOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AnalyzerOptionsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnalyzerOptionsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.AnalyzerOptionsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.AnalyzerOptionsProto)
    MergeFrom(*source);
  }
}

void AnalyzerOptionsProto::MergeFrom(const AnalyzerOptionsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.AnalyzerOptionsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  query_parameters_.MergeFrom(from.query_parameters_);
  expression_columns_.MergeFrom(from.expression_columns_);
  positional_query_parameters_.MergeFrom(from.positional_query_parameters_);
  ddl_pseudo_columns_.MergeFrom(from.ddl_pseudo_columns_);
  system_variables_.MergeFrom(from.system_variables_);
  target_column_types_.MergeFrom(from.target_column_types_);
  enabled_rewrites_.MergeFrom(from.enabled_rewrites_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_default_timezone();
      default_timezone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.default_timezone_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_language_options()->::zetasql::LanguageOptionsProto::MergeFrom(from.language_options());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_in_scope_expression_column()->::zetasql::AnalyzerOptionsProto_QueryParameterProto::MergeFrom(from.in_scope_expression_column());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_allowed_hints_and_options()->::zetasql::AllowedHintsAndOptionsProto::MergeFrom(from.allowed_hints_and_options());
    }
    if (cached_has_bits & 0x00000010u) {
      error_message_mode_ = from.error_message_mode_;
    }
    if (cached_has_bits & 0x00000020u) {
      parameter_mode_ = from.parameter_mode_;
    }
    if (cached_has_bits & 0x00000040u) {
      statement_context_ = from.statement_context_;
    }
    if (cached_has_bits & 0x00000080u) {
      create_new_column_for_each_projected_output_ = from.create_new_column_for_each_projected_output_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      prune_unused_columns_ = from.prune_unused_columns_;
    }
    if (cached_has_bits & 0x00000200u) {
      allow_undeclared_parameters_ = from.allow_undeclared_parameters_;
    }
    if (cached_has_bits & 0x00000400u) {
      preserve_column_aliases_ = from.preserve_column_aliases_;
    }
    if (cached_has_bits & 0x00000800u) {
      parse_location_record_type_ = from.parse_location_record_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AnalyzerOptionsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.AnalyzerOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnalyzerOptionsProto::CopyFrom(const AnalyzerOptionsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.AnalyzerOptionsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnalyzerOptionsProto::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->query_parameters())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->expression_columns())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->positional_query_parameters())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ddl_pseudo_columns())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->system_variables())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->target_column_types())) return false;
  if (has_in_scope_expression_column()) {
    if (!this->in_scope_expression_column_->IsInitialized()) return false;
  }
  if (has_allowed_hints_and_options()) {
    if (!this->allowed_hints_and_options_->IsInitialized()) return false;
  }
  return true;
}

void AnalyzerOptionsProto::Swap(AnalyzerOptionsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnalyzerOptionsProto::InternalSwap(AnalyzerOptionsProto* other) {
  using std::swap;
  CastToBase(&query_parameters_)->InternalSwap(CastToBase(&other->query_parameters_));
  CastToBase(&expression_columns_)->InternalSwap(CastToBase(&other->expression_columns_));
  CastToBase(&positional_query_parameters_)->InternalSwap(CastToBase(&other->positional_query_parameters_));
  CastToBase(&ddl_pseudo_columns_)->InternalSwap(CastToBase(&other->ddl_pseudo_columns_));
  CastToBase(&system_variables_)->InternalSwap(CastToBase(&other->system_variables_));
  CastToBase(&target_column_types_)->InternalSwap(CastToBase(&other->target_column_types_));
  enabled_rewrites_.InternalSwap(&other->enabled_rewrites_);
  default_timezone_.Swap(&other->default_timezone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(language_options_, other->language_options_);
  swap(in_scope_expression_column_, other->in_scope_expression_column_);
  swap(allowed_hints_and_options_, other->allowed_hints_and_options_);
  swap(error_message_mode_, other->error_message_mode_);
  swap(parameter_mode_, other->parameter_mode_);
  swap(statement_context_, other->statement_context_);
  swap(create_new_column_for_each_projected_output_, other->create_new_column_for_each_projected_output_);
  swap(prune_unused_columns_, other->prune_unused_columns_);
  swap(allow_undeclared_parameters_, other->allow_undeclared_parameters_);
  swap(preserve_column_aliases_, other->preserve_column_aliases_);
  swap(parse_location_record_type_, other->parse_location_record_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AnalyzerOptionsProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2foptions_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2foptions_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ZetaSQLBuiltinFunctionOptionsProto* Arena::CreateMaybeMessage< ::zetasql::ZetaSQLBuiltinFunctionOptionsProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ZetaSQLBuiltinFunctionOptionsProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::LanguageOptionsProto* Arena::CreateMaybeMessage< ::zetasql::LanguageOptionsProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::LanguageOptionsProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::AllowedHintsAndOptionsProto_HintProto* Arena::CreateMaybeMessage< ::zetasql::AllowedHintsAndOptionsProto_HintProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::AllowedHintsAndOptionsProto_HintProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::AllowedHintsAndOptionsProto_OptionProto* Arena::CreateMaybeMessage< ::zetasql::AllowedHintsAndOptionsProto_OptionProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::AllowedHintsAndOptionsProto_OptionProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::AllowedHintsAndOptionsProto* Arena::CreateMaybeMessage< ::zetasql::AllowedHintsAndOptionsProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::AllowedHintsAndOptionsProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::AnalyzerOptionsProto_QueryParameterProto* Arena::CreateMaybeMessage< ::zetasql::AnalyzerOptionsProto_QueryParameterProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::AnalyzerOptionsProto_QueryParameterProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::AnalyzerOptionsProto_SystemVariableProto* Arena::CreateMaybeMessage< ::zetasql::AnalyzerOptionsProto_SystemVariableProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::AnalyzerOptionsProto_SystemVariableProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::AnalyzerOptionsProto* Arena::CreateMaybeMessage< ::zetasql::AnalyzerOptionsProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::AnalyzerOptionsProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
