// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/proto/simple_catalog.proto

#include "zetasql/proto/simple_catalog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_zetasql_2fproto_2ffunction_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2ffunction_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2ffunction_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_FunctionProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2ffunction_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_TableValuedFunctionProto;
}  // namespace protobuf_zetasql_2fproto_2ffunction_2eproto
namespace protobuf_zetasql_2fproto_2foptions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2foptions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ZetaSQLBuiltinFunctionOptionsProto;
}  // namespace protobuf_zetasql_2fproto_2foptions_2eproto
namespace protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SimpleCatalogProto_NamedTypeProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_SimpleCatalogProto;
}  // namespace protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto
namespace protobuf_zetasql_2fpublic_2fsimple_5fconstant_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fsimple_5fconstant_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SimpleConstantProto;
}  // namespace protobuf_zetasql_2fpublic_2fsimple_5fconstant_2eproto
namespace protobuf_zetasql_2fpublic_2fsimple_5ftable_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fsimple_5ftable_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_SimpleTableProto;
}  // namespace protobuf_zetasql_2fpublic_2fsimple_5ftable_2eproto
namespace protobuf_zetasql_2fpublic_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2ftype_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ArrayTypeProto;
}  // namespace protobuf_zetasql_2fpublic_2ftype_2eproto
namespace zetasql {
class SimpleCatalogProto_NamedTypeProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimpleCatalogProto_NamedTypeProto>
      _instance;
} _SimpleCatalogProto_NamedTypeProto_default_instance_;
class SimpleCatalogProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimpleCatalogProto>
      _instance;
} _SimpleCatalogProto_default_instance_;
}  // namespace zetasql
namespace protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto {
static void InitDefaultsSimpleCatalogProto_NamedTypeProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_SimpleCatalogProto_NamedTypeProto_default_instance_;
    new (ptr) ::zetasql::SimpleCatalogProto_NamedTypeProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::SimpleCatalogProto_NamedTypeProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SimpleCatalogProto_NamedTypeProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSimpleCatalogProto_NamedTypeProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,}};

static void InitDefaultsSimpleCatalogProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_SimpleCatalogProto_default_instance_;
    new (ptr) ::zetasql::SimpleCatalogProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::SimpleCatalogProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_SimpleCatalogProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsSimpleCatalogProto}, {
      &protobuf_zetasql_2fpublic_2fsimple_5ftable_2eproto::scc_info_SimpleTableProto.base,
      &protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::scc_info_SimpleCatalogProto_NamedTypeProto.base,
      &protobuf_zetasql_2fproto_2foptions_2eproto::scc_info_ZetaSQLBuiltinFunctionOptionsProto.base,
      &protobuf_zetasql_2fproto_2ffunction_2eproto::scc_info_FunctionProto.base,
      &protobuf_zetasql_2fproto_2ffunction_2eproto::scc_info_TableValuedFunctionProto.base,
      &protobuf_zetasql_2fproto_2ffunction_2eproto::scc_info_ProcedureProto.base,
      &protobuf_zetasql_2fpublic_2fsimple_5fconstant_2eproto::scc_info_SimpleConstantProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SimpleCatalogProto_NamedTypeProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SimpleCatalogProto.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto_NamedTypeProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto_NamedTypeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto_NamedTypeProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto_NamedTypeProto, type_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, named_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, catalog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, builtin_function_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, custom_function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, custom_tvf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, file_descriptor_set_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, procedure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::SimpleCatalogProto, constant_),
  0,
  ~0u,
  ~0u,
  ~0u,
  1,
  ~0u,
  ~0u,
  2,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::zetasql::SimpleCatalogProto_NamedTypeProto)},
  { 9, 24, sizeof(::zetasql::SimpleCatalogProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_SimpleCatalogProto_NamedTypeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_SimpleCatalogProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "zetasql/proto/simple_catalog.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"zetasql/proto/simple_catalog.proto\022\007ze"
      "tasql\032\034zetasql/proto/function.proto\032\033zet"
      "asql/proto/options.proto\032$zetasql/public"
      "/simple_constant.proto\032!zetasql/public/s"
      "imple_table.proto\032\031zetasql/public/type.p"
      "roto\"\266\004\n\022SimpleCatalogProto\022\014\n\004name\030\001 \001("
      "\t\022(\n\005table\030\002 \003(\0132\031.zetasql.SimpleTablePr"
      "oto\022>\n\nnamed_type\030\003 \003(\0132*.zetasql.Simple"
      "CatalogProto.NamedTypeProto\022,\n\007catalog\030\004"
      " \003(\0132\033.zetasql.SimpleCatalogProto\022M\n\030bui"
      "ltin_function_options\030\005 \001(\0132+.zetasql.Ze"
      "taSQLBuiltinFunctionOptionsProto\022/\n\017cust"
      "om_function\030\006 \003(\0132\026.zetasql.FunctionProt"
      "o\0225\n\ncustom_tvf\030\t \003(\0132!.zetasql.TableVal"
      "uedFunctionProto\022%\n\031file_descriptor_set_"
      "index\030\007 \001(\005:\002-1\022*\n\tprocedure\030\010 \003(\0132\027.zet"
      "asql.ProcedureProto\022.\n\010constant\030\n \003(\0132\034."
      "zetasql.SimpleConstantProto\032@\n\016NamedType"
      "Proto\022\014\n\004name\030\001 \001(\t\022 \n\004type\030\002 \001(\0132\022.zeta"
      "sql.TypeProtoB)\n\022com.google.zetasqlB\023Sim"
      "pleCatalogProtos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 816);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zetasql/proto/simple_catalog.proto", &protobuf_RegisterTypes);
  ::protobuf_zetasql_2fproto_2ffunction_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fproto_2foptions_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2fsimple_5fconstant_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2fsimple_5ftable_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2ftype_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto
namespace zetasql {

// ===================================================================

void SimpleCatalogProto_NamedTypeProto::InitAsDefaultInstance() {
  ::zetasql::_SimpleCatalogProto_NamedTypeProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::zetasql::TypeProto*>(
      ::zetasql::TypeProto::internal_default_instance());
}
void SimpleCatalogProto_NamedTypeProto::clear_type() {
  if (type_ != NULL) type_->Clear();
  clear_has_type();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimpleCatalogProto_NamedTypeProto::kNameFieldNumber;
const int SimpleCatalogProto_NamedTypeProto::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimpleCatalogProto_NamedTypeProto::SimpleCatalogProto_NamedTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::scc_info_SimpleCatalogProto_NamedTypeProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.SimpleCatalogProto.NamedTypeProto)
}
SimpleCatalogProto_NamedTypeProto::SimpleCatalogProto_NamedTypeProto(const SimpleCatalogProto_NamedTypeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::zetasql::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.SimpleCatalogProto.NamedTypeProto)
}

void SimpleCatalogProto_NamedTypeProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
}

SimpleCatalogProto_NamedTypeProto::~SimpleCatalogProto_NamedTypeProto() {
  // @@protoc_insertion_point(destructor:zetasql.SimpleCatalogProto.NamedTypeProto)
  SharedDtor();
}

void SimpleCatalogProto_NamedTypeProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void SimpleCatalogProto_NamedTypeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimpleCatalogProto_NamedTypeProto::descriptor() {
  ::protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimpleCatalogProto_NamedTypeProto& SimpleCatalogProto_NamedTypeProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::scc_info_SimpleCatalogProto_NamedTypeProto.base);
  return *internal_default_instance();
}


void SimpleCatalogProto_NamedTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SimpleCatalogProto_NamedTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.SimpleCatalogProto.NamedTypeProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.TypeProto type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.SimpleCatalogProto.NamedTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.SimpleCatalogProto.NamedTypeProto)
  return false;
#undef DO_
}

void SimpleCatalogProto_NamedTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.SimpleCatalogProto.NamedTypeProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.SimpleCatalogProto.NamedTypeProto)
}

::google::protobuf::uint8* SimpleCatalogProto_NamedTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.SimpleCatalogProto.NamedTypeProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .zetasql.TypeProto type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.SimpleCatalogProto.NamedTypeProto)
  return target;
}

size_t SimpleCatalogProto_NamedTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .zetasql.TypeProto type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimpleCatalogProto_NamedTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SimpleCatalogProto_NamedTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimpleCatalogProto_NamedTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.SimpleCatalogProto.NamedTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.SimpleCatalogProto.NamedTypeProto)
    MergeFrom(*source);
  }
}

void SimpleCatalogProto_NamedTypeProto::MergeFrom(const SimpleCatalogProto_NamedTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_type()->::zetasql::TypeProto::MergeFrom(from.type());
    }
  }
}

void SimpleCatalogProto_NamedTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleCatalogProto_NamedTypeProto::CopyFrom(const SimpleCatalogProto_NamedTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.SimpleCatalogProto.NamedTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleCatalogProto_NamedTypeProto::IsInitialized() const {
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void SimpleCatalogProto_NamedTypeProto::Swap(SimpleCatalogProto_NamedTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimpleCatalogProto_NamedTypeProto::InternalSwap(SimpleCatalogProto_NamedTypeProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimpleCatalogProto_NamedTypeProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimpleCatalogProto::InitAsDefaultInstance() {
  ::zetasql::_SimpleCatalogProto_default_instance_._instance.get_mutable()->builtin_function_options_ = const_cast< ::zetasql::ZetaSQLBuiltinFunctionOptionsProto*>(
      ::zetasql::ZetaSQLBuiltinFunctionOptionsProto::internal_default_instance());
}
void SimpleCatalogProto::clear_table() {
  table_.Clear();
}
void SimpleCatalogProto::clear_builtin_function_options() {
  if (builtin_function_options_ != NULL) builtin_function_options_->Clear();
  clear_has_builtin_function_options();
}
void SimpleCatalogProto::clear_custom_function() {
  custom_function_.Clear();
}
void SimpleCatalogProto::clear_custom_tvf() {
  custom_tvf_.Clear();
}
void SimpleCatalogProto::clear_procedure() {
  procedure_.Clear();
}
void SimpleCatalogProto::clear_constant() {
  constant_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimpleCatalogProto::kNameFieldNumber;
const int SimpleCatalogProto::kTableFieldNumber;
const int SimpleCatalogProto::kNamedTypeFieldNumber;
const int SimpleCatalogProto::kCatalogFieldNumber;
const int SimpleCatalogProto::kBuiltinFunctionOptionsFieldNumber;
const int SimpleCatalogProto::kCustomFunctionFieldNumber;
const int SimpleCatalogProto::kCustomTvfFieldNumber;
const int SimpleCatalogProto::kFileDescriptorSetIndexFieldNumber;
const int SimpleCatalogProto::kProcedureFieldNumber;
const int SimpleCatalogProto::kConstantFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimpleCatalogProto::SimpleCatalogProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::scc_info_SimpleCatalogProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.SimpleCatalogProto)
}
SimpleCatalogProto::SimpleCatalogProto(const SimpleCatalogProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      table_(from.table_),
      named_type_(from.named_type_),
      catalog_(from.catalog_),
      custom_function_(from.custom_function_),
      procedure_(from.procedure_),
      custom_tvf_(from.custom_tvf_),
      constant_(from.constant_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_builtin_function_options()) {
    builtin_function_options_ = new ::zetasql::ZetaSQLBuiltinFunctionOptionsProto(*from.builtin_function_options_);
  } else {
    builtin_function_options_ = NULL;
  }
  file_descriptor_set_index_ = from.file_descriptor_set_index_;
  // @@protoc_insertion_point(copy_constructor:zetasql.SimpleCatalogProto)
}

void SimpleCatalogProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  builtin_function_options_ = NULL;
  file_descriptor_set_index_ = -1;
}

SimpleCatalogProto::~SimpleCatalogProto() {
  // @@protoc_insertion_point(destructor:zetasql.SimpleCatalogProto)
  SharedDtor();
}

void SimpleCatalogProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete builtin_function_options_;
}

void SimpleCatalogProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimpleCatalogProto::descriptor() {
  ::protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimpleCatalogProto& SimpleCatalogProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::scc_info_SimpleCatalogProto.base);
  return *internal_default_instance();
}


void SimpleCatalogProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.SimpleCatalogProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.Clear();
  named_type_.Clear();
  catalog_.Clear();
  custom_function_.Clear();
  procedure_.Clear();
  custom_tvf_.Clear();
  constant_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(builtin_function_options_ != NULL);
      builtin_function_options_->Clear();
    }
    file_descriptor_set_index_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SimpleCatalogProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.SimpleCatalogProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.SimpleCatalogProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.SimpleTableProto table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.SimpleCatalogProto.NamedTypeProto named_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_named_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.SimpleCatalogProto catalog = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_catalog()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ZetaSQLBuiltinFunctionOptionsProto builtin_function_options = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_builtin_function_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.FunctionProto custom_function = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_custom_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 file_descriptor_set_index = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_file_descriptor_set_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &file_descriptor_set_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.ProcedureProto procedure = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_procedure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.TableValuedFunctionProto custom_tvf = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_custom_tvf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.SimpleConstantProto constant = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_constant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.SimpleCatalogProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.SimpleCatalogProto)
  return false;
#undef DO_
}

void SimpleCatalogProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.SimpleCatalogProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.SimpleCatalogProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .zetasql.SimpleTableProto table = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->table(static_cast<int>(i)),
      output);
  }

  // repeated .zetasql.SimpleCatalogProto.NamedTypeProto named_type = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->named_type_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->named_type(static_cast<int>(i)),
      output);
  }

  // repeated .zetasql.SimpleCatalogProto catalog = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->catalog_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->catalog(static_cast<int>(i)),
      output);
  }

  // optional .zetasql.ZetaSQLBuiltinFunctionOptionsProto builtin_function_options = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_builtin_function_options(), output);
  }

  // repeated .zetasql.FunctionProto custom_function = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_function_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->custom_function(static_cast<int>(i)),
      output);
  }

  // optional int32 file_descriptor_set_index = 7 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->file_descriptor_set_index(), output);
  }

  // repeated .zetasql.ProcedureProto procedure = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procedure_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->procedure(static_cast<int>(i)),
      output);
  }

  // repeated .zetasql.TableValuedFunctionProto custom_tvf = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_tvf_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->custom_tvf(static_cast<int>(i)),
      output);
  }

  // repeated .zetasql.SimpleConstantProto constant = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constant_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->constant(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.SimpleCatalogProto)
}

::google::protobuf::uint8* SimpleCatalogProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.SimpleCatalogProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.SimpleCatalogProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .zetasql.SimpleTableProto table = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->table(static_cast<int>(i)), deterministic, target);
  }

  // repeated .zetasql.SimpleCatalogProto.NamedTypeProto named_type = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->named_type_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->named_type(static_cast<int>(i)), deterministic, target);
  }

  // repeated .zetasql.SimpleCatalogProto catalog = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->catalog_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->catalog(static_cast<int>(i)), deterministic, target);
  }

  // optional .zetasql.ZetaSQLBuiltinFunctionOptionsProto builtin_function_options = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_builtin_function_options(), deterministic, target);
  }

  // repeated .zetasql.FunctionProto custom_function = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_function_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->custom_function(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 file_descriptor_set_index = 7 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->file_descriptor_set_index(), target);
  }

  // repeated .zetasql.ProcedureProto procedure = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->procedure_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->procedure(static_cast<int>(i)), deterministic, target);
  }

  // repeated .zetasql.TableValuedFunctionProto custom_tvf = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_tvf_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->custom_tvf(static_cast<int>(i)), deterministic, target);
  }

  // repeated .zetasql.SimpleConstantProto constant = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->constant_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->constant(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.SimpleCatalogProto)
  return target;
}

size_t SimpleCatalogProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.SimpleCatalogProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.SimpleTableProto table = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->table_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.SimpleCatalogProto.NamedTypeProto named_type = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->named_type_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->named_type(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.SimpleCatalogProto catalog = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->catalog_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->catalog(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.FunctionProto custom_function = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_function_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_function(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.ProcedureProto procedure = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->procedure_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->procedure(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.TableValuedFunctionProto custom_tvf = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_tvf_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_tvf(static_cast<int>(i)));
    }
  }

  // repeated .zetasql.SimpleConstantProto constant = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->constant_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->constant(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .zetasql.ZetaSQLBuiltinFunctionOptionsProto builtin_function_options = 5;
    if (has_builtin_function_options()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *builtin_function_options_);
    }

    // optional int32 file_descriptor_set_index = 7 [default = -1];
    if (has_file_descriptor_set_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->file_descriptor_set_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimpleCatalogProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.SimpleCatalogProto)
  GOOGLE_DCHECK_NE(&from, this);
  const SimpleCatalogProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimpleCatalogProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.SimpleCatalogProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.SimpleCatalogProto)
    MergeFrom(*source);
  }
}

void SimpleCatalogProto::MergeFrom(const SimpleCatalogProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.SimpleCatalogProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_.MergeFrom(from.table_);
  named_type_.MergeFrom(from.named_type_);
  catalog_.MergeFrom(from.catalog_);
  custom_function_.MergeFrom(from.custom_function_);
  procedure_.MergeFrom(from.procedure_);
  custom_tvf_.MergeFrom(from.custom_tvf_);
  constant_.MergeFrom(from.constant_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_builtin_function_options()->::zetasql::ZetaSQLBuiltinFunctionOptionsProto::MergeFrom(from.builtin_function_options());
    }
    if (cached_has_bits & 0x00000004u) {
      file_descriptor_set_index_ = from.file_descriptor_set_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SimpleCatalogProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.SimpleCatalogProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleCatalogProto::CopyFrom(const SimpleCatalogProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.SimpleCatalogProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleCatalogProto::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->table())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->named_type())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->catalog())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->custom_function())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->procedure())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->custom_tvf())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->constant())) return false;
  return true;
}

void SimpleCatalogProto::Swap(SimpleCatalogProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimpleCatalogProto::InternalSwap(SimpleCatalogProto* other) {
  using std::swap;
  CastToBase(&table_)->InternalSwap(CastToBase(&other->table_));
  CastToBase(&named_type_)->InternalSwap(CastToBase(&other->named_type_));
  CastToBase(&catalog_)->InternalSwap(CastToBase(&other->catalog_));
  CastToBase(&custom_function_)->InternalSwap(CastToBase(&other->custom_function_));
  CastToBase(&procedure_)->InternalSwap(CastToBase(&other->procedure_));
  CastToBase(&custom_tvf_)->InternalSwap(CastToBase(&other->custom_tvf_));
  CastToBase(&constant_)->InternalSwap(CastToBase(&other->constant_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(builtin_function_options_, other->builtin_function_options_);
  swap(file_descriptor_set_index_, other->file_descriptor_set_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimpleCatalogProto::GetMetadata() const {
  protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fproto_2fsimple_5fcatalog_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::SimpleCatalogProto_NamedTypeProto* Arena::CreateMaybeMessage< ::zetasql::SimpleCatalogProto_NamedTypeProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::SimpleCatalogProto_NamedTypeProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::SimpleCatalogProto* Arena::CreateMaybeMessage< ::zetasql::SimpleCatalogProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::SimpleCatalogProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
