// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/public/parse_location_range.proto

#ifndef PROTOBUF_INCLUDED_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto
#define PROTOBUF_INCLUDED_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto 

namespace protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto
namespace zetasql {
class ParseLocationRangeProto;
class ParseLocationRangeProtoDefaultTypeInternal;
extern ParseLocationRangeProtoDefaultTypeInternal _ParseLocationRangeProto_default_instance_;
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> ::zetasql::ParseLocationRangeProto* Arena::CreateMaybeMessage<::zetasql::ParseLocationRangeProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zetasql {

// ===================================================================

class ParseLocationRangeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zetasql.ParseLocationRangeProto) */ {
 public:
  ParseLocationRangeProto();
  virtual ~ParseLocationRangeProto();

  ParseLocationRangeProto(const ParseLocationRangeProto& from);

  inline ParseLocationRangeProto& operator=(const ParseLocationRangeProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParseLocationRangeProto(ParseLocationRangeProto&& from) noexcept
    : ParseLocationRangeProto() {
    *this = ::std::move(from);
  }

  inline ParseLocationRangeProto& operator=(ParseLocationRangeProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ParseLocationRangeProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParseLocationRangeProto* internal_default_instance() {
    return reinterpret_cast<const ParseLocationRangeProto*>(
               &_ParseLocationRangeProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ParseLocationRangeProto* other);
  friend void swap(ParseLocationRangeProto& a, ParseLocationRangeProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParseLocationRangeProto* New() const final {
    return CreateMaybeMessage<ParseLocationRangeProto>(NULL);
  }

  ParseLocationRangeProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParseLocationRangeProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParseLocationRangeProto& from);
  void MergeFrom(const ParseLocationRangeProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParseLocationRangeProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional int32 start = 2;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 2;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // optional int32 end = 3;
  bool has_end() const;
  void clear_end();
  static const int kEndFieldNumber = 3;
  ::google::protobuf::int32 end() const;
  void set_end(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zetasql.ParseLocationRangeProto)
 private:
  void set_has_filename();
  void clear_has_filename();
  void set_has_start();
  void clear_has_start();
  void set_has_end();
  void clear_has_end();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 end_;
  friend struct ::protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParseLocationRangeProto

// optional string filename = 1;
inline bool ParseLocationRangeProto::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ParseLocationRangeProto::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ParseLocationRangeProto::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ParseLocationRangeProto::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& ParseLocationRangeProto::filename() const {
  // @@protoc_insertion_point(field_get:zetasql.ParseLocationRangeProto.filename)
  return filename_.GetNoArena();
}
inline void ParseLocationRangeProto::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zetasql.ParseLocationRangeProto.filename)
}
#if LANG_CXX11
inline void ParseLocationRangeProto::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:zetasql.ParseLocationRangeProto.filename)
}
#endif
inline void ParseLocationRangeProto::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zetasql.ParseLocationRangeProto.filename)
}
inline void ParseLocationRangeProto::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zetasql.ParseLocationRangeProto.filename)
}
inline ::std::string* ParseLocationRangeProto::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:zetasql.ParseLocationRangeProto.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParseLocationRangeProto::release_filename() {
  // @@protoc_insertion_point(field_release:zetasql.ParseLocationRangeProto.filename)
  if (!has_filename()) {
    return NULL;
  }
  clear_has_filename();
  return filename_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParseLocationRangeProto::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:zetasql.ParseLocationRangeProto.filename)
}

// optional int32 start = 2;
inline bool ParseLocationRangeProto::has_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ParseLocationRangeProto::set_has_start() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ParseLocationRangeProto::clear_has_start() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ParseLocationRangeProto::clear_start() {
  start_ = 0;
  clear_has_start();
}
inline ::google::protobuf::int32 ParseLocationRangeProto::start() const {
  // @@protoc_insertion_point(field_get:zetasql.ParseLocationRangeProto.start)
  return start_;
}
inline void ParseLocationRangeProto::set_start(::google::protobuf::int32 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:zetasql.ParseLocationRangeProto.start)
}

// optional int32 end = 3;
inline bool ParseLocationRangeProto::has_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ParseLocationRangeProto::set_has_end() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ParseLocationRangeProto::clear_has_end() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ParseLocationRangeProto::clear_end() {
  end_ = 0;
  clear_has_end();
}
inline ::google::protobuf::int32 ParseLocationRangeProto::end() const {
  // @@protoc_insertion_point(field_get:zetasql.ParseLocationRangeProto.end)
  return end_;
}
inline void ParseLocationRangeProto::set_end(::google::protobuf::int32 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:zetasql.ParseLocationRangeProto.end)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace zetasql

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto
