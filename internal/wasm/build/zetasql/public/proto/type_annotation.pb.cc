// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/public/proto/type_annotation.proto

#include "zetasql/public/proto/type_annotation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace zetasql {
class FieldFormatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldFormat>
      _instance;
} _FieldFormat_default_instance_;
class DeprecatedEncodingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeprecatedEncoding>
      _instance;
} _DeprecatedEncoding_default_instance_;
}  // namespace zetasql
namespace protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto {
static void InitDefaultsFieldFormat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_FieldFormat_default_instance_;
    new (ptr) ::zetasql::FieldFormat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::FieldFormat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FieldFormat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFieldFormat}, {}};

static void InitDefaultsDeprecatedEncoding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_DeprecatedEncoding_default_instance_;
    new (ptr) ::zetasql::DeprecatedEncoding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::DeprecatedEncoding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeprecatedEncoding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeprecatedEncoding}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FieldFormat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeprecatedEncoding.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FieldFormat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FieldFormat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::DeprecatedEncoding, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::DeprecatedEncoding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::zetasql::FieldFormat)},
  { 5, 10, sizeof(::zetasql::DeprecatedEncoding)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_FieldFormat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_DeprecatedEncoding_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "zetasql/public/proto/type_annotation.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*zetasql/public/proto/type_annotation.p"
      "roto\022\007zetasql\032 google/protobuf/descripto"
      "r.proto\"\324\002\n\013FieldFormat\"\304\002\n\006Format\022\022\n\016DE"
      "FAULT_FORMAT\020\000\022\010\n\004DATE\020\001\022\025\n\021TIMESTAMP_SE"
      "CONDS\020\002\022\024\n\020TIMESTAMP_MILLIS\020\003\022\024\n\020TIMESTA"
      "MP_MICROS\020\004\022\023\n\017TIMESTAMP_NANOS\020\005\022\020\n\014DATE"
      "_DECIMAL\020\006\022\017\n\013TIME_MICROS\020\007\022\023\n\017DATETIME_"
      "MICROS\020\010\022\030\n\024ST_GEOGRAPHY_ENCODED\020\t\022\013\n\007NU"
      "MERIC\020\n\022\016\n\nBIGNUMERIC\020\013\022\010\n\004JSON\020\014\022\014\n\010INT"
      "ERVAL\020\016\022=\n0__FieldFormat_Type__switch_mu"
      "st_have_a_default__\020\377\377\377\377\377\377\377\377\377\001\"\243\001\n\022Depre"
      "catedEncoding\"\214\001\n\010Encoding\022\024\n\020DEFAULT_EN"
      "CODING\020\000\022\021\n\rDATE_PACKED32\020\001\022\020\n\014DATE_DECI"
      "MAL\020\001\022A\n4__FieldFormat_Encoding__switch_"
      "must_have_a_default__\020\377\377\377\377\377\377\377\377\377\001\032\002\020\001:M\n\006"
      "format\022\035.google.protobuf.FieldOptions\030\313\353"
      "\341  \001(\0162\033.zetasql.FieldFormat.Format:K\n\004t"
      "ype\022\035.google.protobuf.FieldOptions\030\345\252\337\027 "
      "\001(\0162\033.zetasql.FieldFormat.Format:X\n\010enco"
      "ding\022\035.google.protobuf.FieldOptions\030\247\371\376\035"
      " \001(\0162$.zetasql.DeprecatedEncoding.Encodi"
      "ng:<\n\014use_defaults\022\035.google.protobuf.Fie"
      "ldOptions\030\277\246\336\027 \001(\010:\004true:D\n\022use_field_de"
      "faults\022\037.google.protobuf.MessageOptions\030"
      "\202\371\326\027 \001(\010:\004trueB,\n\022com.google.zetasqlB\023Ty"
      "peAnnotationProto\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1020);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zetasql/public/proto/type_annotation.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto
namespace zetasql {
const ::google::protobuf::EnumDescriptor* FieldFormat_Format_descriptor() {
  protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::file_level_enum_descriptors[0];
}
bool FieldFormat_Format_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FieldFormat_Format FieldFormat::DEFAULT_FORMAT;
const FieldFormat_Format FieldFormat::DATE;
const FieldFormat_Format FieldFormat::TIMESTAMP_SECONDS;
const FieldFormat_Format FieldFormat::TIMESTAMP_MILLIS;
const FieldFormat_Format FieldFormat::TIMESTAMP_MICROS;
const FieldFormat_Format FieldFormat::TIMESTAMP_NANOS;
const FieldFormat_Format FieldFormat::DATE_DECIMAL;
const FieldFormat_Format FieldFormat::TIME_MICROS;
const FieldFormat_Format FieldFormat::DATETIME_MICROS;
const FieldFormat_Format FieldFormat::ST_GEOGRAPHY_ENCODED;
const FieldFormat_Format FieldFormat::NUMERIC;
const FieldFormat_Format FieldFormat::BIGNUMERIC;
const FieldFormat_Format FieldFormat::JSON;
const FieldFormat_Format FieldFormat::INTERVAL;
const FieldFormat_Format FieldFormat::__FieldFormat_Type__switch_must_have_a_default__;
const FieldFormat_Format FieldFormat::Format_MIN;
const FieldFormat_Format FieldFormat::Format_MAX;
const int FieldFormat::Format_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DeprecatedEncoding_Encoding_descriptor() {
  protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::file_level_enum_descriptors[1];
}
bool DeprecatedEncoding_Encoding_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DeprecatedEncoding_Encoding DeprecatedEncoding::DEFAULT_ENCODING;
const DeprecatedEncoding_Encoding DeprecatedEncoding::DATE_PACKED32;
const DeprecatedEncoding_Encoding DeprecatedEncoding::DATE_DECIMAL;
const DeprecatedEncoding_Encoding DeprecatedEncoding::__FieldFormat_Encoding__switch_must_have_a_default__;
const DeprecatedEncoding_Encoding DeprecatedEncoding::Encoding_MIN;
const DeprecatedEncoding_Encoding DeprecatedEncoding::Encoding_MAX;
const int DeprecatedEncoding::Encoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void FieldFormat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldFormat::FieldFormat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::scc_info_FieldFormat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.FieldFormat)
}
FieldFormat::FieldFormat(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::scc_info_FieldFormat.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zetasql.FieldFormat)
}
FieldFormat::FieldFormat(const FieldFormat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zetasql.FieldFormat)
}

void FieldFormat::SharedCtor() {
}

FieldFormat::~FieldFormat() {
  // @@protoc_insertion_point(destructor:zetasql.FieldFormat)
  SharedDtor();
}

void FieldFormat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void FieldFormat::ArenaDtor(void* object) {
  FieldFormat* _this = reinterpret_cast< FieldFormat* >(object);
  (void)_this;
}
void FieldFormat::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FieldFormat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldFormat::descriptor() {
  ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldFormat& FieldFormat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::scc_info_FieldFormat.base);
  return *internal_default_instance();
}


void FieldFormat::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.FieldFormat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FieldFormat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.FieldFormat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.FieldFormat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.FieldFormat)
  return false;
#undef DO_
}

void FieldFormat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.FieldFormat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.FieldFormat)
}

::google::protobuf::uint8* FieldFormat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.FieldFormat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.FieldFormat)
  return target;
}

size_t FieldFormat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.FieldFormat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldFormat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.FieldFormat)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldFormat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldFormat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.FieldFormat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.FieldFormat)
    MergeFrom(*source);
  }
}

void FieldFormat::MergeFrom(const FieldFormat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.FieldFormat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FieldFormat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.FieldFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldFormat::CopyFrom(const FieldFormat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.FieldFormat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldFormat::IsInitialized() const {
  return true;
}

void FieldFormat::Swap(FieldFormat* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FieldFormat* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FieldFormat::UnsafeArenaSwap(FieldFormat* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FieldFormat::InternalSwap(FieldFormat* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldFormat::GetMetadata() const {
  protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeprecatedEncoding::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeprecatedEncoding::DeprecatedEncoding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::scc_info_DeprecatedEncoding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.DeprecatedEncoding)
}
DeprecatedEncoding::DeprecatedEncoding(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::scc_info_DeprecatedEncoding.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zetasql.DeprecatedEncoding)
}
DeprecatedEncoding::DeprecatedEncoding(const DeprecatedEncoding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zetasql.DeprecatedEncoding)
}

void DeprecatedEncoding::SharedCtor() {
}

DeprecatedEncoding::~DeprecatedEncoding() {
  // @@protoc_insertion_point(destructor:zetasql.DeprecatedEncoding)
  SharedDtor();
}

void DeprecatedEncoding::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void DeprecatedEncoding::ArenaDtor(void* object) {
  DeprecatedEncoding* _this = reinterpret_cast< DeprecatedEncoding* >(object);
  (void)_this;
}
void DeprecatedEncoding::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeprecatedEncoding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeprecatedEncoding::descriptor() {
  ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeprecatedEncoding& DeprecatedEncoding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::scc_info_DeprecatedEncoding.base);
  return *internal_default_instance();
}


void DeprecatedEncoding::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.DeprecatedEncoding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeprecatedEncoding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.DeprecatedEncoding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.DeprecatedEncoding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.DeprecatedEncoding)
  return false;
#undef DO_
}

void DeprecatedEncoding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.DeprecatedEncoding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.DeprecatedEncoding)
}

::google::protobuf::uint8* DeprecatedEncoding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.DeprecatedEncoding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.DeprecatedEncoding)
  return target;
}

size_t DeprecatedEncoding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.DeprecatedEncoding)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeprecatedEncoding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.DeprecatedEncoding)
  GOOGLE_DCHECK_NE(&from, this);
  const DeprecatedEncoding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeprecatedEncoding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.DeprecatedEncoding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.DeprecatedEncoding)
    MergeFrom(*source);
  }
}

void DeprecatedEncoding::MergeFrom(const DeprecatedEncoding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.DeprecatedEncoding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeprecatedEncoding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.DeprecatedEncoding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeprecatedEncoding::CopyFrom(const DeprecatedEncoding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.DeprecatedEncoding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeprecatedEncoding::IsInitialized() const {
  return true;
}

void DeprecatedEncoding::Swap(DeprecatedEncoding* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeprecatedEncoding* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeprecatedEncoding::UnsafeArenaSwap(DeprecatedEncoding* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeprecatedEncoding::InternalSwap(DeprecatedEncoding* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeprecatedEncoding::GetMetadata() const {
  protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::file_level_metadata[kIndexInFileMessages];
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::zetasql::FieldFormat_Format, ::zetasql::FieldFormat_Format_IsValid>, 14, false >
  format(kFormatFieldNumber, static_cast< ::zetasql::FieldFormat_Format >(0));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::zetasql::FieldFormat_Format, ::zetasql::FieldFormat_Format_IsValid>, 14, false >
  type(kTypeFieldNumber, static_cast< ::zetasql::FieldFormat_Format >(0));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::zetasql::DeprecatedEncoding_Encoding, ::zetasql::DeprecatedEncoding_Encoding_IsValid>, 14, false >
  encoding(kEncodingFieldNumber, static_cast< ::zetasql::DeprecatedEncoding_Encoding >(0));
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  use_defaults(kUseDefaultsFieldNumber, true);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  use_field_defaults(kUseFieldDefaultsFieldNumber, true);

// @@protoc_insertion_point(namespace_scope)
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::FieldFormat* Arena::CreateMaybeMessage< ::zetasql::FieldFormat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zetasql::FieldFormat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::DeprecatedEncoding* Arena::CreateMaybeMessage< ::zetasql::DeprecatedEncoding >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zetasql::DeprecatedEncoding >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
