// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/public/proto/type_annotation.proto

#ifndef PROTOBUF_INCLUDED_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto
#define PROTOBUF_INCLUDED_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto 

namespace protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto
namespace zetasql {
class DeprecatedEncoding;
class DeprecatedEncodingDefaultTypeInternal;
extern DeprecatedEncodingDefaultTypeInternal _DeprecatedEncoding_default_instance_;
class FieldFormat;
class FieldFormatDefaultTypeInternal;
extern FieldFormatDefaultTypeInternal _FieldFormat_default_instance_;
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> ::zetasql::DeprecatedEncoding* Arena::CreateMaybeMessage<::zetasql::DeprecatedEncoding>(Arena*);
template<> ::zetasql::FieldFormat* Arena::CreateMaybeMessage<::zetasql::FieldFormat>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zetasql {

enum FieldFormat_Format {
  FieldFormat_Format_DEFAULT_FORMAT = 0,
  FieldFormat_Format_DATE = 1,
  FieldFormat_Format_TIMESTAMP_SECONDS = 2,
  FieldFormat_Format_TIMESTAMP_MILLIS = 3,
  FieldFormat_Format_TIMESTAMP_MICROS = 4,
  FieldFormat_Format_TIMESTAMP_NANOS = 5,
  FieldFormat_Format_DATE_DECIMAL = 6,
  FieldFormat_Format_TIME_MICROS = 7,
  FieldFormat_Format_DATETIME_MICROS = 8,
  FieldFormat_Format_ST_GEOGRAPHY_ENCODED = 9,
  FieldFormat_Format_NUMERIC = 10,
  FieldFormat_Format_BIGNUMERIC = 11,
  FieldFormat_Format_JSON = 12,
  FieldFormat_Format_INTERVAL = 14,
  FieldFormat_Format___FieldFormat_Type__switch_must_have_a_default__ = -1
};
bool FieldFormat_Format_IsValid(int value);
const FieldFormat_Format FieldFormat_Format_Format_MIN = FieldFormat_Format___FieldFormat_Type__switch_must_have_a_default__;
const FieldFormat_Format FieldFormat_Format_Format_MAX = FieldFormat_Format_INTERVAL;
const int FieldFormat_Format_Format_ARRAYSIZE = FieldFormat_Format_Format_MAX + 1;

const ::google::protobuf::EnumDescriptor* FieldFormat_Format_descriptor();
inline const ::std::string& FieldFormat_Format_Name(FieldFormat_Format value) {
  return ::google::protobuf::internal::NameOfEnum(
    FieldFormat_Format_descriptor(), value);
}
inline bool FieldFormat_Format_Parse(
    const ::std::string& name, FieldFormat_Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FieldFormat_Format>(
    FieldFormat_Format_descriptor(), name, value);
}
enum DeprecatedEncoding_Encoding {
  DeprecatedEncoding_Encoding_DEFAULT_ENCODING = 0,
  DeprecatedEncoding_Encoding_DATE_PACKED32 = 1,
  DeprecatedEncoding_Encoding_DATE_DECIMAL = 1,
  DeprecatedEncoding_Encoding___FieldFormat_Encoding__switch_must_have_a_default__ = -1
};
bool DeprecatedEncoding_Encoding_IsValid(int value);
const DeprecatedEncoding_Encoding DeprecatedEncoding_Encoding_Encoding_MIN = DeprecatedEncoding_Encoding___FieldFormat_Encoding__switch_must_have_a_default__;
const DeprecatedEncoding_Encoding DeprecatedEncoding_Encoding_Encoding_MAX = DeprecatedEncoding_Encoding_DATE_PACKED32;
const int DeprecatedEncoding_Encoding_Encoding_ARRAYSIZE = DeprecatedEncoding_Encoding_Encoding_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeprecatedEncoding_Encoding_descriptor();
inline const ::std::string& DeprecatedEncoding_Encoding_Name(DeprecatedEncoding_Encoding value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeprecatedEncoding_Encoding_descriptor(), value);
}
inline bool DeprecatedEncoding_Encoding_Parse(
    const ::std::string& name, DeprecatedEncoding_Encoding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeprecatedEncoding_Encoding>(
    DeprecatedEncoding_Encoding_descriptor(), name, value);
}
// ===================================================================

class FieldFormat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zetasql.FieldFormat) */ {
 public:
  FieldFormat();
  virtual ~FieldFormat();

  FieldFormat(const FieldFormat& from);

  inline FieldFormat& operator=(const FieldFormat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldFormat(FieldFormat&& from) noexcept
    : FieldFormat() {
    *this = ::std::move(from);
  }

  inline FieldFormat& operator=(FieldFormat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldFormat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldFormat* internal_default_instance() {
    return reinterpret_cast<const FieldFormat*>(
               &_FieldFormat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(FieldFormat* other);
  void Swap(FieldFormat* other);
  friend void swap(FieldFormat& a, FieldFormat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldFormat* New() const final {
    return CreateMaybeMessage<FieldFormat>(NULL);
  }

  FieldFormat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FieldFormat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FieldFormat& from);
  void MergeFrom(const FieldFormat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldFormat* other);
  protected:
  explicit FieldFormat(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FieldFormat_Format Format;
  static const Format DEFAULT_FORMAT =
    FieldFormat_Format_DEFAULT_FORMAT;
  static const Format DATE =
    FieldFormat_Format_DATE;
  static const Format TIMESTAMP_SECONDS =
    FieldFormat_Format_TIMESTAMP_SECONDS;
  static const Format TIMESTAMP_MILLIS =
    FieldFormat_Format_TIMESTAMP_MILLIS;
  static const Format TIMESTAMP_MICROS =
    FieldFormat_Format_TIMESTAMP_MICROS;
  static const Format TIMESTAMP_NANOS =
    FieldFormat_Format_TIMESTAMP_NANOS;
  static const Format DATE_DECIMAL =
    FieldFormat_Format_DATE_DECIMAL;
  static const Format TIME_MICROS =
    FieldFormat_Format_TIME_MICROS;
  static const Format DATETIME_MICROS =
    FieldFormat_Format_DATETIME_MICROS;
  static const Format ST_GEOGRAPHY_ENCODED =
    FieldFormat_Format_ST_GEOGRAPHY_ENCODED;
  static const Format NUMERIC =
    FieldFormat_Format_NUMERIC;
  static const Format BIGNUMERIC =
    FieldFormat_Format_BIGNUMERIC;
  static const Format JSON =
    FieldFormat_Format_JSON;
  static const Format INTERVAL =
    FieldFormat_Format_INTERVAL;
  static const Format __FieldFormat_Type__switch_must_have_a_default__ =
    FieldFormat_Format___FieldFormat_Type__switch_must_have_a_default__;
  static inline bool Format_IsValid(int value) {
    return FieldFormat_Format_IsValid(value);
  }
  static const Format Format_MIN =
    FieldFormat_Format_Format_MIN;
  static const Format Format_MAX =
    FieldFormat_Format_Format_MAX;
  static const int Format_ARRAYSIZE =
    FieldFormat_Format_Format_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Format_descriptor() {
    return FieldFormat_Format_descriptor();
  }
  static inline const ::std::string& Format_Name(Format value) {
    return FieldFormat_Format_Name(value);
  }
  static inline bool Format_Parse(const ::std::string& name,
      Format* value) {
    return FieldFormat_Format_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zetasql.FieldFormat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeprecatedEncoding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zetasql.DeprecatedEncoding) */ {
 public:
  DeprecatedEncoding();
  virtual ~DeprecatedEncoding();

  DeprecatedEncoding(const DeprecatedEncoding& from);

  inline DeprecatedEncoding& operator=(const DeprecatedEncoding& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeprecatedEncoding(DeprecatedEncoding&& from) noexcept
    : DeprecatedEncoding() {
    *this = ::std::move(from);
  }

  inline DeprecatedEncoding& operator=(DeprecatedEncoding&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeprecatedEncoding& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeprecatedEncoding* internal_default_instance() {
    return reinterpret_cast<const DeprecatedEncoding*>(
               &_DeprecatedEncoding_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(DeprecatedEncoding* other);
  void Swap(DeprecatedEncoding* other);
  friend void swap(DeprecatedEncoding& a, DeprecatedEncoding& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeprecatedEncoding* New() const final {
    return CreateMaybeMessage<DeprecatedEncoding>(NULL);
  }

  DeprecatedEncoding* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeprecatedEncoding>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeprecatedEncoding& from);
  void MergeFrom(const DeprecatedEncoding& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeprecatedEncoding* other);
  protected:
  explicit DeprecatedEncoding(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef DeprecatedEncoding_Encoding Encoding;
  static const Encoding DEFAULT_ENCODING =
    DeprecatedEncoding_Encoding_DEFAULT_ENCODING;
  static const Encoding DATE_PACKED32 =
    DeprecatedEncoding_Encoding_DATE_PACKED32;
  static const Encoding DATE_DECIMAL =
    DeprecatedEncoding_Encoding_DATE_DECIMAL;
  static const Encoding __FieldFormat_Encoding__switch_must_have_a_default__ =
    DeprecatedEncoding_Encoding___FieldFormat_Encoding__switch_must_have_a_default__;
  static inline bool Encoding_IsValid(int value) {
    return DeprecatedEncoding_Encoding_IsValid(value);
  }
  static const Encoding Encoding_MIN =
    DeprecatedEncoding_Encoding_Encoding_MIN;
  static const Encoding Encoding_MAX =
    DeprecatedEncoding_Encoding_Encoding_MAX;
  static const int Encoding_ARRAYSIZE =
    DeprecatedEncoding_Encoding_Encoding_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Encoding_descriptor() {
    return DeprecatedEncoding_Encoding_descriptor();
  }
  static inline const ::std::string& Encoding_Name(Encoding value) {
    return DeprecatedEncoding_Encoding_Name(value);
  }
  static inline bool Encoding_Parse(const ::std::string& name,
      Encoding* value) {
    return DeprecatedEncoding_Encoding_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zetasql.DeprecatedEncoding)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto::TableStruct;
};
// ===================================================================

static const int kFormatFieldNumber = 68711883;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::zetasql::FieldFormat_Format, ::zetasql::FieldFormat_Format_IsValid>, 14, false >
  format;
static const int kTypeFieldNumber = 49796453;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::zetasql::FieldFormat_Format, ::zetasql::FieldFormat_Format_IsValid>, 14, false >
  type;
static const int kEncodingFieldNumber = 62897319;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::zetasql::DeprecatedEncoding_Encoding, ::zetasql::DeprecatedEncoding_Encoding_IsValid>, 14, false >
  encoding;
static const int kUseDefaultsFieldNumber = 49779519;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  use_defaults;
static const int kUseFieldDefaultsFieldNumber = 49659010;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  use_field_defaults;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FieldFormat

// -------------------------------------------------------------------

// DeprecatedEncoding

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zetasql

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zetasql::FieldFormat_Format> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zetasql::FieldFormat_Format>() {
  return ::zetasql::FieldFormat_Format_descriptor();
}
template <> struct is_proto_enum< ::zetasql::DeprecatedEncoding_Encoding> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zetasql::DeprecatedEncoding_Encoding>() {
  return ::zetasql::DeprecatedEncoding_Encoding_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_zetasql_2fpublic_2fproto_2ftype_5fannotation_2eproto
