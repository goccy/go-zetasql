// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/public/type_parameters.proto

#ifndef PROTOBUF_INCLUDED_zetasql_2fpublic_2ftype_5fparameters_2eproto
#define PROTOBUF_INCLUDED_zetasql_2fpublic_2ftype_5fparameters_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "zetasql/public/simple_value.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2ftype_5fparameters_2eproto 

namespace protobuf_zetasql_2fpublic_2ftype_5fparameters_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_zetasql_2fpublic_2ftype_5fparameters_2eproto
namespace zetasql {
class ExtendedTypeParametersProto;
class ExtendedTypeParametersProtoDefaultTypeInternal;
extern ExtendedTypeParametersProtoDefaultTypeInternal _ExtendedTypeParametersProto_default_instance_;
class NumericTypeParametersProto;
class NumericTypeParametersProtoDefaultTypeInternal;
extern NumericTypeParametersProtoDefaultTypeInternal _NumericTypeParametersProto_default_instance_;
class StringTypeParametersProto;
class StringTypeParametersProtoDefaultTypeInternal;
extern StringTypeParametersProtoDefaultTypeInternal _StringTypeParametersProto_default_instance_;
class TypeParametersProto;
class TypeParametersProtoDefaultTypeInternal;
extern TypeParametersProtoDefaultTypeInternal _TypeParametersProto_default_instance_;
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> ::zetasql::ExtendedTypeParametersProto* Arena::CreateMaybeMessage<::zetasql::ExtendedTypeParametersProto>(Arena*);
template<> ::zetasql::NumericTypeParametersProto* Arena::CreateMaybeMessage<::zetasql::NumericTypeParametersProto>(Arena*);
template<> ::zetasql::StringTypeParametersProto* Arena::CreateMaybeMessage<::zetasql::StringTypeParametersProto>(Arena*);
template<> ::zetasql::TypeParametersProto* Arena::CreateMaybeMessage<::zetasql::TypeParametersProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace zetasql {

// ===================================================================

class TypeParametersProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zetasql.TypeParametersProto) */ {
 public:
  TypeParametersProto();
  virtual ~TypeParametersProto();

  TypeParametersProto(const TypeParametersProto& from);

  inline TypeParametersProto& operator=(const TypeParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TypeParametersProto(TypeParametersProto&& from) noexcept
    : TypeParametersProto() {
    *this = ::std::move(from);
  }

  inline TypeParametersProto& operator=(TypeParametersProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeParametersProto& default_instance();

  enum TypeParametersCase {
    kStringTypeParameters = 1,
    kNumericTypeParameters = 2,
    kExtendedTypeParameters = 3,
    TYPE_PARAMETERS_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TypeParametersProto* internal_default_instance() {
    return reinterpret_cast<const TypeParametersProto*>(
               &_TypeParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TypeParametersProto* other);
  friend void swap(TypeParametersProto& a, TypeParametersProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TypeParametersProto* New() const final {
    return CreateMaybeMessage<TypeParametersProto>(NULL);
  }

  TypeParametersProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TypeParametersProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TypeParametersProto& from);
  void MergeFrom(const TypeParametersProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TypeParametersProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zetasql.TypeParametersProto child_list = 100;
  int child_list_size() const;
  void clear_child_list();
  static const int kChildListFieldNumber = 100;
  ::zetasql::TypeParametersProto* mutable_child_list(int index);
  ::google::protobuf::RepeatedPtrField< ::zetasql::TypeParametersProto >*
      mutable_child_list();
  const ::zetasql::TypeParametersProto& child_list(int index) const;
  ::zetasql::TypeParametersProto* add_child_list();
  const ::google::protobuf::RepeatedPtrField< ::zetasql::TypeParametersProto >&
      child_list() const;

  // optional .zetasql.StringTypeParametersProto string_type_parameters = 1;
  bool has_string_type_parameters() const;
  void clear_string_type_parameters();
  static const int kStringTypeParametersFieldNumber = 1;
  private:
  const ::zetasql::StringTypeParametersProto& _internal_string_type_parameters() const;
  public:
  const ::zetasql::StringTypeParametersProto& string_type_parameters() const;
  ::zetasql::StringTypeParametersProto* release_string_type_parameters();
  ::zetasql::StringTypeParametersProto* mutable_string_type_parameters();
  void set_allocated_string_type_parameters(::zetasql::StringTypeParametersProto* string_type_parameters);

  // optional .zetasql.NumericTypeParametersProto numeric_type_parameters = 2;
  bool has_numeric_type_parameters() const;
  void clear_numeric_type_parameters();
  static const int kNumericTypeParametersFieldNumber = 2;
  private:
  const ::zetasql::NumericTypeParametersProto& _internal_numeric_type_parameters() const;
  public:
  const ::zetasql::NumericTypeParametersProto& numeric_type_parameters() const;
  ::zetasql::NumericTypeParametersProto* release_numeric_type_parameters();
  ::zetasql::NumericTypeParametersProto* mutable_numeric_type_parameters();
  void set_allocated_numeric_type_parameters(::zetasql::NumericTypeParametersProto* numeric_type_parameters);

  // optional .zetasql.ExtendedTypeParametersProto extended_type_parameters = 3;
  bool has_extended_type_parameters() const;
  void clear_extended_type_parameters();
  static const int kExtendedTypeParametersFieldNumber = 3;
  private:
  const ::zetasql::ExtendedTypeParametersProto& _internal_extended_type_parameters() const;
  public:
  const ::zetasql::ExtendedTypeParametersProto& extended_type_parameters() const;
  ::zetasql::ExtendedTypeParametersProto* release_extended_type_parameters();
  ::zetasql::ExtendedTypeParametersProto* mutable_extended_type_parameters();
  void set_allocated_extended_type_parameters(::zetasql::ExtendedTypeParametersProto* extended_type_parameters);

  void clear_type_parameters();
  TypeParametersCase type_parameters_case() const;
  // @@protoc_insertion_point(class_scope:zetasql.TypeParametersProto)
 private:
  void set_has_string_type_parameters();
  void set_has_numeric_type_parameters();
  void set_has_extended_type_parameters();

  inline bool has_type_parameters() const;
  inline void clear_has_type_parameters();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::zetasql::TypeParametersProto > child_list_;
  union TypeParametersUnion {
    TypeParametersUnion() {}
    ::zetasql::StringTypeParametersProto* string_type_parameters_;
    ::zetasql::NumericTypeParametersProto* numeric_type_parameters_;
    ::zetasql::ExtendedTypeParametersProto* extended_type_parameters_;
  } type_parameters_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_zetasql_2fpublic_2ftype_5fparameters_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringTypeParametersProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zetasql.StringTypeParametersProto) */ {
 public:
  StringTypeParametersProto();
  virtual ~StringTypeParametersProto();

  StringTypeParametersProto(const StringTypeParametersProto& from);

  inline StringTypeParametersProto& operator=(const StringTypeParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringTypeParametersProto(StringTypeParametersProto&& from) noexcept
    : StringTypeParametersProto() {
    *this = ::std::move(from);
  }

  inline StringTypeParametersProto& operator=(StringTypeParametersProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringTypeParametersProto& default_instance();

  enum ParamCase {
    kMaxLength = 1,
    kIsMaxLength = 2,
    PARAM_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringTypeParametersProto* internal_default_instance() {
    return reinterpret_cast<const StringTypeParametersProto*>(
               &_StringTypeParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StringTypeParametersProto* other);
  friend void swap(StringTypeParametersProto& a, StringTypeParametersProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringTypeParametersProto* New() const final {
    return CreateMaybeMessage<StringTypeParametersProto>(NULL);
  }

  StringTypeParametersProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringTypeParametersProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringTypeParametersProto& from);
  void MergeFrom(const StringTypeParametersProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringTypeParametersProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 max_length = 1;
  bool has_max_length() const;
  void clear_max_length();
  static const int kMaxLengthFieldNumber = 1;
  ::google::protobuf::int64 max_length() const;
  void set_max_length(::google::protobuf::int64 value);

  // optional bool is_max_length = 2;
  bool has_is_max_length() const;
  void clear_is_max_length();
  static const int kIsMaxLengthFieldNumber = 2;
  bool is_max_length() const;
  void set_is_max_length(bool value);

  void clear_param();
  ParamCase param_case() const;
  // @@protoc_insertion_point(class_scope:zetasql.StringTypeParametersProto)
 private:
  void set_has_max_length();
  void set_has_is_max_length();

  inline bool has_param() const;
  inline void clear_has_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  union ParamUnion {
    ParamUnion() {}
    ::google::protobuf::int64 max_length_;
    bool is_max_length_;
  } param_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_zetasql_2fpublic_2ftype_5fparameters_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NumericTypeParametersProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zetasql.NumericTypeParametersProto) */ {
 public:
  NumericTypeParametersProto();
  virtual ~NumericTypeParametersProto();

  NumericTypeParametersProto(const NumericTypeParametersProto& from);

  inline NumericTypeParametersProto& operator=(const NumericTypeParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NumericTypeParametersProto(NumericTypeParametersProto&& from) noexcept
    : NumericTypeParametersProto() {
    *this = ::std::move(from);
  }

  inline NumericTypeParametersProto& operator=(NumericTypeParametersProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NumericTypeParametersProto& default_instance();

  enum PrecisionParamCase {
    kPrecision = 1,
    kIsMaxPrecision = 2,
    PRECISION_PARAM_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NumericTypeParametersProto* internal_default_instance() {
    return reinterpret_cast<const NumericTypeParametersProto*>(
               &_NumericTypeParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(NumericTypeParametersProto* other);
  friend void swap(NumericTypeParametersProto& a, NumericTypeParametersProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NumericTypeParametersProto* New() const final {
    return CreateMaybeMessage<NumericTypeParametersProto>(NULL);
  }

  NumericTypeParametersProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NumericTypeParametersProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NumericTypeParametersProto& from);
  void MergeFrom(const NumericTypeParametersProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NumericTypeParametersProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 scale = 3;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 3;
  ::google::protobuf::int64 scale() const;
  void set_scale(::google::protobuf::int64 value);

  // optional int64 precision = 1;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 1;
  ::google::protobuf::int64 precision() const;
  void set_precision(::google::protobuf::int64 value);

  // optional bool is_max_precision = 2;
  bool has_is_max_precision() const;
  void clear_is_max_precision();
  static const int kIsMaxPrecisionFieldNumber = 2;
  bool is_max_precision() const;
  void set_is_max_precision(bool value);

  void clear_precision_param();
  PrecisionParamCase precision_param_case() const;
  // @@protoc_insertion_point(class_scope:zetasql.NumericTypeParametersProto)
 private:
  void set_has_precision();
  void set_has_is_max_precision();
  void set_has_scale();
  void clear_has_scale();

  inline bool has_precision_param() const;
  inline void clear_has_precision_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 scale_;
  union PrecisionParamUnion {
    PrecisionParamUnion() {}
    ::google::protobuf::int64 precision_;
    bool is_max_precision_;
  } precision_param_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_zetasql_2fpublic_2ftype_5fparameters_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExtendedTypeParametersProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zetasql.ExtendedTypeParametersProto) */ {
 public:
  ExtendedTypeParametersProto();
  virtual ~ExtendedTypeParametersProto();

  ExtendedTypeParametersProto(const ExtendedTypeParametersProto& from);

  inline ExtendedTypeParametersProto& operator=(const ExtendedTypeParametersProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExtendedTypeParametersProto(ExtendedTypeParametersProto&& from) noexcept
    : ExtendedTypeParametersProto() {
    *this = ::std::move(from);
  }

  inline ExtendedTypeParametersProto& operator=(ExtendedTypeParametersProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtendedTypeParametersProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExtendedTypeParametersProto* internal_default_instance() {
    return reinterpret_cast<const ExtendedTypeParametersProto*>(
               &_ExtendedTypeParametersProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ExtendedTypeParametersProto* other);
  friend void swap(ExtendedTypeParametersProto& a, ExtendedTypeParametersProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExtendedTypeParametersProto* New() const final {
    return CreateMaybeMessage<ExtendedTypeParametersProto>(NULL);
  }

  ExtendedTypeParametersProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExtendedTypeParametersProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExtendedTypeParametersProto& from);
  void MergeFrom(const ExtendedTypeParametersProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExtendedTypeParametersProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zetasql.SimpleValueProto parameters = 1;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 1;
  ::zetasql::SimpleValueProto* mutable_parameters(int index);
  ::google::protobuf::RepeatedPtrField< ::zetasql::SimpleValueProto >*
      mutable_parameters();
  const ::zetasql::SimpleValueProto& parameters(int index) const;
  ::zetasql::SimpleValueProto* add_parameters();
  const ::google::protobuf::RepeatedPtrField< ::zetasql::SimpleValueProto >&
      parameters() const;

  // @@protoc_insertion_point(class_scope:zetasql.ExtendedTypeParametersProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::zetasql::SimpleValueProto > parameters_;
  friend struct ::protobuf_zetasql_2fpublic_2ftype_5fparameters_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TypeParametersProto

// optional .zetasql.StringTypeParametersProto string_type_parameters = 1;
inline bool TypeParametersProto::has_string_type_parameters() const {
  return type_parameters_case() == kStringTypeParameters;
}
inline void TypeParametersProto::set_has_string_type_parameters() {
  _oneof_case_[0] = kStringTypeParameters;
}
inline void TypeParametersProto::clear_string_type_parameters() {
  if (has_string_type_parameters()) {
    delete type_parameters_.string_type_parameters_;
    clear_has_type_parameters();
  }
}
inline const ::zetasql::StringTypeParametersProto& TypeParametersProto::_internal_string_type_parameters() const {
  return *type_parameters_.string_type_parameters_;
}
inline ::zetasql::StringTypeParametersProto* TypeParametersProto::release_string_type_parameters() {
  // @@protoc_insertion_point(field_release:zetasql.TypeParametersProto.string_type_parameters)
  if (has_string_type_parameters()) {
    clear_has_type_parameters();
      ::zetasql::StringTypeParametersProto* temp = type_parameters_.string_type_parameters_;
    type_parameters_.string_type_parameters_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::zetasql::StringTypeParametersProto& TypeParametersProto::string_type_parameters() const {
  // @@protoc_insertion_point(field_get:zetasql.TypeParametersProto.string_type_parameters)
  return has_string_type_parameters()
      ? *type_parameters_.string_type_parameters_
      : *reinterpret_cast< ::zetasql::StringTypeParametersProto*>(&::zetasql::_StringTypeParametersProto_default_instance_);
}
inline ::zetasql::StringTypeParametersProto* TypeParametersProto::mutable_string_type_parameters() {
  if (!has_string_type_parameters()) {
    clear_type_parameters();
    set_has_string_type_parameters();
    type_parameters_.string_type_parameters_ = CreateMaybeMessage< ::zetasql::StringTypeParametersProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:zetasql.TypeParametersProto.string_type_parameters)
  return type_parameters_.string_type_parameters_;
}

// optional .zetasql.NumericTypeParametersProto numeric_type_parameters = 2;
inline bool TypeParametersProto::has_numeric_type_parameters() const {
  return type_parameters_case() == kNumericTypeParameters;
}
inline void TypeParametersProto::set_has_numeric_type_parameters() {
  _oneof_case_[0] = kNumericTypeParameters;
}
inline void TypeParametersProto::clear_numeric_type_parameters() {
  if (has_numeric_type_parameters()) {
    delete type_parameters_.numeric_type_parameters_;
    clear_has_type_parameters();
  }
}
inline const ::zetasql::NumericTypeParametersProto& TypeParametersProto::_internal_numeric_type_parameters() const {
  return *type_parameters_.numeric_type_parameters_;
}
inline ::zetasql::NumericTypeParametersProto* TypeParametersProto::release_numeric_type_parameters() {
  // @@protoc_insertion_point(field_release:zetasql.TypeParametersProto.numeric_type_parameters)
  if (has_numeric_type_parameters()) {
    clear_has_type_parameters();
      ::zetasql::NumericTypeParametersProto* temp = type_parameters_.numeric_type_parameters_;
    type_parameters_.numeric_type_parameters_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::zetasql::NumericTypeParametersProto& TypeParametersProto::numeric_type_parameters() const {
  // @@protoc_insertion_point(field_get:zetasql.TypeParametersProto.numeric_type_parameters)
  return has_numeric_type_parameters()
      ? *type_parameters_.numeric_type_parameters_
      : *reinterpret_cast< ::zetasql::NumericTypeParametersProto*>(&::zetasql::_NumericTypeParametersProto_default_instance_);
}
inline ::zetasql::NumericTypeParametersProto* TypeParametersProto::mutable_numeric_type_parameters() {
  if (!has_numeric_type_parameters()) {
    clear_type_parameters();
    set_has_numeric_type_parameters();
    type_parameters_.numeric_type_parameters_ = CreateMaybeMessage< ::zetasql::NumericTypeParametersProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:zetasql.TypeParametersProto.numeric_type_parameters)
  return type_parameters_.numeric_type_parameters_;
}

// optional .zetasql.ExtendedTypeParametersProto extended_type_parameters = 3;
inline bool TypeParametersProto::has_extended_type_parameters() const {
  return type_parameters_case() == kExtendedTypeParameters;
}
inline void TypeParametersProto::set_has_extended_type_parameters() {
  _oneof_case_[0] = kExtendedTypeParameters;
}
inline void TypeParametersProto::clear_extended_type_parameters() {
  if (has_extended_type_parameters()) {
    delete type_parameters_.extended_type_parameters_;
    clear_has_type_parameters();
  }
}
inline const ::zetasql::ExtendedTypeParametersProto& TypeParametersProto::_internal_extended_type_parameters() const {
  return *type_parameters_.extended_type_parameters_;
}
inline ::zetasql::ExtendedTypeParametersProto* TypeParametersProto::release_extended_type_parameters() {
  // @@protoc_insertion_point(field_release:zetasql.TypeParametersProto.extended_type_parameters)
  if (has_extended_type_parameters()) {
    clear_has_type_parameters();
      ::zetasql::ExtendedTypeParametersProto* temp = type_parameters_.extended_type_parameters_;
    type_parameters_.extended_type_parameters_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::zetasql::ExtendedTypeParametersProto& TypeParametersProto::extended_type_parameters() const {
  // @@protoc_insertion_point(field_get:zetasql.TypeParametersProto.extended_type_parameters)
  return has_extended_type_parameters()
      ? *type_parameters_.extended_type_parameters_
      : *reinterpret_cast< ::zetasql::ExtendedTypeParametersProto*>(&::zetasql::_ExtendedTypeParametersProto_default_instance_);
}
inline ::zetasql::ExtendedTypeParametersProto* TypeParametersProto::mutable_extended_type_parameters() {
  if (!has_extended_type_parameters()) {
    clear_type_parameters();
    set_has_extended_type_parameters();
    type_parameters_.extended_type_parameters_ = CreateMaybeMessage< ::zetasql::ExtendedTypeParametersProto >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:zetasql.TypeParametersProto.extended_type_parameters)
  return type_parameters_.extended_type_parameters_;
}

// repeated .zetasql.TypeParametersProto child_list = 100;
inline int TypeParametersProto::child_list_size() const {
  return child_list_.size();
}
inline void TypeParametersProto::clear_child_list() {
  child_list_.Clear();
}
inline ::zetasql::TypeParametersProto* TypeParametersProto::mutable_child_list(int index) {
  // @@protoc_insertion_point(field_mutable:zetasql.TypeParametersProto.child_list)
  return child_list_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zetasql::TypeParametersProto >*
TypeParametersProto::mutable_child_list() {
  // @@protoc_insertion_point(field_mutable_list:zetasql.TypeParametersProto.child_list)
  return &child_list_;
}
inline const ::zetasql::TypeParametersProto& TypeParametersProto::child_list(int index) const {
  // @@protoc_insertion_point(field_get:zetasql.TypeParametersProto.child_list)
  return child_list_.Get(index);
}
inline ::zetasql::TypeParametersProto* TypeParametersProto::add_child_list() {
  // @@protoc_insertion_point(field_add:zetasql.TypeParametersProto.child_list)
  return child_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zetasql::TypeParametersProto >&
TypeParametersProto::child_list() const {
  // @@protoc_insertion_point(field_list:zetasql.TypeParametersProto.child_list)
  return child_list_;
}

inline bool TypeParametersProto::has_type_parameters() const {
  return type_parameters_case() != TYPE_PARAMETERS_NOT_SET;
}
inline void TypeParametersProto::clear_has_type_parameters() {
  _oneof_case_[0] = TYPE_PARAMETERS_NOT_SET;
}
inline TypeParametersProto::TypeParametersCase TypeParametersProto::type_parameters_case() const {
  return TypeParametersProto::TypeParametersCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// StringTypeParametersProto

// optional int64 max_length = 1;
inline bool StringTypeParametersProto::has_max_length() const {
  return param_case() == kMaxLength;
}
inline void StringTypeParametersProto::set_has_max_length() {
  _oneof_case_[0] = kMaxLength;
}
inline void StringTypeParametersProto::clear_max_length() {
  if (has_max_length()) {
    param_.max_length_ = GOOGLE_LONGLONG(0);
    clear_has_param();
  }
}
inline ::google::protobuf::int64 StringTypeParametersProto::max_length() const {
  // @@protoc_insertion_point(field_get:zetasql.StringTypeParametersProto.max_length)
  if (has_max_length()) {
    return param_.max_length_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void StringTypeParametersProto::set_max_length(::google::protobuf::int64 value) {
  if (!has_max_length()) {
    clear_param();
    set_has_max_length();
  }
  param_.max_length_ = value;
  // @@protoc_insertion_point(field_set:zetasql.StringTypeParametersProto.max_length)
}

// optional bool is_max_length = 2;
inline bool StringTypeParametersProto::has_is_max_length() const {
  return param_case() == kIsMaxLength;
}
inline void StringTypeParametersProto::set_has_is_max_length() {
  _oneof_case_[0] = kIsMaxLength;
}
inline void StringTypeParametersProto::clear_is_max_length() {
  if (has_is_max_length()) {
    param_.is_max_length_ = false;
    clear_has_param();
  }
}
inline bool StringTypeParametersProto::is_max_length() const {
  // @@protoc_insertion_point(field_get:zetasql.StringTypeParametersProto.is_max_length)
  if (has_is_max_length()) {
    return param_.is_max_length_;
  }
  return false;
}
inline void StringTypeParametersProto::set_is_max_length(bool value) {
  if (!has_is_max_length()) {
    clear_param();
    set_has_is_max_length();
  }
  param_.is_max_length_ = value;
  // @@protoc_insertion_point(field_set:zetasql.StringTypeParametersProto.is_max_length)
}

inline bool StringTypeParametersProto::has_param() const {
  return param_case() != PARAM_NOT_SET;
}
inline void StringTypeParametersProto::clear_has_param() {
  _oneof_case_[0] = PARAM_NOT_SET;
}
inline StringTypeParametersProto::ParamCase StringTypeParametersProto::param_case() const {
  return StringTypeParametersProto::ParamCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// NumericTypeParametersProto

// optional int64 precision = 1;
inline bool NumericTypeParametersProto::has_precision() const {
  return precision_param_case() == kPrecision;
}
inline void NumericTypeParametersProto::set_has_precision() {
  _oneof_case_[0] = kPrecision;
}
inline void NumericTypeParametersProto::clear_precision() {
  if (has_precision()) {
    precision_param_.precision_ = GOOGLE_LONGLONG(0);
    clear_has_precision_param();
  }
}
inline ::google::protobuf::int64 NumericTypeParametersProto::precision() const {
  // @@protoc_insertion_point(field_get:zetasql.NumericTypeParametersProto.precision)
  if (has_precision()) {
    return precision_param_.precision_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void NumericTypeParametersProto::set_precision(::google::protobuf::int64 value) {
  if (!has_precision()) {
    clear_precision_param();
    set_has_precision();
  }
  precision_param_.precision_ = value;
  // @@protoc_insertion_point(field_set:zetasql.NumericTypeParametersProto.precision)
}

// optional bool is_max_precision = 2;
inline bool NumericTypeParametersProto::has_is_max_precision() const {
  return precision_param_case() == kIsMaxPrecision;
}
inline void NumericTypeParametersProto::set_has_is_max_precision() {
  _oneof_case_[0] = kIsMaxPrecision;
}
inline void NumericTypeParametersProto::clear_is_max_precision() {
  if (has_is_max_precision()) {
    precision_param_.is_max_precision_ = false;
    clear_has_precision_param();
  }
}
inline bool NumericTypeParametersProto::is_max_precision() const {
  // @@protoc_insertion_point(field_get:zetasql.NumericTypeParametersProto.is_max_precision)
  if (has_is_max_precision()) {
    return precision_param_.is_max_precision_;
  }
  return false;
}
inline void NumericTypeParametersProto::set_is_max_precision(bool value) {
  if (!has_is_max_precision()) {
    clear_precision_param();
    set_has_is_max_precision();
  }
  precision_param_.is_max_precision_ = value;
  // @@protoc_insertion_point(field_set:zetasql.NumericTypeParametersProto.is_max_precision)
}

// optional int64 scale = 3;
inline bool NumericTypeParametersProto::has_scale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NumericTypeParametersProto::set_has_scale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NumericTypeParametersProto::clear_has_scale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NumericTypeParametersProto::clear_scale() {
  scale_ = GOOGLE_LONGLONG(0);
  clear_has_scale();
}
inline ::google::protobuf::int64 NumericTypeParametersProto::scale() const {
  // @@protoc_insertion_point(field_get:zetasql.NumericTypeParametersProto.scale)
  return scale_;
}
inline void NumericTypeParametersProto::set_scale(::google::protobuf::int64 value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:zetasql.NumericTypeParametersProto.scale)
}

inline bool NumericTypeParametersProto::has_precision_param() const {
  return precision_param_case() != PRECISION_PARAM_NOT_SET;
}
inline void NumericTypeParametersProto::clear_has_precision_param() {
  _oneof_case_[0] = PRECISION_PARAM_NOT_SET;
}
inline NumericTypeParametersProto::PrecisionParamCase NumericTypeParametersProto::precision_param_case() const {
  return NumericTypeParametersProto::PrecisionParamCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ExtendedTypeParametersProto

// repeated .zetasql.SimpleValueProto parameters = 1;
inline int ExtendedTypeParametersProto::parameters_size() const {
  return parameters_.size();
}
inline ::zetasql::SimpleValueProto* ExtendedTypeParametersProto::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:zetasql.ExtendedTypeParametersProto.parameters)
  return parameters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::zetasql::SimpleValueProto >*
ExtendedTypeParametersProto::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:zetasql.ExtendedTypeParametersProto.parameters)
  return &parameters_;
}
inline const ::zetasql::SimpleValueProto& ExtendedTypeParametersProto::parameters(int index) const {
  // @@protoc_insertion_point(field_get:zetasql.ExtendedTypeParametersProto.parameters)
  return parameters_.Get(index);
}
inline ::zetasql::SimpleValueProto* ExtendedTypeParametersProto::add_parameters() {
  // @@protoc_insertion_point(field_add:zetasql.ExtendedTypeParametersProto.parameters)
  return parameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::zetasql::SimpleValueProto >&
ExtendedTypeParametersProto::parameters() const {
  // @@protoc_insertion_point(field_list:zetasql.ExtendedTypeParametersProto.parameters)
  return parameters_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zetasql

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_zetasql_2fpublic_2ftype_5fparameters_2eproto
