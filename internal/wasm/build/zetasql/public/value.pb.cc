// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/public/value.proto

#include "zetasql/public/value.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_zetasql_2fpublic_2fvalue_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fvalue_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ValueProto_Datetime;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fvalue_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ValueProto;
}  // namespace protobuf_zetasql_2fpublic_2fvalue_2eproto
namespace zetasql {
class ValueProto_ArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueProto_Array>
      _instance;
} _ValueProto_Array_default_instance_;
class ValueProto_StructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueProto_Struct>
      _instance;
} _ValueProto_Struct_default_instance_;
class ValueProto_DatetimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueProto_Datetime>
      _instance;
} _ValueProto_Datetime_default_instance_;
class ValueProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueProto>
      _instance;
  ::google::protobuf::int32 int32_value_;
  ::google::protobuf::int64 int64_value_;
  ::google::protobuf::uint32 uint32_value_;
  ::google::protobuf::uint64 uint64_value_;
  bool bool_value_;
  float float_value_;
  double double_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::internal::ArenaStringPtr bytes_value_;
  ::google::protobuf::int32 date_value_;
  ::google::protobuf::int32 enum_value_;
  const ::zetasql::ValueProto_Array* array_value_;
  const ::zetasql::ValueProto_Struct* struct_value_;
  ::google::protobuf::internal::ArenaStringPtr proto_value_;
  const ::google::protobuf::Timestamp* timestamp_value_;
  const ::zetasql::ValueProto_Datetime* datetime_value_;
  ::google::protobuf::int64 time_value_;
  ::google::protobuf::internal::ArenaStringPtr geography_value_;
  ::google::protobuf::internal::ArenaStringPtr numeric_value_;
  ::google::protobuf::internal::ArenaStringPtr bignumeric_value_;
  ::google::protobuf::internal::ArenaStringPtr json_value_;
  ::google::protobuf::internal::ArenaStringPtr interval_value_;
  bool __valueproto__switch_must_have_a_default_;
} _ValueProto_default_instance_;
}  // namespace zetasql
namespace protobuf_zetasql_2fpublic_2fvalue_2eproto {
static void InitDefaultsValueProto_Datetime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ValueProto_Datetime_default_instance_;
    new (ptr) ::zetasql::ValueProto_Datetime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ValueProto_Datetime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ValueProto_Datetime =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsValueProto_Datetime}, {}};

static void InitDefaultsValueProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ValueProto_Array_default_instance_;
    new (ptr) ::zetasql::ValueProto_Array();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::zetasql::_ValueProto_Struct_default_instance_;
    new (ptr) ::zetasql::ValueProto_Struct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::zetasql::_ValueProto_default_instance_;
    new (ptr) ::zetasql::ValueProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ValueProto_Array::InitAsDefaultInstance();
  ::zetasql::ValueProto_Struct::InitAsDefaultInstance();
  ::zetasql::ValueProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ValueProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsValueProto}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto_Datetime.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ValueProto_Datetime.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValueProto.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Array, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Array, element_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Struct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Struct, field_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Datetime, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Datetime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Datetime, bit_field_datetime_seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto_Datetime, nanos_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, int32_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, int64_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, uint32_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, uint64_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, bool_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, float_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, double_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, string_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, bytes_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, date_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, enum_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, array_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, struct_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, proto_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, timestamp_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, datetime_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, time_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, geography_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, numeric_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, bignumeric_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, json_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, interval_value_),
  offsetof(::zetasql::ValueProtoDefaultTypeInternal, __valueproto__switch_must_have_a_default_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueProto, value_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::zetasql::ValueProto_Array)},
  { 7, 13, sizeof(::zetasql::ValueProto_Struct)},
  { 14, 21, sizeof(::zetasql::ValueProto_Datetime)},
  { 23, 52, sizeof(::zetasql::ValueProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ValueProto_Array_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ValueProto_Struct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ValueProto_Datetime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ValueProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "zetasql/public/value.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032zetasql/public/value.proto\022\007zetasql\032\037g"
      "oogle/protobuf/timestamp.proto\"\362\006\n\nValue"
      "Proto\022\025\n\013int32_value\030\001 \001(\005H\000\022\025\n\013int64_va"
      "lue\030\002 \001(\003H\000\022\026\n\014uint32_value\030\003 \001(\rH\000\022\026\n\014u"
      "int64_value\030\004 \001(\004H\000\022\024\n\nbool_value\030\005 \001(\010H"
      "\000\022\025\n\013float_value\030\006 \001(\002H\000\022\026\n\014double_value"
      "\030\007 \001(\001H\000\022\026\n\014string_value\030\010 \001(\tH\000\022\025\n\013byte"
      "s_value\030\t \001(\014H\000\022\024\n\ndate_value\030\n \001(\005H\000\022\024\n"
      "\nenum_value\030\014 \001(\005H\000\0220\n\013array_value\030\r \001(\013"
      "2\031.zetasql.ValueProto.ArrayH\000\0222\n\014struct_"
      "value\030\016 \001(\0132\032.zetasql.ValueProto.StructH"
      "\000\022\025\n\013proto_value\030\017 \001(\014H\000\0225\n\017timestamp_va"
      "lue\030\020 \001(\0132\032.google.protobuf.TimestampH\000\022"
      "6\n\016datetime_value\030\021 \001(\0132\034.zetasql.ValueP"
      "roto.DatetimeH\000\022\024\n\ntime_value\030\022 \001(\003H\000\022\031\n"
      "\017geography_value\030\023 \001(\014H\000\022\027\n\rnumeric_valu"
      "e\030\024 \001(\014H\000\022\032\n\020bignumeric_value\030\025 \001(\014H\000\022\024\n"
      "\njson_value\030\027 \001(\tH\000\022\030\n\016interval_value\030\030 "
      "\001(\014H\000\0223\n(__ValueProto__switch_must_have_"
      "a_default\030\377\001 \001(\010H\000\032-\n\005Array\022$\n\007element\030\001"
      " \003(\0132\023.zetasql.ValueProto\032,\n\006Struct\022\"\n\005f"
      "ield\030\001 \003(\0132\023.zetasql.ValueProto\032=\n\010Datet"
      "ime\022\"\n\032bit_field_datetime_seconds\030\001 \001(\003\022"
      "\r\n\005nanos\030\002 \001(\005B\007\n\005valueJ\004\010\013\020\014J\004\010\026\020\027B%\n\022c"
      "om.google.zetasqlB\014ZetaSQLValue\370\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 994);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zetasql/public/value.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_zetasql_2fpublic_2fvalue_2eproto
namespace zetasql {

// ===================================================================

void ValueProto_Array::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto_Array::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto_Array::ValueProto_Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ValueProto.Array)
}
ValueProto_Array::ValueProto_Array(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  element_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zetasql.ValueProto.Array)
}
ValueProto_Array::ValueProto_Array(const ValueProto_Array& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      element_(from.element_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zetasql.ValueProto.Array)
}

void ValueProto_Array::SharedCtor() {
}

ValueProto_Array::~ValueProto_Array() {
  // @@protoc_insertion_point(destructor:zetasql.ValueProto.Array)
  SharedDtor();
}

void ValueProto_Array::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ValueProto_Array::ArenaDtor(void* object) {
  ValueProto_Array* _this = reinterpret_cast< ValueProto_Array* >(object);
  (void)_this;
}
void ValueProto_Array::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValueProto_Array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueProto_Array::descriptor() {
  ::protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueProto_Array& ValueProto_Array::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  return *internal_default_instance();
}


void ValueProto_Array::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ValueProto.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueProto_Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ValueProto.Array)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zetasql.ValueProto element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ValueProto.Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ValueProto.Array)
  return false;
#undef DO_
}

void ValueProto_Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ValueProto.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zetasql.ValueProto element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->element(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ValueProto.Array)
}

::google::protobuf::uint8* ValueProto_Array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ValueProto.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zetasql.ValueProto element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->element_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->element(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ValueProto.Array)
  return target;
}

size_t ValueProto_Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ValueProto.Array)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.ValueProto element = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->element_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->element(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueProto_Array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ValueProto.Array)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueProto_Array* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto_Array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ValueProto.Array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ValueProto.Array)
    MergeFrom(*source);
  }
}

void ValueProto_Array::MergeFrom(const ValueProto_Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ValueProto.Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void ValueProto_Array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ValueProto.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto_Array::CopyFrom(const ValueProto_Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ValueProto.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueProto_Array::IsInitialized() const {
  return true;
}

void ValueProto_Array::Swap(ValueProto_Array* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValueProto_Array* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValueProto_Array::UnsafeArenaSwap(ValueProto_Array* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValueProto_Array::InternalSwap(ValueProto_Array* other) {
  using std::swap;
  CastToBase(&element_)->InternalSwap(CastToBase(&other->element_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueProto_Array::GetMetadata() const {
  protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueProto_Struct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto_Struct::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto_Struct::ValueProto_Struct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ValueProto.Struct)
}
ValueProto_Struct::ValueProto_Struct(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  field_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zetasql.ValueProto.Struct)
}
ValueProto_Struct::ValueProto_Struct(const ValueProto_Struct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      field_(from.field_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:zetasql.ValueProto.Struct)
}

void ValueProto_Struct::SharedCtor() {
}

ValueProto_Struct::~ValueProto_Struct() {
  // @@protoc_insertion_point(destructor:zetasql.ValueProto.Struct)
  SharedDtor();
}

void ValueProto_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ValueProto_Struct::ArenaDtor(void* object) {
  ValueProto_Struct* _this = reinterpret_cast< ValueProto_Struct* >(object);
  (void)_this;
}
void ValueProto_Struct::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValueProto_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueProto_Struct::descriptor() {
  ::protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueProto_Struct& ValueProto_Struct::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  return *internal_default_instance();
}


void ValueProto_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ValueProto.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueProto_Struct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ValueProto.Struct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .zetasql.ValueProto field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ValueProto.Struct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ValueProto.Struct)
  return false;
#undef DO_
}

void ValueProto_Struct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ValueProto.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zetasql.ValueProto field = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->field(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ValueProto.Struct)
}

::google::protobuf::uint8* ValueProto_Struct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ValueProto.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .zetasql.ValueProto field = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->field(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ValueProto.Struct)
  return target;
}

size_t ValueProto_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ValueProto.Struct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.ValueProto field = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->field(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueProto_Struct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ValueProto.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueProto_Struct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto_Struct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ValueProto.Struct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ValueProto.Struct)
    MergeFrom(*source);
  }
}

void ValueProto_Struct::MergeFrom(const ValueProto_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ValueProto.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_.MergeFrom(from.field_);
}

void ValueProto_Struct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ValueProto.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto_Struct::CopyFrom(const ValueProto_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ValueProto.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueProto_Struct::IsInitialized() const {
  return true;
}

void ValueProto_Struct::Swap(ValueProto_Struct* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValueProto_Struct* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValueProto_Struct::UnsafeArenaSwap(ValueProto_Struct* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValueProto_Struct::InternalSwap(ValueProto_Struct* other) {
  using std::swap;
  CastToBase(&field_)->InternalSwap(CastToBase(&other->field_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueProto_Struct::GetMetadata() const {
  protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueProto_Datetime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto_Datetime::kBitFieldDatetimeSecondsFieldNumber;
const int ValueProto_Datetime::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto_Datetime::ValueProto_Datetime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto_Datetime.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ValueProto.Datetime)
}
ValueProto_Datetime::ValueProto_Datetime(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto_Datetime.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zetasql.ValueProto.Datetime)
}
ValueProto_Datetime::ValueProto_Datetime(const ValueProto_Datetime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bit_field_datetime_seconds_, &from.bit_field_datetime_seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&bit_field_datetime_seconds_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:zetasql.ValueProto.Datetime)
}

void ValueProto_Datetime::SharedCtor() {
  ::memset(&bit_field_datetime_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&bit_field_datetime_seconds_)) + sizeof(nanos_));
}

ValueProto_Datetime::~ValueProto_Datetime() {
  // @@protoc_insertion_point(destructor:zetasql.ValueProto.Datetime)
  SharedDtor();
}

void ValueProto_Datetime::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ValueProto_Datetime::ArenaDtor(void* object) {
  ValueProto_Datetime* _this = reinterpret_cast< ValueProto_Datetime* >(object);
  (void)_this;
}
void ValueProto_Datetime::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValueProto_Datetime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueProto_Datetime::descriptor() {
  ::protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueProto_Datetime& ValueProto_Datetime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto_Datetime.base);
  return *internal_default_instance();
}


void ValueProto_Datetime::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ValueProto.Datetime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&bit_field_datetime_seconds_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nanos_) -
        reinterpret_cast<char*>(&bit_field_datetime_seconds_)) + sizeof(nanos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueProto_Datetime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ValueProto.Datetime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 bit_field_datetime_seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_bit_field_datetime_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bit_field_datetime_seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 nanos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nanos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ValueProto.Datetime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ValueProto.Datetime)
  return false;
#undef DO_
}

void ValueProto_Datetime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ValueProto.Datetime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 bit_field_datetime_seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->bit_field_datetime_seconds(), output);
  }

  // optional int32 nanos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ValueProto.Datetime)
}

::google::protobuf::uint8* ValueProto_Datetime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ValueProto.Datetime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 bit_field_datetime_seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->bit_field_datetime_seconds(), target);
  }

  // optional int32 nanos = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nanos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ValueProto.Datetime)
  return target;
}

size_t ValueProto_Datetime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ValueProto.Datetime)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 bit_field_datetime_seconds = 1;
    if (has_bit_field_datetime_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->bit_field_datetime_seconds());
    }

    // optional int32 nanos = 2;
    if (has_nanos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nanos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueProto_Datetime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ValueProto.Datetime)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueProto_Datetime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto_Datetime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ValueProto.Datetime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ValueProto.Datetime)
    MergeFrom(*source);
  }
}

void ValueProto_Datetime::MergeFrom(const ValueProto_Datetime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ValueProto.Datetime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      bit_field_datetime_seconds_ = from.bit_field_datetime_seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      nanos_ = from.nanos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ValueProto_Datetime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ValueProto.Datetime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto_Datetime::CopyFrom(const ValueProto_Datetime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ValueProto.Datetime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueProto_Datetime::IsInitialized() const {
  return true;
}

void ValueProto_Datetime::Swap(ValueProto_Datetime* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValueProto_Datetime* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValueProto_Datetime::UnsafeArenaSwap(ValueProto_Datetime* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValueProto_Datetime::InternalSwap(ValueProto_Datetime* other) {
  using std::swap;
  swap(bit_field_datetime_seconds_, other->bit_field_datetime_seconds_);
  swap(nanos_, other->nanos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueProto_Datetime::GetMetadata() const {
  protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueProto::InitAsDefaultInstance() {
  ::zetasql::_ValueProto_default_instance_.int32_value_ = 0;
  ::zetasql::_ValueProto_default_instance_.int64_value_ = GOOGLE_LONGLONG(0);
  ::zetasql::_ValueProto_default_instance_.uint32_value_ = 0u;
  ::zetasql::_ValueProto_default_instance_.uint64_value_ = GOOGLE_ULONGLONG(0);
  ::zetasql::_ValueProto_default_instance_.bool_value_ = false;
  ::zetasql::_ValueProto_default_instance_.float_value_ = 0;
  ::zetasql::_ValueProto_default_instance_.double_value_ = 0;
  ::zetasql::_ValueProto_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.bytes_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.date_value_ = 0;
  ::zetasql::_ValueProto_default_instance_.enum_value_ = 0;
  ::zetasql::_ValueProto_default_instance_.array_value_ = const_cast< ::zetasql::ValueProto_Array*>(
      ::zetasql::ValueProto_Array::internal_default_instance());
  ::zetasql::_ValueProto_default_instance_.struct_value_ = const_cast< ::zetasql::ValueProto_Struct*>(
      ::zetasql::ValueProto_Struct::internal_default_instance());
  ::zetasql::_ValueProto_default_instance_.proto_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.timestamp_value_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::zetasql::_ValueProto_default_instance_.datetime_value_ = const_cast< ::zetasql::ValueProto_Datetime*>(
      ::zetasql::ValueProto_Datetime::internal_default_instance());
  ::zetasql::_ValueProto_default_instance_.time_value_ = GOOGLE_LONGLONG(0);
  ::zetasql::_ValueProto_default_instance_.geography_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.numeric_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.bignumeric_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.json_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.interval_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::zetasql::_ValueProto_default_instance_.__valueproto__switch_must_have_a_default_ = false;
}
void ValueProto::set_allocated_array_value(::zetasql::ValueProto_Array* array_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (array_value) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(array_value);
    if (message_arena != submessage_arena) {
      array_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, array_value, submessage_arena);
    }
    set_has_array_value();
    value_.array_value_ = array_value;
  }
  // @@protoc_insertion_point(field_set_allocated:zetasql.ValueProto.array_value)
}
void ValueProto::set_allocated_struct_value(::zetasql::ValueProto_Struct* struct_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (struct_value) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(struct_value);
    if (message_arena != submessage_arena) {
      struct_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_value, submessage_arena);
    }
    set_has_struct_value();
    value_.struct_value_ = struct_value;
  }
  // @@protoc_insertion_point(field_set_allocated:zetasql.ValueProto.struct_value)
}
void ValueProto::set_allocated_timestamp_value(::google::protobuf::Timestamp* timestamp_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (timestamp_value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp_value)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_value, submessage_arena);
    }
    set_has_timestamp_value();
    value_.timestamp_value_ = timestamp_value;
  }
  // @@protoc_insertion_point(field_set_allocated:zetasql.ValueProto.timestamp_value)
}
void ValueProto::clear_timestamp_value() {
  if (has_timestamp_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_.timestamp_value_;
    }
    clear_has_value();
  }
}
void ValueProto::set_allocated_datetime_value(::zetasql::ValueProto_Datetime* datetime_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (datetime_value) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(datetime_value);
    if (message_arena != submessage_arena) {
      datetime_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, datetime_value, submessage_arena);
    }
    set_has_datetime_value();
    value_.datetime_value_ = datetime_value;
  }
  // @@protoc_insertion_point(field_set_allocated:zetasql.ValueProto.datetime_value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto::kInt32ValueFieldNumber;
const int ValueProto::kInt64ValueFieldNumber;
const int ValueProto::kUint32ValueFieldNumber;
const int ValueProto::kUint64ValueFieldNumber;
const int ValueProto::kBoolValueFieldNumber;
const int ValueProto::kFloatValueFieldNumber;
const int ValueProto::kDoubleValueFieldNumber;
const int ValueProto::kStringValueFieldNumber;
const int ValueProto::kBytesValueFieldNumber;
const int ValueProto::kDateValueFieldNumber;
const int ValueProto::kEnumValueFieldNumber;
const int ValueProto::kArrayValueFieldNumber;
const int ValueProto::kStructValueFieldNumber;
const int ValueProto::kProtoValueFieldNumber;
const int ValueProto::kTimestampValueFieldNumber;
const int ValueProto::kDatetimeValueFieldNumber;
const int ValueProto::kTimeValueFieldNumber;
const int ValueProto::kGeographyValueFieldNumber;
const int ValueProto::kNumericValueFieldNumber;
const int ValueProto::kBignumericValueFieldNumber;
const int ValueProto::kJsonValueFieldNumber;
const int ValueProto::kIntervalValueFieldNumber;
const int ValueProto::kValueProtoSwitchMustHaveADefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto::ValueProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ValueProto)
}
ValueProto::ValueProto(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:zetasql.ValueProto)
}
ValueProto::ValueProto(const ValueProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kInt32Value: {
      set_int32_value(from.int32_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kUint32Value: {
      set_uint32_value(from.uint32_value());
      break;
    }
    case kUint64Value: {
      set_uint64_value(from.uint64_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case kDateValue: {
      set_date_value(from.date_value());
      break;
    }
    case kEnumValue: {
      set_enum_value(from.enum_value());
      break;
    }
    case kArrayValue: {
      mutable_array_value()->::zetasql::ValueProto_Array::MergeFrom(from.array_value());
      break;
    }
    case kStructValue: {
      mutable_struct_value()->::zetasql::ValueProto_Struct::MergeFrom(from.struct_value());
      break;
    }
    case kProtoValue: {
      set_proto_value(from.proto_value());
      break;
    }
    case kTimestampValue: {
      mutable_timestamp_value()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_value());
      break;
    }
    case kDatetimeValue: {
      mutable_datetime_value()->::zetasql::ValueProto_Datetime::MergeFrom(from.datetime_value());
      break;
    }
    case kTimeValue: {
      set_time_value(from.time_value());
      break;
    }
    case kGeographyValue: {
      set_geography_value(from.geography_value());
      break;
    }
    case kNumericValue: {
      set_numeric_value(from.numeric_value());
      break;
    }
    case kBignumericValue: {
      set_bignumeric_value(from.bignumeric_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case kIntervalValue: {
      set_interval_value(from.interval_value());
      break;
    }
    case kValueProtoSwitchMustHaveADefault: {
      set___valueproto__switch_must_have_a_default(from.__valueproto__switch_must_have_a_default());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ValueProto)
}

void ValueProto::SharedCtor() {
  clear_has_value();
}

ValueProto::~ValueProto() {
  // @@protoc_insertion_point(destructor:zetasql.ValueProto)
  SharedDtor();
}

void ValueProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_value()) {
    clear_value();
  }
}

void ValueProto::ArenaDtor(void* object) {
  ValueProto* _this = reinterpret_cast< ValueProto* >(object);
  (void)_this;
}
void ValueProto::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ValueProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueProto::descriptor() {
  ::protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueProto& ValueProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base);
  return *internal_default_instance();
}


void ValueProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:zetasql.ValueProto)
  switch (value_case()) {
    case kInt32Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint32Value: {
      // No need to clear
      break;
    }
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kBytesValue: {
      value_.bytes_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kDateValue: {
      // No need to clear
      break;
    }
    case kEnumValue: {
      // No need to clear
      break;
    }
    case kArrayValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.array_value_;
      }
      break;
    }
    case kStructValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.struct_value_;
      }
      break;
    }
    case kProtoValue: {
      value_.proto_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kTimestampValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.timestamp_value_;
      }
      break;
    }
    case kDatetimeValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.datetime_value_;
      }
      break;
    }
    case kTimeValue: {
      // No need to clear
      break;
    }
    case kGeographyValue: {
      value_.geography_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kNumericValue: {
      value_.numeric_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kBignumericValue: {
      value_.bignumeric_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kJsonValue: {
      value_.json_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kIntervalValue: {
      value_.interval_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kValueProtoSwitchMustHaveADefault: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ValueProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ValueProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ValueProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 int32_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.int32_value_)));
          set_has_int32_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 int64_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uint32_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_.uint32_value_)));
          set_has_uint32_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uint64_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.uint64_value_)));
          set_has_uint64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool bool_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float float_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double double_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ValueProto.string_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 date_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.date_value_)));
          set_has_date_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 enum_value = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.enum_value_)));
          set_has_enum_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ValueProto.Array array_value = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_array_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ValueProto.Struct struct_value = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes proto_value = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_proto_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .google.protobuf.Timestamp timestamp_value = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ValueProto.Datetime datetime_value = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_datetime_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 time_value = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.time_value_)));
          set_has_time_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes geography_value = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_geography_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes numeric_value = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_numeric_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bignumeric_value = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bignumeric_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string json_value = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->json_value().data(), static_cast<int>(this->json_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ValueProto.json_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes interval_value = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_interval_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool __ValueProto__switch_must_have_a_default = 255;
      case 255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 2040 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.__valueproto__switch_must_have_a_default_)));
          set_has___valueproto__switch_must_have_a_default();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ValueProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ValueProto)
  return false;
#undef DO_
}

void ValueProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ValueProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (value_case()) {
    case kInt32Value:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->int32_value(), output);
      break;
    case kInt64Value:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int64_value(), output);
      break;
    case kUint32Value:
      ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->uint32_value(), output);
      break;
    case kUint64Value:
      ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->uint64_value(), output);
      break;
    case kBoolValue:
      ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bool_value(), output);
      break;
    case kFloatValue:
      ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->float_value(), output);
      break;
    case kDoubleValue:
      ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->double_value(), output);
      break;
    case kStringValue:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->string_value().data(), static_cast<int>(this->string_value().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "zetasql.ValueProto.string_value");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        8, this->string_value(), output);
      break;
    case kBytesValue:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        9, this->bytes_value(), output);
      break;
    case kDateValue:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->date_value(), output);
      break;
    case kEnumValue:
      ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->enum_value(), output);
      break;
    case kArrayValue:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        13, this->_internal_array_value(), output);
      break;
    case kStructValue:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        14, this->_internal_struct_value(), output);
      break;
    case kProtoValue:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        15, this->proto_value(), output);
      break;
    case kTimestampValue:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        16, this->_internal_timestamp_value(), output);
      break;
    case kDatetimeValue:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        17, this->_internal_datetime_value(), output);
      break;
    case kTimeValue:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->time_value(), output);
      break;
    case kGeographyValue:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        19, this->geography_value(), output);
      break;
    case kNumericValue:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        20, this->numeric_value(), output);
      break;
    case kBignumericValue:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        21, this->bignumeric_value(), output);
      break;
    case kJsonValue:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->json_value().data(), static_cast<int>(this->json_value().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "zetasql.ValueProto.json_value");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        23, this->json_value(), output);
      break;
    case kIntervalValue:
      ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        24, this->interval_value(), output);
      break;
    case kValueProtoSwitchMustHaveADefault:
      ::google::protobuf::internal::WireFormatLite::WriteBool(255, this->__valueproto__switch_must_have_a_default(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ValueProto)
}

::google::protobuf::uint8* ValueProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ValueProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (value_case()) {
    case kInt32Value:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->int32_value(), target);
      break;
    case kInt64Value:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int64_value(), target);
      break;
    case kUint32Value:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->uint32_value(), target);
      break;
    case kUint64Value:
      target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->uint64_value(), target);
      break;
    case kBoolValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bool_value(), target);
      break;
    case kFloatValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->float_value(), target);
      break;
    case kDoubleValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->double_value(), target);
      break;
    case kStringValue:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->string_value().data(), static_cast<int>(this->string_value().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "zetasql.ValueProto.string_value");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          8, this->string_value(), target);
      break;
    case kBytesValue:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          9, this->bytes_value(), target);
      break;
    case kDateValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->date_value(), target);
      break;
    case kEnumValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->enum_value(), target);
      break;
    case kArrayValue:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          13, this->_internal_array_value(), deterministic, target);
      break;
    case kStructValue:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          14, this->_internal_struct_value(), deterministic, target);
      break;
    case kProtoValue:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          15, this->proto_value(), target);
      break;
    case kTimestampValue:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          16, this->_internal_timestamp_value(), deterministic, target);
      break;
    case kDatetimeValue:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(
          17, this->_internal_datetime_value(), deterministic, target);
      break;
    case kTimeValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->time_value(), target);
      break;
    case kGeographyValue:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          19, this->geography_value(), target);
      break;
    case kNumericValue:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          20, this->numeric_value(), target);
      break;
    case kBignumericValue:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          21, this->bignumeric_value(), target);
      break;
    case kJsonValue:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->json_value().data(), static_cast<int>(this->json_value().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "zetasql.ValueProto.json_value");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          23, this->json_value(), target);
      break;
    case kIntervalValue:
      target =
        ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
          24, this->interval_value(), target);
      break;
    case kValueProtoSwitchMustHaveADefault:
      target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(255, this->__valueproto__switch_must_have_a_default(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ValueProto)
  return target;
}

size_t ValueProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ValueProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  switch (value_case()) {
    // optional int32 int32_value = 1;
    case kInt32Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_value());
      break;
    }
    // optional int64 int64_value = 2;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // optional uint32 uint32_value = 3;
    case kUint32Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint32_value());
      break;
    }
    // optional uint64 uint64_value = 4;
    case kUint64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64_value());
      break;
    }
    // optional bool bool_value = 5;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // optional float float_value = 6;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // optional double double_value = 7;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // optional string string_value = 8;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // optional bytes bytes_value = 9;
    case kBytesValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value());
      break;
    }
    // optional int32 date_value = 10;
    case kDateValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->date_value());
      break;
    }
    // optional int32 enum_value = 12;
    case kEnumValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enum_value());
      break;
    }
    // optional .zetasql.ValueProto.Array array_value = 13;
    case kArrayValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.array_value_);
      break;
    }
    // optional .zetasql.ValueProto.Struct struct_value = 14;
    case kStructValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.struct_value_);
      break;
    }
    // optional bytes proto_value = 15;
    case kProtoValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->proto_value());
      break;
    }
    // optional .google.protobuf.Timestamp timestamp_value = 16;
    case kTimestampValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.timestamp_value_);
      break;
    }
    // optional .zetasql.ValueProto.Datetime datetime_value = 17;
    case kDatetimeValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.datetime_value_);
      break;
    }
    // optional int64 time_value = 18;
    case kTimeValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time_value());
      break;
    }
    // optional bytes geography_value = 19;
    case kGeographyValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->geography_value());
      break;
    }
    // optional bytes numeric_value = 20;
    case kNumericValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->numeric_value());
      break;
    }
    // optional bytes bignumeric_value = 21;
    case kBignumericValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bignumeric_value());
      break;
    }
    // optional string json_value = 23;
    case kJsonValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->json_value());
      break;
    }
    // optional bytes interval_value = 24;
    case kIntervalValue: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->interval_value());
      break;
    }
    // optional bool __ValueProto__switch_must_have_a_default = 255;
    case kValueProtoSwitchMustHaveADefault: {
      total_size += 2 + 1;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ValueProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ValueProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ValueProto)
    MergeFrom(*source);
  }
}

void ValueProto::MergeFrom(const ValueProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ValueProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kInt32Value: {
      set_int32_value(from.int32_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kUint32Value: {
      set_uint32_value(from.uint32_value());
      break;
    }
    case kUint64Value: {
      set_uint64_value(from.uint64_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case kDateValue: {
      set_date_value(from.date_value());
      break;
    }
    case kEnumValue: {
      set_enum_value(from.enum_value());
      break;
    }
    case kArrayValue: {
      mutable_array_value()->::zetasql::ValueProto_Array::MergeFrom(from.array_value());
      break;
    }
    case kStructValue: {
      mutable_struct_value()->::zetasql::ValueProto_Struct::MergeFrom(from.struct_value());
      break;
    }
    case kProtoValue: {
      set_proto_value(from.proto_value());
      break;
    }
    case kTimestampValue: {
      mutable_timestamp_value()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_value());
      break;
    }
    case kDatetimeValue: {
      mutable_datetime_value()->::zetasql::ValueProto_Datetime::MergeFrom(from.datetime_value());
      break;
    }
    case kTimeValue: {
      set_time_value(from.time_value());
      break;
    }
    case kGeographyValue: {
      set_geography_value(from.geography_value());
      break;
    }
    case kNumericValue: {
      set_numeric_value(from.numeric_value());
      break;
    }
    case kBignumericValue: {
      set_bignumeric_value(from.bignumeric_value());
      break;
    }
    case kJsonValue: {
      set_json_value(from.json_value());
      break;
    }
    case kIntervalValue: {
      set_interval_value(from.interval_value());
      break;
    }
    case kValueProtoSwitchMustHaveADefault: {
      set___valueproto__switch_must_have_a_default(from.__valueproto__switch_must_have_a_default());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void ValueProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ValueProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto::CopyFrom(const ValueProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ValueProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueProto::IsInitialized() const {
  return true;
}

void ValueProto::Swap(ValueProto* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ValueProto* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ValueProto::UnsafeArenaSwap(ValueProto* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ValueProto::InternalSwap(ValueProto* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueProto::GetMetadata() const {
  protobuf_zetasql_2fpublic_2fvalue_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fpublic_2fvalue_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ValueProto_Array* Arena::CreateMaybeMessage< ::zetasql::ValueProto_Array >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zetasql::ValueProto_Array >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ValueProto_Struct* Arena::CreateMaybeMessage< ::zetasql::ValueProto_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zetasql::ValueProto_Struct >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ValueProto_Datetime* Arena::CreateMaybeMessage< ::zetasql::ValueProto_Datetime >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zetasql::ValueProto_Datetime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ValueProto* Arena::CreateMaybeMessage< ::zetasql::ValueProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::zetasql::ValueProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
