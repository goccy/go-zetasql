// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/resolved_ast/serialization.proto

#include "zetasql/resolved_ast/serialization.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_zetasql_2fpublic_2fannotation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fannotation_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AnnotationMapProto;
}  // namespace protobuf_zetasql_2fpublic_2fannotation_2eproto
namespace protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParseLocationRangeProto;
}  // namespace protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto
namespace protobuf_zetasql_2fpublic_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoTypeProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2ftype_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ArrayTypeProto;
}  // namespace protobuf_zetasql_2fpublic_2ftype_2eproto
namespace protobuf_zetasql_2fpublic_2fvalue_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fpublic_2fvalue_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ValueProto;
}  // namespace protobuf_zetasql_2fpublic_2fvalue_2eproto
namespace protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResolvedCollationProto;
}  // namespace protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto
namespace zetasql {
class ResolvedColumnProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResolvedColumnProto>
      _instance;
} _ResolvedColumnProto_default_instance_;
class ValueWithTypeProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueWithTypeProto>
      _instance;
} _ValueWithTypeProto_default_instance_;
class TableRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableRefProto>
      _instance;
} _TableRefProto_default_instance_;
class ModelRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelRefProto>
      _instance;
} _ModelRefProto_default_instance_;
class ConnectionRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnectionRefProto>
      _instance;
} _ConnectionRefProto_default_instance_;
class ConstantRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConstantRefProto>
      _instance;
} _ConstantRefProto_default_instance_;
class FunctionRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionRefProto>
      _instance;
} _FunctionRefProto_default_instance_;
class TableValuedFunctionRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TableValuedFunctionRefProto>
      _instance;
} _TableValuedFunctionRefProto_default_instance_;
class ResolvedNodeProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResolvedNodeProto>
      _instance;
} _ResolvedNodeProto_default_instance_;
class FieldDescriptorRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FieldDescriptorRefProto>
      _instance;
} _FieldDescriptorRefProto_default_instance_;
class OneofDescriptorRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OneofDescriptorRefProto>
      _instance;
} _OneofDescriptorRefProto_default_instance_;
class ProcedureRefProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureRefProto>
      _instance;
} _ProcedureRefProto_default_instance_;
class ResolvedCollationProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResolvedCollationProto>
      _instance;
} _ResolvedCollationProto_default_instance_;
}  // namespace zetasql
namespace protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto {
static void InitDefaultsResolvedColumnProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ResolvedColumnProto_default_instance_;
    new (ptr) ::zetasql::ResolvedColumnProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ResolvedColumnProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResolvedColumnProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResolvedColumnProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,
      &protobuf_zetasql_2fpublic_2fannotation_2eproto::scc_info_AnnotationMapProto.base,}};

static void InitDefaultsValueWithTypeProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ValueWithTypeProto_default_instance_;
    new (ptr) ::zetasql::ValueWithTypeProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ValueWithTypeProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ValueWithTypeProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsValueWithTypeProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ArrayTypeProto.base,
      &protobuf_zetasql_2fpublic_2fvalue_2eproto::scc_info_ValueProto.base,}};

static void InitDefaultsTableRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_TableRefProto_default_instance_;
    new (ptr) ::zetasql::TableRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::TableRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TableRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTableRefProto}, {}};

static void InitDefaultsModelRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ModelRefProto_default_instance_;
    new (ptr) ::zetasql::ModelRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ModelRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelRefProto}, {}};

static void InitDefaultsConnectionRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ConnectionRefProto_default_instance_;
    new (ptr) ::zetasql::ConnectionRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ConnectionRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConnectionRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnectionRefProto}, {}};

static void InitDefaultsConstantRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ConstantRefProto_default_instance_;
    new (ptr) ::zetasql::ConstantRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ConstantRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ConstantRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConstantRefProto}, {}};

static void InitDefaultsFunctionRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_FunctionRefProto_default_instance_;
    new (ptr) ::zetasql::FunctionRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::FunctionRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FunctionRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFunctionRefProto}, {}};

static void InitDefaultsTableValuedFunctionRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_TableValuedFunctionRefProto_default_instance_;
    new (ptr) ::zetasql::TableValuedFunctionRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::TableValuedFunctionRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TableValuedFunctionRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTableValuedFunctionRefProto}, {}};

static void InitDefaultsResolvedNodeProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ResolvedNodeProto_default_instance_;
    new (ptr) ::zetasql::ResolvedNodeProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ResolvedNodeProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResolvedNodeProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResolvedNodeProto}, {
      &protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto::scc_info_ParseLocationRangeProto.base,}};

static void InitDefaultsFieldDescriptorRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_FieldDescriptorRefProto_default_instance_;
    new (ptr) ::zetasql::FieldDescriptorRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::FieldDescriptorRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FieldDescriptorRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFieldDescriptorRefProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ProtoTypeProto.base,}};

static void InitDefaultsOneofDescriptorRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_OneofDescriptorRefProto_default_instance_;
    new (ptr) ::zetasql::OneofDescriptorRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::OneofDescriptorRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OneofDescriptorRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOneofDescriptorRefProto}, {
      &protobuf_zetasql_2fpublic_2ftype_2eproto::scc_info_ProtoTypeProto.base,}};

static void InitDefaultsProcedureRefProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ProcedureRefProto_default_instance_;
    new (ptr) ::zetasql::ProcedureRefProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ProcedureRefProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureRefProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcedureRefProto}, {}};

static void InitDefaultsResolvedCollationProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ResolvedCollationProto_default_instance_;
    new (ptr) ::zetasql::ResolvedCollationProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ResolvedCollationProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResolvedCollationProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResolvedCollationProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ResolvedColumnProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValueWithTypeProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConnectionRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConstantRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FunctionRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TableValuedFunctionRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResolvedNodeProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FieldDescriptorRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OneofDescriptorRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureRefProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResolvedCollationProto.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedColumnProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedColumnProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedColumnProto, column_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedColumnProto, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedColumnProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedColumnProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedColumnProto, annotation_map_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueWithTypeProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueWithTypeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueWithTypeProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ValueWithTypeProto, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableRefProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableRefProto, serialization_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableRefProto, full_name_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ModelRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ModelRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ModelRefProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ModelRefProto, serialization_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ModelRefProto, full_name_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ConnectionRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ConnectionRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ConnectionRefProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ConnectionRefProto, full_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ConstantRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ConstantRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ConstantRefProto, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FunctionRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FunctionRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FunctionRefProto, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableValuedFunctionRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableValuedFunctionRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::TableValuedFunctionRefProto, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedNodeProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedNodeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedNodeProto, parse_location_range_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FieldDescriptorRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FieldDescriptorRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FieldDescriptorRefProto, containing_proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::FieldDescriptorRefProto, number_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::OneofDescriptorRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::OneofDescriptorRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::OneofDescriptorRefProto, containing_proto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::OneofDescriptorRefProto, index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ProcedureRefProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ProcedureRefProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ProcedureRefProto, name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedCollationProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedCollationProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedCollationProto, collation_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ResolvedCollationProto, child_list_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::zetasql::ResolvedColumnProto)},
  { 15, 22, sizeof(::zetasql::ValueWithTypeProto)},
  { 24, 32, sizeof(::zetasql::TableRefProto)},
  { 35, 43, sizeof(::zetasql::ModelRefProto)},
  { 46, 53, sizeof(::zetasql::ConnectionRefProto)},
  { 55, 61, sizeof(::zetasql::ConstantRefProto)},
  { 62, 68, sizeof(::zetasql::FunctionRefProto)},
  { 69, 75, sizeof(::zetasql::TableValuedFunctionRefProto)},
  { 76, 82, sizeof(::zetasql::ResolvedNodeProto)},
  { 83, 90, sizeof(::zetasql::FieldDescriptorRefProto)},
  { 92, 99, sizeof(::zetasql::OneofDescriptorRefProto)},
  { 101, 107, sizeof(::zetasql::ProcedureRefProto)},
  { 108, 115, sizeof(::zetasql::ResolvedCollationProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ResolvedColumnProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ValueWithTypeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_TableRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ModelRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ConnectionRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ConstantRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_FunctionRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_TableValuedFunctionRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ResolvedNodeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_FieldDescriptorRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_OneofDescriptorRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ProcedureRefProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ResolvedCollationProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "zetasql/resolved_ast/serialization.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(zetasql/resolved_ast/serialization.pro"
      "to\022\007zetasql\032\037zetasql/public/annotation.p"
      "roto\032)zetasql/public/parse_location_rang"
      "e.proto\032\031zetasql/public/type.proto\032\032zeta"
      "sql/public/value.proto\"\241\001\n\023ResolvedColum"
      "nProto\022\021\n\tcolumn_id\030\001 \001(\003\022\022\n\ntable_name\030"
      "\002 \001(\t\022\014\n\004name\030\003 \001(\t\022 \n\004type\030\004 \001(\0132\022.zeta"
      "sql.TypeProto\0223\n\016annotation_map\030\005 \001(\0132\033."
      "zetasql.AnnotationMapProto\"Z\n\022ValueWithT"
      "ypeProto\022 \n\004type\030\001 \001(\0132\022.zetasql.TypePro"
      "to\022\"\n\005value\030\002 \001(\0132\023.zetasql.ValueProto\"J"
      "\n\rTableRefProto\022\014\n\004name\030\001 \001(\t\022\030\n\020seriali"
      "zation_id\030\002 \001(\003\022\021\n\tfull_name\030\003 \001(\t\"J\n\rMo"
      "delRefProto\022\014\n\004name\030\001 \001(\t\022\030\n\020serializati"
      "on_id\030\002 \001(\003\022\021\n\tfull_name\030\003 \001(\t\"5\n\022Connec"
      "tionRefProto\022\014\n\004name\030\001 \001(\t\022\021\n\tfull_name\030"
      "\003 \001(\t\" \n\020ConstantRefProto\022\014\n\004name\030\001 \001(\t\""
      " \n\020FunctionRefProto\022\014\n\004name\030\001 \001(\t\"+\n\033Tab"
      "leValuedFunctionRefProto\022\014\n\004name\030\001 \001(\t\"S"
      "\n\021ResolvedNodeProto\022>\n\024parse_location_ra"
      "nge\030\001 \001(\0132 .zetasql.ParseLocationRangePr"
      "oto\"\\\n\027FieldDescriptorRefProto\0221\n\020contai"
      "ning_proto\030\001 \001(\0132\027.zetasql.ProtoTypeProt"
      "o\022\016\n\006number\030\002 \001(\005\"[\n\027OneofDescriptorRefP"
      "roto\0221\n\020containing_proto\030\001 \001(\0132\027.zetasql"
      ".ProtoTypeProto\022\r\n\005index\030\002 \001(\005\"!\n\021Proced"
      "ureRefProto\022\014\n\004name\030\001 \001(\t\"e\n\026ResolvedCol"
      "lationProto\022\026\n\016collation_name\030\001 \001(\t\0223\n\nc"
      "hild_list\030\002 \003(\0132\037.zetasql.ResolvedCollat"
      "ionProtoB,\n\022com.google.zetasqlB\024ZetaSQLS"
      "erializationP\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1214);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zetasql/resolved_ast/serialization.proto", &protobuf_RegisterTypes);
  ::protobuf_zetasql_2fpublic_2fannotation_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2fparse_5flocation_5frange_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2ftype_2eproto::AddDescriptors();
  ::protobuf_zetasql_2fpublic_2fvalue_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto
namespace zetasql {

// ===================================================================

void ResolvedColumnProto::InitAsDefaultInstance() {
  ::zetasql::_ResolvedColumnProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::zetasql::TypeProto*>(
      ::zetasql::TypeProto::internal_default_instance());
  ::zetasql::_ResolvedColumnProto_default_instance_._instance.get_mutable()->annotation_map_ = const_cast< ::zetasql::AnnotationMapProto*>(
      ::zetasql::AnnotationMapProto::internal_default_instance());
}
void ResolvedColumnProto::clear_type() {
  if (type_ != NULL) type_->Clear();
  clear_has_type();
}
void ResolvedColumnProto::clear_annotation_map() {
  if (annotation_map_ != NULL) annotation_map_->Clear();
  clear_has_annotation_map();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResolvedColumnProto::kColumnIdFieldNumber;
const int ResolvedColumnProto::kTableNameFieldNumber;
const int ResolvedColumnProto::kNameFieldNumber;
const int ResolvedColumnProto::kTypeFieldNumber;
const int ResolvedColumnProto::kAnnotationMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResolvedColumnProto::ResolvedColumnProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ResolvedColumnProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ResolvedColumnProto)
}
ResolvedColumnProto::ResolvedColumnProto(const ResolvedColumnProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_table_name()) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_type()) {
    type_ = new ::zetasql::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_annotation_map()) {
    annotation_map_ = new ::zetasql::AnnotationMapProto(*from.annotation_map_);
  } else {
    annotation_map_ = NULL;
  }
  column_id_ = from.column_id_;
  // @@protoc_insertion_point(copy_constructor:zetasql.ResolvedColumnProto)
}

void ResolvedColumnProto::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_id_) -
      reinterpret_cast<char*>(&type_)) + sizeof(column_id_));
}

ResolvedColumnProto::~ResolvedColumnProto() {
  // @@protoc_insertion_point(destructor:zetasql.ResolvedColumnProto)
  SharedDtor();
}

void ResolvedColumnProto::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete annotation_map_;
}

void ResolvedColumnProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResolvedColumnProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResolvedColumnProto& ResolvedColumnProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ResolvedColumnProto.base);
  return *internal_default_instance();
}


void ResolvedColumnProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ResolvedColumnProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      table_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(annotation_map_ != NULL);
      annotation_map_->Clear();
    }
  }
  column_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResolvedColumnProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ResolvedColumnProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 column_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_column_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &column_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string table_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ResolvedColumnProto.table_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ResolvedColumnProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.TypeProto type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.AnnotationMapProto annotation_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotation_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ResolvedColumnProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ResolvedColumnProto)
  return false;
#undef DO_
}

void ResolvedColumnProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ResolvedColumnProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 column_id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->column_id(), output);
  }

  // optional string table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ResolvedColumnProto.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->table_name(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ResolvedColumnProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional .zetasql.TypeProto type = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_type(), output);
  }

  // optional .zetasql.AnnotationMapProto annotation_map = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_annotation_map(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ResolvedColumnProto)
}

::google::protobuf::uint8* ResolvedColumnProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ResolvedColumnProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 column_id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->column_id(), target);
  }

  // optional string table_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ResolvedColumnProto.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->table_name(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ResolvedColumnProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional .zetasql.TypeProto type = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_type(), deterministic, target);
  }

  // optional .zetasql.AnnotationMapProto annotation_map = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_annotation_map(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ResolvedColumnProto)
  return target;
}

size_t ResolvedColumnProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ResolvedColumnProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string table_name = 2;
    if (has_table_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->table_name());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .zetasql.TypeProto type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_);
    }

    // optional .zetasql.AnnotationMapProto annotation_map = 5;
    if (has_annotation_map()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *annotation_map_);
    }

    // optional int64 column_id = 1;
    if (has_column_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->column_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResolvedColumnProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ResolvedColumnProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ResolvedColumnProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResolvedColumnProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ResolvedColumnProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ResolvedColumnProto)
    MergeFrom(*source);
  }
}

void ResolvedColumnProto::MergeFrom(const ResolvedColumnProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ResolvedColumnProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_table_name();
      table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_type()->::zetasql::TypeProto::MergeFrom(from.type());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_annotation_map()->::zetasql::AnnotationMapProto::MergeFrom(from.annotation_map());
    }
    if (cached_has_bits & 0x00000010u) {
      column_id_ = from.column_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ResolvedColumnProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ResolvedColumnProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolvedColumnProto::CopyFrom(const ResolvedColumnProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ResolvedColumnProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolvedColumnProto::IsInitialized() const {
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void ResolvedColumnProto::Swap(ResolvedColumnProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResolvedColumnProto::InternalSwap(ResolvedColumnProto* other) {
  using std::swap;
  table_name_.Swap(&other->table_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(annotation_map_, other->annotation_map_);
  swap(column_id_, other->column_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResolvedColumnProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueWithTypeProto::InitAsDefaultInstance() {
  ::zetasql::_ValueWithTypeProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::zetasql::TypeProto*>(
      ::zetasql::TypeProto::internal_default_instance());
  ::zetasql::_ValueWithTypeProto_default_instance_._instance.get_mutable()->value_ = const_cast< ::zetasql::ValueProto*>(
      ::zetasql::ValueProto::internal_default_instance());
}
void ValueWithTypeProto::clear_type() {
  if (type_ != NULL) type_->Clear();
  clear_has_type();
}
void ValueWithTypeProto::clear_value() {
  if (value_ != NULL) value_->Clear();
  clear_has_value();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueWithTypeProto::kTypeFieldNumber;
const int ValueWithTypeProto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueWithTypeProto::ValueWithTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ValueWithTypeProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ValueWithTypeProto)
}
ValueWithTypeProto::ValueWithTypeProto(const ValueWithTypeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::zetasql::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::zetasql::ValueProto(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ValueWithTypeProto)
}

void ValueWithTypeProto::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&type_)) + sizeof(value_));
}

ValueWithTypeProto::~ValueWithTypeProto() {
  // @@protoc_insertion_point(destructor:zetasql.ValueWithTypeProto)
  SharedDtor();
}

void ValueWithTypeProto::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete value_;
}

void ValueWithTypeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueWithTypeProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueWithTypeProto& ValueWithTypeProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ValueWithTypeProto.base);
  return *internal_default_instance();
}


void ValueWithTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ValueWithTypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != NULL);
      value_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueWithTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ValueWithTypeProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zetasql.TypeProto type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ValueProto value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ValueWithTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ValueWithTypeProto)
  return false;
#undef DO_
}

void ValueWithTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ValueWithTypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.TypeProto type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_type(), output);
  }

  // optional .zetasql.ValueProto value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ValueWithTypeProto)
}

::google::protobuf::uint8* ValueWithTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ValueWithTypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.TypeProto type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_type(), deterministic, target);
  }

  // optional .zetasql.ValueProto value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ValueWithTypeProto)
  return target;
}

size_t ValueWithTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ValueWithTypeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .zetasql.TypeProto type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_);
    }

    // optional .zetasql.ValueProto value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueWithTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ValueWithTypeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueWithTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueWithTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ValueWithTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ValueWithTypeProto)
    MergeFrom(*source);
  }
}

void ValueWithTypeProto::MergeFrom(const ValueWithTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ValueWithTypeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_type()->::zetasql::TypeProto::MergeFrom(from.type());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_value()->::zetasql::ValueProto::MergeFrom(from.value());
    }
  }
}

void ValueWithTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ValueWithTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueWithTypeProto::CopyFrom(const ValueWithTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ValueWithTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueWithTypeProto::IsInitialized() const {
  if (has_type()) {
    if (!this->type_->IsInitialized()) return false;
  }
  return true;
}

void ValueWithTypeProto::Swap(ValueWithTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueWithTypeProto::InternalSwap(ValueWithTypeProto* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueWithTypeProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableRefProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableRefProto::kNameFieldNumber;
const int TableRefProto::kSerializationIdFieldNumber;
const int TableRefProto::kFullNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableRefProto::TableRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_TableRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.TableRefProto)
}
TableRefProto::TableRefProto(const TableRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_full_name()) {
    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  serialization_id_ = from.serialization_id_;
  // @@protoc_insertion_point(copy_constructor:zetasql.TableRefProto)
}

void TableRefProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialization_id_ = GOOGLE_LONGLONG(0);
}

TableRefProto::~TableRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.TableRefProto)
  SharedDtor();
}

void TableRefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableRefProto& TableRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_TableRefProto.base);
  return *internal_default_instance();
}


void TableRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.TableRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      full_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  serialization_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.TableRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.TableRefProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 serialization_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_serialization_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialization_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string full_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->full_name().data(), static_cast<int>(this->full_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.TableRefProto.full_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.TableRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.TableRefProto)
  return false;
#undef DO_
}

void TableRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.TableRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.TableRefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int64 serialization_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->serialization_id(), output);
  }

  // optional string full_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.TableRefProto.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->full_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.TableRefProto)
}

::google::protobuf::uint8* TableRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.TableRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.TableRefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int64 serialization_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->serialization_id(), target);
  }

  // optional string full_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.TableRefProto.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->full_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.TableRefProto)
  return target;
}

size_t TableRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.TableRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string full_name = 3;
    if (has_full_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->full_name());
    }

    // optional int64 serialization_id = 2;
    if (has_serialization_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialization_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.TableRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TableRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.TableRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.TableRefProto)
    MergeFrom(*source);
  }
}

void TableRefProto::MergeFrom(const TableRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.TableRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_full_name();
      full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      serialization_id_ = from.serialization_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TableRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.TableRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableRefProto::CopyFrom(const TableRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.TableRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableRefProto::IsInitialized() const {
  return true;
}

void TableRefProto::Swap(TableRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableRefProto::InternalSwap(TableRefProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  full_name_.Swap(&other->full_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serialization_id_, other->serialization_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelRefProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelRefProto::kNameFieldNumber;
const int ModelRefProto::kSerializationIdFieldNumber;
const int ModelRefProto::kFullNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelRefProto::ModelRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ModelRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ModelRefProto)
}
ModelRefProto::ModelRefProto(const ModelRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_full_name()) {
    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  serialization_id_ = from.serialization_id_;
  // @@protoc_insertion_point(copy_constructor:zetasql.ModelRefProto)
}

void ModelRefProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialization_id_ = GOOGLE_LONGLONG(0);
}

ModelRefProto::~ModelRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.ModelRefProto)
  SharedDtor();
}

void ModelRefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModelRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelRefProto& ModelRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ModelRefProto.base);
  return *internal_default_instance();
}


void ModelRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ModelRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      full_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  serialization_id_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ModelRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ModelRefProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 serialization_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_serialization_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serialization_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string full_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->full_name().data(), static_cast<int>(this->full_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ModelRefProto.full_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ModelRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ModelRefProto)
  return false;
#undef DO_
}

void ModelRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ModelRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ModelRefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int64 serialization_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->serialization_id(), output);
  }

  // optional string full_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ModelRefProto.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->full_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ModelRefProto)
}

::google::protobuf::uint8* ModelRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ModelRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ModelRefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int64 serialization_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->serialization_id(), target);
  }

  // optional string full_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ModelRefProto.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->full_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ModelRefProto)
  return target;
}

size_t ModelRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ModelRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string full_name = 3;
    if (has_full_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->full_name());
    }

    // optional int64 serialization_id = 2;
    if (has_serialization_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serialization_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ModelRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ModelRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ModelRefProto)
    MergeFrom(*source);
  }
}

void ModelRefProto::MergeFrom(const ModelRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ModelRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_full_name();
      full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      serialization_id_ = from.serialization_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModelRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ModelRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelRefProto::CopyFrom(const ModelRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ModelRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelRefProto::IsInitialized() const {
  return true;
}

void ModelRefProto::Swap(ModelRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelRefProto::InternalSwap(ModelRefProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  full_name_.Swap(&other->full_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serialization_id_, other->serialization_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnectionRefProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionRefProto::kNameFieldNumber;
const int ConnectionRefProto::kFullNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionRefProto::ConnectionRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ConnectionRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ConnectionRefProto)
}
ConnectionRefProto::ConnectionRefProto(const ConnectionRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_full_name()) {
    full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ConnectionRefProto)
}

void ConnectionRefProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ConnectionRefProto::~ConnectionRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.ConnectionRefProto)
  SharedDtor();
}

void ConnectionRefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConnectionRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionRefProto& ConnectionRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ConnectionRefProto.base);
  return *internal_default_instance();
}


void ConnectionRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ConnectionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      full_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnectionRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ConnectionRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ConnectionRefProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string full_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->full_name().data(), static_cast<int>(this->full_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ConnectionRefProto.full_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ConnectionRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ConnectionRefProto)
  return false;
#undef DO_
}

void ConnectionRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ConnectionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ConnectionRefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string full_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ConnectionRefProto.full_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->full_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ConnectionRefProto)
}

::google::protobuf::uint8* ConnectionRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ConnectionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ConnectionRefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string full_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_name().data(), static_cast<int>(this->full_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ConnectionRefProto.full_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->full_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ConnectionRefProto)
  return target;
}

size_t ConnectionRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ConnectionRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string full_name = 3;
    if (has_full_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->full_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectionRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ConnectionRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ConnectionRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ConnectionRefProto)
    MergeFrom(*source);
  }
}

void ConnectionRefProto::MergeFrom(const ConnectionRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ConnectionRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_full_name();
      full_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_name_);
    }
  }
}

void ConnectionRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ConnectionRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionRefProto::CopyFrom(const ConnectionRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ConnectionRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionRefProto::IsInitialized() const {
  return true;
}

void ConnectionRefProto::Swap(ConnectionRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionRefProto::InternalSwap(ConnectionRefProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  full_name_.Swap(&other->full_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConnectionRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConstantRefProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConstantRefProto::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConstantRefProto::ConstantRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ConstantRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ConstantRefProto)
}
ConstantRefProto::ConstantRefProto(const ConstantRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ConstantRefProto)
}

void ConstantRefProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ConstantRefProto::~ConstantRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.ConstantRefProto)
  SharedDtor();
}

void ConstantRefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConstantRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConstantRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConstantRefProto& ConstantRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ConstantRefProto.base);
  return *internal_default_instance();
}


void ConstantRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ConstantRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConstantRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ConstantRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ConstantRefProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ConstantRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ConstantRefProto)
  return false;
#undef DO_
}

void ConstantRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ConstantRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ConstantRefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ConstantRefProto)
}

::google::protobuf::uint8* ConstantRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ConstantRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ConstantRefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ConstantRefProto)
  return target;
}

size_t ConstantRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ConstantRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConstantRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ConstantRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ConstantRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConstantRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ConstantRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ConstantRefProto)
    MergeFrom(*source);
  }
}

void ConstantRefProto::MergeFrom(const ConstantRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ConstantRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ConstantRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ConstantRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstantRefProto::CopyFrom(const ConstantRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ConstantRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstantRefProto::IsInitialized() const {
  return true;
}

void ConstantRefProto::Swap(ConstantRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConstantRefProto::InternalSwap(ConstantRefProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConstantRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionRefProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionRefProto::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionRefProto::FunctionRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_FunctionRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.FunctionRefProto)
}
FunctionRefProto::FunctionRefProto(const FunctionRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.FunctionRefProto)
}

void FunctionRefProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FunctionRefProto::~FunctionRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.FunctionRefProto)
  SharedDtor();
}

void FunctionRefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FunctionRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FunctionRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionRefProto& FunctionRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_FunctionRefProto.base);
  return *internal_default_instance();
}


void FunctionRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.FunctionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FunctionRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.FunctionRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.FunctionRefProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.FunctionRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.FunctionRefProto)
  return false;
#undef DO_
}

void FunctionRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.FunctionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.FunctionRefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.FunctionRefProto)
}

::google::protobuf::uint8* FunctionRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.FunctionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.FunctionRefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.FunctionRefProto)
  return target;
}

size_t FunctionRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.FunctionRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.FunctionRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.FunctionRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.FunctionRefProto)
    MergeFrom(*source);
  }
}

void FunctionRefProto::MergeFrom(const FunctionRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.FunctionRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void FunctionRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.FunctionRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionRefProto::CopyFrom(const FunctionRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.FunctionRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionRefProto::IsInitialized() const {
  return true;
}

void FunctionRefProto::Swap(FunctionRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionRefProto::InternalSwap(FunctionRefProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FunctionRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TableValuedFunctionRefProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TableValuedFunctionRefProto::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TableValuedFunctionRefProto::TableValuedFunctionRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_TableValuedFunctionRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.TableValuedFunctionRefProto)
}
TableValuedFunctionRefProto::TableValuedFunctionRefProto(const TableValuedFunctionRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.TableValuedFunctionRefProto)
}

void TableValuedFunctionRefProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TableValuedFunctionRefProto::~TableValuedFunctionRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.TableValuedFunctionRefProto)
  SharedDtor();
}

void TableValuedFunctionRefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TableValuedFunctionRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TableValuedFunctionRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TableValuedFunctionRefProto& TableValuedFunctionRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_TableValuedFunctionRefProto.base);
  return *internal_default_instance();
}


void TableValuedFunctionRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.TableValuedFunctionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TableValuedFunctionRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.TableValuedFunctionRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.TableValuedFunctionRefProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.TableValuedFunctionRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.TableValuedFunctionRefProto)
  return false;
#undef DO_
}

void TableValuedFunctionRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.TableValuedFunctionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.TableValuedFunctionRefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.TableValuedFunctionRefProto)
}

::google::protobuf::uint8* TableValuedFunctionRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.TableValuedFunctionRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.TableValuedFunctionRefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.TableValuedFunctionRefProto)
  return target;
}

size_t TableValuedFunctionRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.TableValuedFunctionRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TableValuedFunctionRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.TableValuedFunctionRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TableValuedFunctionRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TableValuedFunctionRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.TableValuedFunctionRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.TableValuedFunctionRefProto)
    MergeFrom(*source);
  }
}

void TableValuedFunctionRefProto::MergeFrom(const TableValuedFunctionRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.TableValuedFunctionRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void TableValuedFunctionRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.TableValuedFunctionRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TableValuedFunctionRefProto::CopyFrom(const TableValuedFunctionRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.TableValuedFunctionRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TableValuedFunctionRefProto::IsInitialized() const {
  return true;
}

void TableValuedFunctionRefProto::Swap(TableValuedFunctionRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TableValuedFunctionRefProto::InternalSwap(TableValuedFunctionRefProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TableValuedFunctionRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResolvedNodeProto::InitAsDefaultInstance() {
  ::zetasql::_ResolvedNodeProto_default_instance_._instance.get_mutable()->parse_location_range_ = const_cast< ::zetasql::ParseLocationRangeProto*>(
      ::zetasql::ParseLocationRangeProto::internal_default_instance());
}
void ResolvedNodeProto::clear_parse_location_range() {
  if (parse_location_range_ != NULL) parse_location_range_->Clear();
  clear_has_parse_location_range();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResolvedNodeProto::kParseLocationRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResolvedNodeProto::ResolvedNodeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ResolvedNodeProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ResolvedNodeProto)
}
ResolvedNodeProto::ResolvedNodeProto(const ResolvedNodeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parse_location_range()) {
    parse_location_range_ = new ::zetasql::ParseLocationRangeProto(*from.parse_location_range_);
  } else {
    parse_location_range_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ResolvedNodeProto)
}

void ResolvedNodeProto::SharedCtor() {
  parse_location_range_ = NULL;
}

ResolvedNodeProto::~ResolvedNodeProto() {
  // @@protoc_insertion_point(destructor:zetasql.ResolvedNodeProto)
  SharedDtor();
}

void ResolvedNodeProto::SharedDtor() {
  if (this != internal_default_instance()) delete parse_location_range_;
}

void ResolvedNodeProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResolvedNodeProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResolvedNodeProto& ResolvedNodeProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ResolvedNodeProto.base);
  return *internal_default_instance();
}


void ResolvedNodeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ResolvedNodeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(parse_location_range_ != NULL);
    parse_location_range_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResolvedNodeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ResolvedNodeProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zetasql.ParseLocationRangeProto parse_location_range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parse_location_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ResolvedNodeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ResolvedNodeProto)
  return false;
#undef DO_
}

void ResolvedNodeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ResolvedNodeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.ParseLocationRangeProto parse_location_range = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parse_location_range(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ResolvedNodeProto)
}

::google::protobuf::uint8* ResolvedNodeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ResolvedNodeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.ParseLocationRangeProto parse_location_range = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parse_location_range(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ResolvedNodeProto)
  return target;
}

size_t ResolvedNodeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ResolvedNodeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .zetasql.ParseLocationRangeProto parse_location_range = 1;
  if (has_parse_location_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parse_location_range_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResolvedNodeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ResolvedNodeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ResolvedNodeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResolvedNodeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ResolvedNodeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ResolvedNodeProto)
    MergeFrom(*source);
  }
}

void ResolvedNodeProto::MergeFrom(const ResolvedNodeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ResolvedNodeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parse_location_range()) {
    mutable_parse_location_range()->::zetasql::ParseLocationRangeProto::MergeFrom(from.parse_location_range());
  }
}

void ResolvedNodeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ResolvedNodeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolvedNodeProto::CopyFrom(const ResolvedNodeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ResolvedNodeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolvedNodeProto::IsInitialized() const {
  return true;
}

void ResolvedNodeProto::Swap(ResolvedNodeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResolvedNodeProto::InternalSwap(ResolvedNodeProto* other) {
  using std::swap;
  swap(parse_location_range_, other->parse_location_range_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResolvedNodeProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FieldDescriptorRefProto::InitAsDefaultInstance() {
  ::zetasql::_FieldDescriptorRefProto_default_instance_._instance.get_mutable()->containing_proto_ = const_cast< ::zetasql::ProtoTypeProto*>(
      ::zetasql::ProtoTypeProto::internal_default_instance());
}
void FieldDescriptorRefProto::clear_containing_proto() {
  if (containing_proto_ != NULL) containing_proto_->Clear();
  clear_has_containing_proto();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldDescriptorRefProto::kContainingProtoFieldNumber;
const int FieldDescriptorRefProto::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldDescriptorRefProto::FieldDescriptorRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_FieldDescriptorRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.FieldDescriptorRefProto)
}
FieldDescriptorRefProto::FieldDescriptorRefProto(const FieldDescriptorRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_containing_proto()) {
    containing_proto_ = new ::zetasql::ProtoTypeProto(*from.containing_proto_);
  } else {
    containing_proto_ = NULL;
  }
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:zetasql.FieldDescriptorRefProto)
}

void FieldDescriptorRefProto::SharedCtor() {
  ::memset(&containing_proto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&containing_proto_)) + sizeof(number_));
}

FieldDescriptorRefProto::~FieldDescriptorRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.FieldDescriptorRefProto)
  SharedDtor();
}

void FieldDescriptorRefProto::SharedDtor() {
  if (this != internal_default_instance()) delete containing_proto_;
}

void FieldDescriptorRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FieldDescriptorRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldDescriptorRefProto& FieldDescriptorRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_FieldDescriptorRefProto.base);
  return *internal_default_instance();
}


void FieldDescriptorRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.FieldDescriptorRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(containing_proto_ != NULL);
    containing_proto_->Clear();
  }
  number_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FieldDescriptorRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.FieldDescriptorRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zetasql.ProtoTypeProto containing_proto = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_containing_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.FieldDescriptorRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.FieldDescriptorRefProto)
  return false;
#undef DO_
}

void FieldDescriptorRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.FieldDescriptorRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.ProtoTypeProto containing_proto = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_containing_proto(), output);
  }

  // optional int32 number = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.FieldDescriptorRefProto)
}

::google::protobuf::uint8* FieldDescriptorRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.FieldDescriptorRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.ProtoTypeProto containing_proto = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_containing_proto(), deterministic, target);
  }

  // optional int32 number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.FieldDescriptorRefProto)
  return target;
}

size_t FieldDescriptorRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.FieldDescriptorRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .zetasql.ProtoTypeProto containing_proto = 1;
    if (has_containing_proto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *containing_proto_);
    }

    // optional int32 number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FieldDescriptorRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.FieldDescriptorRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldDescriptorRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldDescriptorRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.FieldDescriptorRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.FieldDescriptorRefProto)
    MergeFrom(*source);
  }
}

void FieldDescriptorRefProto::MergeFrom(const FieldDescriptorRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.FieldDescriptorRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_containing_proto()->::zetasql::ProtoTypeProto::MergeFrom(from.containing_proto());
    }
    if (cached_has_bits & 0x00000002u) {
      number_ = from.number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FieldDescriptorRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.FieldDescriptorRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldDescriptorRefProto::CopyFrom(const FieldDescriptorRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.FieldDescriptorRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldDescriptorRefProto::IsInitialized() const {
  return true;
}

void FieldDescriptorRefProto::Swap(FieldDescriptorRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldDescriptorRefProto::InternalSwap(FieldDescriptorRefProto* other) {
  using std::swap;
  swap(containing_proto_, other->containing_proto_);
  swap(number_, other->number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FieldDescriptorRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OneofDescriptorRefProto::InitAsDefaultInstance() {
  ::zetasql::_OneofDescriptorRefProto_default_instance_._instance.get_mutable()->containing_proto_ = const_cast< ::zetasql::ProtoTypeProto*>(
      ::zetasql::ProtoTypeProto::internal_default_instance());
}
void OneofDescriptorRefProto::clear_containing_proto() {
  if (containing_proto_ != NULL) containing_proto_->Clear();
  clear_has_containing_proto();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneofDescriptorRefProto::kContainingProtoFieldNumber;
const int OneofDescriptorRefProto::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneofDescriptorRefProto::OneofDescriptorRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_OneofDescriptorRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.OneofDescriptorRefProto)
}
OneofDescriptorRefProto::OneofDescriptorRefProto(const OneofDescriptorRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_containing_proto()) {
    containing_proto_ = new ::zetasql::ProtoTypeProto(*from.containing_proto_);
  } else {
    containing_proto_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:zetasql.OneofDescriptorRefProto)
}

void OneofDescriptorRefProto::SharedCtor() {
  ::memset(&containing_proto_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&containing_proto_)) + sizeof(index_));
}

OneofDescriptorRefProto::~OneofDescriptorRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.OneofDescriptorRefProto)
  SharedDtor();
}

void OneofDescriptorRefProto::SharedDtor() {
  if (this != internal_default_instance()) delete containing_proto_;
}

void OneofDescriptorRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OneofDescriptorRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneofDescriptorRefProto& OneofDescriptorRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_OneofDescriptorRefProto.base);
  return *internal_default_instance();
}


void OneofDescriptorRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.OneofDescriptorRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(containing_proto_ != NULL);
    containing_proto_->Clear();
  }
  index_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneofDescriptorRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.OneofDescriptorRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .zetasql.ProtoTypeProto containing_proto = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_containing_proto()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.OneofDescriptorRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.OneofDescriptorRefProto)
  return false;
#undef DO_
}

void OneofDescriptorRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.OneofDescriptorRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.ProtoTypeProto containing_proto = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_containing_proto(), output);
  }

  // optional int32 index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.OneofDescriptorRefProto)
}

::google::protobuf::uint8* OneofDescriptorRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.OneofDescriptorRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .zetasql.ProtoTypeProto containing_proto = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_containing_proto(), deterministic, target);
  }

  // optional int32 index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.OneofDescriptorRefProto)
  return target;
}

size_t OneofDescriptorRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.OneofDescriptorRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .zetasql.ProtoTypeProto containing_proto = 1;
    if (has_containing_proto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *containing_proto_);
    }

    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneofDescriptorRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.OneofDescriptorRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const OneofDescriptorRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneofDescriptorRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.OneofDescriptorRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.OneofDescriptorRefProto)
    MergeFrom(*source);
  }
}

void OneofDescriptorRefProto::MergeFrom(const OneofDescriptorRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.OneofDescriptorRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_containing_proto()->::zetasql::ProtoTypeProto::MergeFrom(from.containing_proto());
    }
    if (cached_has_bits & 0x00000002u) {
      index_ = from.index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OneofDescriptorRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.OneofDescriptorRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneofDescriptorRefProto::CopyFrom(const OneofDescriptorRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.OneofDescriptorRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneofDescriptorRefProto::IsInitialized() const {
  return true;
}

void OneofDescriptorRefProto::Swap(OneofDescriptorRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneofDescriptorRefProto::InternalSwap(OneofDescriptorRefProto* other) {
  using std::swap;
  swap(containing_proto_, other->containing_proto_);
  swap(index_, other->index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OneofDescriptorRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureRefProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureRefProto::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureRefProto::ProcedureRefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ProcedureRefProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ProcedureRefProto)
}
ProcedureRefProto::ProcedureRefProto(const ProcedureRefProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ProcedureRefProto)
}

void ProcedureRefProto::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProcedureRefProto::~ProcedureRefProto() {
  // @@protoc_insertion_point(destructor:zetasql.ProcedureRefProto)
  SharedDtor();
}

void ProcedureRefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProcedureRefProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureRefProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureRefProto& ProcedureRefProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ProcedureRefProto.base);
  return *internal_default_instance();
}


void ProcedureRefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ProcedureRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProcedureRefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ProcedureRefProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ProcedureRefProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ProcedureRefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ProcedureRefProto)
  return false;
#undef DO_
}

void ProcedureRefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ProcedureRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ProcedureRefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ProcedureRefProto)
}

::google::protobuf::uint8* ProcedureRefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ProcedureRefProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ProcedureRefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ProcedureRefProto)
  return target;
}

size_t ProcedureRefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ProcedureRefProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureRefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ProcedureRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureRefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureRefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ProcedureRefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ProcedureRefProto)
    MergeFrom(*source);
  }
}

void ProcedureRefProto::MergeFrom(const ProcedureRefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ProcedureRefProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ProcedureRefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ProcedureRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureRefProto::CopyFrom(const ProcedureRefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ProcedureRefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureRefProto::IsInitialized() const {
  return true;
}

void ProcedureRefProto::Swap(ProcedureRefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureRefProto::InternalSwap(ProcedureRefProto* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureRefProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResolvedCollationProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResolvedCollationProto::kCollationNameFieldNumber;
const int ResolvedCollationProto::kChildListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResolvedCollationProto::ResolvedCollationProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ResolvedCollationProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ResolvedCollationProto)
}
ResolvedCollationProto::ResolvedCollationProto(const ResolvedCollationProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      child_list_(from.child_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collation_name()) {
    collation_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collation_name_);
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ResolvedCollationProto)
}

void ResolvedCollationProto::SharedCtor() {
  collation_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResolvedCollationProto::~ResolvedCollationProto() {
  // @@protoc_insertion_point(destructor:zetasql.ResolvedCollationProto)
  SharedDtor();
}

void ResolvedCollationProto::SharedDtor() {
  collation_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResolvedCollationProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResolvedCollationProto::descriptor() {
  ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResolvedCollationProto& ResolvedCollationProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::scc_info_ResolvedCollationProto.base);
  return *internal_default_instance();
}


void ResolvedCollationProto::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ResolvedCollationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  child_list_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    collation_name_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResolvedCollationProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ResolvedCollationProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string collation_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collation_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collation_name().data(), static_cast<int>(this->collation_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ResolvedCollationProto.collation_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.ResolvedCollationProto child_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_child_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ResolvedCollationProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ResolvedCollationProto)
  return false;
#undef DO_
}

void ResolvedCollationProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ResolvedCollationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string collation_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collation_name().data(), static_cast<int>(this->collation_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ResolvedCollationProto.collation_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->collation_name(), output);
  }

  // repeated .zetasql.ResolvedCollationProto child_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->child_list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ResolvedCollationProto)
}

::google::protobuf::uint8* ResolvedCollationProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ResolvedCollationProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string collation_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collation_name().data(), static_cast<int>(this->collation_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ResolvedCollationProto.collation_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->collation_name(), target);
  }

  // repeated .zetasql.ResolvedCollationProto child_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->child_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->child_list(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ResolvedCollationProto)
  return target;
}

size_t ResolvedCollationProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ResolvedCollationProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.ResolvedCollationProto child_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->child_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->child_list(static_cast<int>(i)));
    }
  }

  // optional string collation_name = 1;
  if (has_collation_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collation_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResolvedCollationProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ResolvedCollationProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ResolvedCollationProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResolvedCollationProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ResolvedCollationProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ResolvedCollationProto)
    MergeFrom(*source);
  }
}

void ResolvedCollationProto::MergeFrom(const ResolvedCollationProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ResolvedCollationProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  child_list_.MergeFrom(from.child_list_);
  if (from.has_collation_name()) {
    set_has_collation_name();
    collation_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collation_name_);
  }
}

void ResolvedCollationProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ResolvedCollationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolvedCollationProto::CopyFrom(const ResolvedCollationProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ResolvedCollationProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolvedCollationProto::IsInitialized() const {
  return true;
}

void ResolvedCollationProto::Swap(ResolvedCollationProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResolvedCollationProto::InternalSwap(ResolvedCollationProto* other) {
  using std::swap;
  CastToBase(&child_list_)->InternalSwap(CastToBase(&other->child_list_));
  collation_name_.Swap(&other->collation_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResolvedCollationProto::GetMetadata() const {
  protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fresolved_5fast_2fserialization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ResolvedColumnProto* Arena::CreateMaybeMessage< ::zetasql::ResolvedColumnProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ResolvedColumnProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ValueWithTypeProto* Arena::CreateMaybeMessage< ::zetasql::ValueWithTypeProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ValueWithTypeProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::TableRefProto* Arena::CreateMaybeMessage< ::zetasql::TableRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::TableRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ModelRefProto* Arena::CreateMaybeMessage< ::zetasql::ModelRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ModelRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ConnectionRefProto* Arena::CreateMaybeMessage< ::zetasql::ConnectionRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ConnectionRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ConstantRefProto* Arena::CreateMaybeMessage< ::zetasql::ConstantRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ConstantRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::FunctionRefProto* Arena::CreateMaybeMessage< ::zetasql::FunctionRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::FunctionRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::TableValuedFunctionRefProto* Arena::CreateMaybeMessage< ::zetasql::TableValuedFunctionRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::TableValuedFunctionRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ResolvedNodeProto* Arena::CreateMaybeMessage< ::zetasql::ResolvedNodeProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ResolvedNodeProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::FieldDescriptorRefProto* Arena::CreateMaybeMessage< ::zetasql::FieldDescriptorRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::FieldDescriptorRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::OneofDescriptorRefProto* Arena::CreateMaybeMessage< ::zetasql::OneofDescriptorRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::OneofDescriptorRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ProcedureRefProto* Arena::CreateMaybeMessage< ::zetasql::ProcedureRefProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ProcedureRefProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ResolvedCollationProto* Arena::CreateMaybeMessage< ::zetasql::ResolvedCollationProto >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ResolvedCollationProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
