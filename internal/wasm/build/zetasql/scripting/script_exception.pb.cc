// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/scripting/script_exception.proto

#include "zetasql/scripting/script_exception.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScriptException_StackTraceFrame;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ScriptException_Internal;
}  // namespace protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto
namespace zetasql {
class ScriptException_StackTraceFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScriptException_StackTraceFrame>
      _instance;
} _ScriptException_StackTraceFrame_default_instance_;
class ScriptException_InternalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScriptException_Internal>
      _instance;
} _ScriptException_Internal_default_instance_;
class ScriptExceptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScriptException>
      _instance;
} _ScriptException_default_instance_;
}  // namespace zetasql
namespace protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto {
static void InitDefaultsScriptException_StackTraceFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ScriptException_StackTraceFrame_default_instance_;
    new (ptr) ::zetasql::ScriptException_StackTraceFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ScriptException_StackTraceFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScriptException_StackTraceFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScriptException_StackTraceFrame}, {}};

static void InitDefaultsScriptException_Internal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ScriptException_Internal_default_instance_;
    new (ptr) ::zetasql::ScriptException_Internal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ScriptException_Internal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScriptException_Internal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScriptException_Internal}, {
      &protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException_StackTraceFrame.base,}};

static void InitDefaultsScriptException() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::zetasql::_ScriptException_default_instance_;
    new (ptr) ::zetasql::ScriptException();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::zetasql::ScriptException::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScriptException =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScriptException}, {
      &protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException_Internal.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ScriptException_StackTraceFrame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScriptException_Internal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScriptException.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_StackTraceFrame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_StackTraceFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_StackTraceFrame, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_StackTraceFrame, column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_StackTraceFrame, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_StackTraceFrame, location_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_Internal, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_Internal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_Internal, statement_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException_Internal, stack_trace_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::zetasql::ScriptException, internal_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::zetasql::ScriptException_StackTraceFrame)},
  { 13, 20, sizeof(::zetasql::ScriptException_Internal)},
  { 22, 29, sizeof(::zetasql::ScriptException)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ScriptException_StackTraceFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ScriptException_Internal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::zetasql::_ScriptException_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "zetasql/scripting/script_exception.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(zetasql/scripting/script_exception.pro"
      "to\022\007zetasql\"\217\002\n\017ScriptException\022\017\n\007messa"
      "ge\030\001 \001(\t\0223\n\010internal\030\002 \001(\0132!.zetasql.Scr"
      "iptException.Internal\032S\n\017StackTraceFrame"
      "\022\014\n\004line\030\001 \001(\003\022\016\n\006column\030\002 \001(\003\022\020\n\010filena"
      "me\030\003 \001(\t\022\020\n\010location\030\004 \001(\t\032a\n\010Internal\022\026"
      "\n\016statement_text\030\001 \001(\t\022=\n\013stack_trace\030\002 "
      "\003(\0132(.zetasql.ScriptException.StackTrace"
      "Frame"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 325);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "zetasql/scripting/script_exception.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto
namespace zetasql {

// ===================================================================

void ScriptException_StackTraceFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScriptException_StackTraceFrame::kLineFieldNumber;
const int ScriptException_StackTraceFrame::kColumnFieldNumber;
const int ScriptException_StackTraceFrame::kFilenameFieldNumber;
const int ScriptException_StackTraceFrame::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScriptException_StackTraceFrame::ScriptException_StackTraceFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException_StackTraceFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ScriptException.StackTraceFrame)
}
ScriptException_StackTraceFrame::ScriptException_StackTraceFrame(const ScriptException_StackTraceFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location()) {
    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  ::memcpy(&line_, &from.line_,
    static_cast<size_t>(reinterpret_cast<char*>(&column_) -
    reinterpret_cast<char*>(&line_)) + sizeof(column_));
  // @@protoc_insertion_point(copy_constructor:zetasql.ScriptException.StackTraceFrame)
}

void ScriptException_StackTraceFrame::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&line_)) + sizeof(column_));
}

ScriptException_StackTraceFrame::~ScriptException_StackTraceFrame() {
  // @@protoc_insertion_point(destructor:zetasql.ScriptException.StackTraceFrame)
  SharedDtor();
}

void ScriptException_StackTraceFrame::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScriptException_StackTraceFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScriptException_StackTraceFrame::descriptor() {
  ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScriptException_StackTraceFrame& ScriptException_StackTraceFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException_StackTraceFrame.base);
  return *internal_default_instance();
}


void ScriptException_StackTraceFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ScriptException.StackTraceFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      location_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&line_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&column_) -
        reinterpret_cast<char*>(&line_)) + sizeof(column_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScriptException_StackTraceFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ScriptException.StackTraceFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_line();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_column();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ScriptException.StackTraceFrame.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ScriptException.StackTraceFrame.location");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ScriptException.StackTraceFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ScriptException.StackTraceFrame)
  return false;
#undef DO_
}

void ScriptException_StackTraceFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ScriptException.StackTraceFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 line = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->line(), output);
  }

  // optional int64 column = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->column(), output);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.StackTraceFrame.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // optional string location = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.StackTraceFrame.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ScriptException.StackTraceFrame)
}

::google::protobuf::uint8* ScriptException_StackTraceFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ScriptException.StackTraceFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 line = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->line(), target);
  }

  // optional int64 column = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->column(), target);
  }

  // optional string filename = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.StackTraceFrame.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // optional string location = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.StackTraceFrame.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->location(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ScriptException.StackTraceFrame)
  return target;
}

size_t ScriptException_StackTraceFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ScriptException.StackTraceFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string filename = 3;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string location = 4;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional int64 line = 1;
    if (has_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->line());
    }

    // optional int64 column = 2;
    if (has_column()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->column());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScriptException_StackTraceFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ScriptException.StackTraceFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const ScriptException_StackTraceFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScriptException_StackTraceFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ScriptException.StackTraceFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ScriptException.StackTraceFrame)
    MergeFrom(*source);
  }
}

void ScriptException_StackTraceFrame::MergeFrom(const ScriptException_StackTraceFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ScriptException.StackTraceFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_location();
      location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
    }
    if (cached_has_bits & 0x00000004u) {
      line_ = from.line_;
    }
    if (cached_has_bits & 0x00000008u) {
      column_ = from.column_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScriptException_StackTraceFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ScriptException.StackTraceFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScriptException_StackTraceFrame::CopyFrom(const ScriptException_StackTraceFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ScriptException.StackTraceFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScriptException_StackTraceFrame::IsInitialized() const {
  return true;
}

void ScriptException_StackTraceFrame::Swap(ScriptException_StackTraceFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScriptException_StackTraceFrame::InternalSwap(ScriptException_StackTraceFrame* other) {
  using std::swap;
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(line_, other->line_);
  swap(column_, other->column_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScriptException_StackTraceFrame::GetMetadata() const {
  protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScriptException_Internal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScriptException_Internal::kStatementTextFieldNumber;
const int ScriptException_Internal::kStackTraceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScriptException_Internal::ScriptException_Internal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException_Internal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ScriptException.Internal)
}
ScriptException_Internal::ScriptException_Internal(const ScriptException_Internal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      stack_trace_(from.stack_trace_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  statement_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_statement_text()) {
    statement_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statement_text_);
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ScriptException.Internal)
}

void ScriptException_Internal::SharedCtor() {
  statement_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ScriptException_Internal::~ScriptException_Internal() {
  // @@protoc_insertion_point(destructor:zetasql.ScriptException.Internal)
  SharedDtor();
}

void ScriptException_Internal::SharedDtor() {
  statement_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScriptException_Internal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScriptException_Internal::descriptor() {
  ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScriptException_Internal& ScriptException_Internal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException_Internal.base);
  return *internal_default_instance();
}


void ScriptException_Internal::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ScriptException.Internal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stack_trace_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    statement_text_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScriptException_Internal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ScriptException.Internal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string statement_text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statement_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->statement_text().data(), static_cast<int>(this->statement_text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ScriptException.Internal.statement_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .zetasql.ScriptException.StackTraceFrame stack_trace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stack_trace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ScriptException.Internal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ScriptException.Internal)
  return false;
#undef DO_
}

void ScriptException_Internal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ScriptException.Internal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string statement_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statement_text().data(), static_cast<int>(this->statement_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.Internal.statement_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->statement_text(), output);
  }

  // repeated .zetasql.ScriptException.StackTraceFrame stack_trace = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_trace_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stack_trace(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ScriptException.Internal)
}

::google::protobuf::uint8* ScriptException_Internal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ScriptException.Internal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string statement_text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->statement_text().data(), static_cast<int>(this->statement_text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.Internal.statement_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->statement_text(), target);
  }

  // repeated .zetasql.ScriptException.StackTraceFrame stack_trace = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stack_trace_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stack_trace(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ScriptException.Internal)
  return target;
}

size_t ScriptException_Internal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ScriptException.Internal)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .zetasql.ScriptException.StackTraceFrame stack_trace = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stack_trace_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stack_trace(static_cast<int>(i)));
    }
  }

  // optional string statement_text = 1;
  if (has_statement_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statement_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScriptException_Internal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ScriptException.Internal)
  GOOGLE_DCHECK_NE(&from, this);
  const ScriptException_Internal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScriptException_Internal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ScriptException.Internal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ScriptException.Internal)
    MergeFrom(*source);
  }
}

void ScriptException_Internal::MergeFrom(const ScriptException_Internal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ScriptException.Internal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stack_trace_.MergeFrom(from.stack_trace_);
  if (from.has_statement_text()) {
    set_has_statement_text();
    statement_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statement_text_);
  }
}

void ScriptException_Internal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ScriptException.Internal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScriptException_Internal::CopyFrom(const ScriptException_Internal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ScriptException.Internal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScriptException_Internal::IsInitialized() const {
  return true;
}

void ScriptException_Internal::Swap(ScriptException_Internal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScriptException_Internal::InternalSwap(ScriptException_Internal* other) {
  using std::swap;
  CastToBase(&stack_trace_)->InternalSwap(CastToBase(&other->stack_trace_));
  statement_text_.Swap(&other->statement_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScriptException_Internal::GetMetadata() const {
  protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScriptException::InitAsDefaultInstance() {
  ::zetasql::_ScriptException_default_instance_._instance.get_mutable()->internal_ = const_cast< ::zetasql::ScriptException_Internal*>(
      ::zetasql::ScriptException_Internal::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScriptException::kMessageFieldNumber;
const int ScriptException::kInternalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScriptException::ScriptException()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:zetasql.ScriptException)
}
ScriptException::ScriptException(const ScriptException& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_internal()) {
    internal_ = new ::zetasql::ScriptException_Internal(*from.internal_);
  } else {
    internal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:zetasql.ScriptException)
}

void ScriptException::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_ = NULL;
}

ScriptException::~ScriptException() {
  // @@protoc_insertion_point(destructor:zetasql.ScriptException)
  SharedDtor();
}

void ScriptException::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete internal_;
}

void ScriptException::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScriptException::descriptor() {
  ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScriptException& ScriptException::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::scc_info_ScriptException.base);
  return *internal_default_instance();
}


void ScriptException::Clear() {
// @@protoc_insertion_point(message_clear_start:zetasql.ScriptException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(internal_ != NULL);
      internal_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScriptException::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:zetasql.ScriptException)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "zetasql.ScriptException.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .zetasql.ScriptException.Internal internal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_internal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:zetasql.ScriptException)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:zetasql.ScriptException)
  return false;
#undef DO_
}

void ScriptException::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:zetasql.ScriptException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional .zetasql.ScriptException.Internal internal = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_internal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:zetasql.ScriptException)
}

::google::protobuf::uint8* ScriptException::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:zetasql.ScriptException)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string message = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "zetasql.ScriptException.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional .zetasql.ScriptException.Internal internal = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_internal(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:zetasql.ScriptException)
  return target;
}

size_t ScriptException::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:zetasql.ScriptException)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional .zetasql.ScriptException.Internal internal = 2;
    if (has_internal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *internal_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScriptException::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:zetasql.ScriptException)
  GOOGLE_DCHECK_NE(&from, this);
  const ScriptException* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScriptException>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:zetasql.ScriptException)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:zetasql.ScriptException)
    MergeFrom(*source);
  }
}

void ScriptException::MergeFrom(const ScriptException& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:zetasql.ScriptException)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_internal()->::zetasql::ScriptException_Internal::MergeFrom(from.internal());
    }
  }
}

void ScriptException::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:zetasql.ScriptException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScriptException::CopyFrom(const ScriptException& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:zetasql.ScriptException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScriptException::IsInitialized() const {
  return true;
}

void ScriptException::Swap(ScriptException* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScriptException::InternalSwap(ScriptException* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(internal_, other->internal_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScriptException::GetMetadata() const {
  protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_zetasql_2fscripting_2fscript_5fexception_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zetasql
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ScriptException_StackTraceFrame* Arena::CreateMaybeMessage< ::zetasql::ScriptException_StackTraceFrame >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ScriptException_StackTraceFrame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ScriptException_Internal* Arena::CreateMaybeMessage< ::zetasql::ScriptException_Internal >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ScriptException_Internal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::zetasql::ScriptException* Arena::CreateMaybeMessage< ::zetasql::ScriptException >(Arena* arena) {
  return Arena::CreateInternal< ::zetasql::ScriptException >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
